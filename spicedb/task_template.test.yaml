
relationships:
  # Alice leads the A organization
  - "organization:a#leader@user:alice"
  # Bob leads the B organization
  - "organization:b#leader@user:bob"
  # Bob is also, explicitly, a member of the B organization
  - "organization:b#member@user:bob"
  # Charlie is a common member
  - "organization:a#member@user:charlie"
  - "organization:b#member@user:charlie"
  # Clara is a common member, and leader of the A organization
  - "organization:a#leader@user:clara"
  - "organization:a#member@user:clara"
  - "organization:b#member@user:clara"
  # Oscar is only a member of one organization (A organization)
  - "organization:a#member@user:oscar"

  # ward A belongs to org A, and B to B
  - "ward:a#organization@organization:a"
  - "ward:b#organization@organization:b"

  # task_template A belongs to ward A,
  # and template B to user Bob
  - "task_template:a#owner@ward:a"
  - "task_template:b#owner@user:bob"

tests:
  - name: If the owner is a user, only the owner of a template can RUD it
    validate:
      - relation: "task_template:b#get"
        exhaustive:
          - "[user:bob] is <task_template:b#owner>"
      - relation: "task_template:b#update"
        exhaustive:
          - "[user:bob] is <task_template:b#owner>"
      - relation: "task_template:b#delete"
        exhaustive:
          - "[user:bob] is <task_template:b#owner>"
  - name: all members can get any template in their org (by transitivity)
    check:
      - "task_template:a#get@user:alice"
      - "task_template:a#get@user:charlie"
      - not: "task_template:a#get@user:bob"
