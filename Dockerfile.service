# you probably don't want to use this Dockerfile directly,
# use `make <svc>` instead

# builder builds a go service
# the build args SERVICE and VERSION must be set!

FROM golang:1.23-bookworm AS builder

ARG SERVICE
ARG VERSION

WORKDIR /build/app

COPY libs /libs
COPY gen /gen

COPY services/$SERVICE/go.* ./
RUN go mod download

COPY services/$SERVICE /build/app

# create migrations, if it does not exist already
# allows us to copy it into the production image w/o error
RUN mkdir -p migrations

RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-X main.Version=${VERSION}" -a -o app .

FROM alpine:3.20.2 AS production

WORKDIR /app

COPY --from=builder /build/app/app .
COPY --from=builder /build/app/migrations ./migrations
RUN chmod +x app

ENV PORT=80
ENV MODE=production
ENV LOG_LEVEL=info
ENV POSTGRES_PORT=5432

EXPOSE 80

CMD ["./app"]
