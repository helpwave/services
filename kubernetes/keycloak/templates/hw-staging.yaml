apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: hw-staging
  labels:
     {{- include "keycloak.labels" . | nindent 4 }}
spec:
  keycloakCRName: {{ include "keycloak.fullname" . }}
  realm:
    id: 9195f590-70c7-4115-8782-5ecf31650b15
    realm: hw-staging
    notBefore: 0
    defaultSignatureAlgorithm: RS256
    revokeRefreshToken: false
    refreshTokenMaxReuse: 0
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 900
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    ssoSessionIdleTimeoutRememberMe: 0
    ssoSessionMaxLifespanRememberMe: 0
    offlineSessionIdleTimeout: 2592000
    offlineSessionMaxLifespanEnabled: false
    offlineSessionMaxLifespan: 5184000
    clientSessionIdleTimeout: 0
    clientSessionMaxLifespan: 0
    clientOfflineSessionIdleTimeout: 0
    clientOfflineSessionMaxLifespan: 0
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    accessCodeLifespanLogin: 1800
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    oauth2DeviceCodeLifespan: 600
    oauth2DevicePollingInterval: 5
    enabled: true
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: true
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: true
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    roles:
      realm:
        - id: 86cd1bb6-b0a4-4ed6-a8b3-acab8bf0292f
          name: default-roles-hw-staging
          description: "${role_default-roles}"
          composite: true
          composites:
            realm:
              - offline_access
              - uma_authorization
          clientRole: false
          containerId: 9195f590-70c7-4115-8782-5ecf31650b15
          attributes: { }
        - id: 7e89dd00-316e-43a3-bdea-d3aaa767fe2e
          name: uma_authorization
          description: "${role_uma_authorization}"
          composite: false
          clientRole: false
          containerId: 9195f590-70c7-4115-8782-5ecf31650b15
          attributes: { }
        - id: 24e57654-5a05-4f5c-b6c1-645c58116328
          name: offline_access
          description: "${role_offline-access}"
          composite: false
          clientRole: false
          containerId: 9195f590-70c7-4115-8782-5ecf31650b15
          attributes: { }
      client:
        realm-management:
          - id: 07d93b46-4af2-41ec-baa1-eb75018cde51
            name: query-users
            description: "${role_query-users}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 172a38a4-73d3-43ac-b826-e8ad5d5ac138
            name: manage-identity-providers
            description: "${role_manage-identity-providers}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 2b7ce01a-e29a-4b6e-812c-633bb0f68b61
            name: manage-realm
            description: "${role_manage-realm}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: ad59087c-e798-44af-8182-1de841b0b5b6
            name: view-events
            description: "${role_view-events}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: b2e6792e-eeff-4659-bfe8-e37aa01c2ef3
            name: view-identity-providers
            description: "${role_view-identity-providers}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: '0869b0e2-8a44-49bc-a700-482237daea47'
            name: create-client
            description: "${role_create-client}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 8286a863-2ff4-44b6-88f0-f68d4feb2ccf
            name: query-realms
            description: "${role_query-realms}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: b20046e2-bbb4-470c-b6d2-814811f38888
            name: view-authorization
            description: "${role_view-authorization}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 572b0bee-9f2a-4079-93bc-4934ef60adf8
            name: impersonation
            description: "${role_impersonation}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 9bce4ee4-72d2-4601-99df-cf5ca942c31e
            name: manage-authorization
            description: "${role_manage-authorization}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 825dcca8-42f1-4db2-b76e-01d1a1c1dc65
            name: manage-clients
            description: "${role_manage-clients}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 8f6b4799-10d0-4771-b90e-74d12937c1a0
            name: view-clients
            description: "${role_view-clients}"
            composite: true
            composites:
              client:
                realm-management:
                  - query-clients
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 6bf0e213-d4f1-4ae5-bee4-77fe54d052b7
            name: manage-users
            description: "${role_manage-users}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: a355cd5b-2310-4b0f-ae80-344a3876171f
            name: query-clients
            description: "${role_query-clients}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 9bb004f0-5b7b-4c34-b56e-9ba48fd65aae
            name: query-groups
            description: "${role_query-groups}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 4ae9e84a-3edd-4101-a658-5decc5684d78
            name: view-realm
            description: "${role_view-realm}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: cc60cddc-2893-4ca3-9c8b-4af2b1b114d5
            name: view-users
            description: "${role_view-users}"
            composite: true
            composites:
              client:
                realm-management:
                  - query-users
                  - query-groups
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: 59e0c33f-9ed0-4cf6-b3ec-426ee6e3a843
            name: manage-events
            description: "${role_manage-events}"
            composite: false
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
          - id: e1d7d06b-76eb-4a13-b552-93030937eccc
            name: realm-admin
            description: "${role_realm-admin}"
            composite: true
            composites:
              client:
                realm-management:
                  - query-users
                  - manage-identity-providers
                  - view-events
                  - view-identity-providers
                  - manage-realm
                  - create-client
                  - query-realms
                  - view-authorization
                  - view-clients
                  - manage-clients
                  - manage-authorization
                  - impersonation
                  - manage-users
                  - query-clients
                  - query-groups
                  - view-realm
                  - view-users
                  - manage-events
            clientRole: true
            containerId: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
            attributes: { }
        user-svc: [ ]
        security-admin-console: [ ]
        auth-svc: [ ]
        admin-cli: [ ]
        account-console: [ ]
        broker: [ ]
        account:
          - id: 14689c14-2649-4ada-b491-e1e741cda80c
            name: view-groups
            composite: false
            clientRole: true
            containerId: 5e592aef-6096-4f36-b85e-a77ec119371c
            attributes: { }
          - id: 0a43095d-80e4-46e2-8166-0685189d6609
            name: delete-account
            description: "${role_delete-account}"
            composite: false
            clientRole: true
            containerId: 5e592aef-6096-4f36-b85e-a77ec119371c
            attributes: { }
          - id: 6f570b94-19e7-470c-a748-faf98e55a669
            name: manage-account
            composite: false
            clientRole: true
            containerId: 5e592aef-6096-4f36-b85e-a77ec119371c
            attributes: { }
    groups: [ ]
    defaultRole:
      id: 86cd1bb6-b0a4-4ed6-a8b3-acab8bf0292f
      name: default-roles-hw-staging
      description: "${role_default-roles}"
      composite: true
      clientRole: false
      containerId: 9195f590-70c7-4115-8782-5ecf31650b15
    requiredCredentials:
      - password
    otpPolicyType: totp
    otpPolicyAlgorithm: HmacSHA1
    otpPolicyInitialCounter: 0
    otpPolicyDigits: 6
    otpPolicyLookAheadWindow: 1
    otpPolicyPeriod: 30
    otpPolicyCodeReusable: false
    otpSupportedApplications:
      - totpAppGoogleName
      - totpAppFreeOTPName
    webAuthnPolicyRpEntityName: keycloak
    webAuthnPolicySignatureAlgorithms:
      - ES256
    webAuthnPolicyRpId: ''
    webAuthnPolicyAttestationConveyancePreference: not specified
    webAuthnPolicyAuthenticatorAttachment: not specified
    webAuthnPolicyRequireResidentKey: not specified
    webAuthnPolicyUserVerificationRequirement: not specified
    webAuthnPolicyCreateTimeout: 0
    webAuthnPolicyAvoidSameAuthenticatorRegister: false
    webAuthnPolicyAcceptableAaguids: [ ]
    webAuthnPolicyPasswordlessRpEntityName: keycloak
    webAuthnPolicyPasswordlessSignatureAlgorithms:
      - ES256
    webAuthnPolicyPasswordlessRpId: ''
    webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
    webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
    webAuthnPolicyPasswordlessRequireResidentKey: not specified
    webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
    webAuthnPolicyPasswordlessCreateTimeout: 0
    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
    webAuthnPolicyPasswordlessAcceptableAaguids: [ ]
    users:
      - id: 22823359-6ad7-4fb3-9be8-22bab110b003
        createdTimestamp: 1675260381656
        username: service-account-user-svc
        enabled: true
        totp: false
        emailVerified: false
        serviceAccountClientId: user-svc
        disableableCredentialTypes: [ ]
        requiredActions: [ ]
        realmRoles:
          - default-roles-hw-staging
        clientRoles:
          realm-management:
            - query-users
            - manage-users
            - view-users
        notBefore: 0
        groups: [ ]
    scopeMappings:
      - clientScope: offline_access
        roles:
          - offline_access
    clientScopeMappings:
      account:
        - client: account-console
          roles:
            - manage-account
            - view-groups
    clients:
      - id: 5e592aef-6096-4f36-b85e-a77ec119371c
        clientId: account
        name: "${client_account}"
        description: ''
        rootUrl: "${authBaseUrl}"
        adminUrl: ''
        baseUrl: "/realms/hw-staging/account/"
        surrogateAuthRequired: false
        enabled: false
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - "/realms/hw-staging/account/*"
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'true'
          post.logout.redirect.uris: "+"
          display.on.consent.screen: 'false'
          oauth2.device.authorization.grant.enabled: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: 14c21b28-893e-4e0d-b4a7-12ea74767f46
        clientId: account-console
        name: "${client_account-console}"
        description: ''
        rootUrl: "${authBaseUrl}"
        adminUrl: ''
        baseUrl: "/realms/hw-staging/account/"
        surrogateAuthRequired: false
        enabled: false
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - "/realms/hw-staging/account/*"
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'true'
          post.logout.redirect.uris: "+"
          display.on.consent.screen: 'false'
          oauth2.device.authorization.grant.enabled: 'false'
          pkce.code.challenge.method: S256
          backchannel.logout.revoke.offline.tokens: 'false'
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        protocolMappers:
          - id: aff66127-9f97-4851-a129-adb5c49106c8
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
            config: { }
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: 4da1037d-6253-4a11-8017-061d6dfed5aa
        clientId: admin-cli
        name: "${client_admin-cli}"
        description: ''
        rootUrl: ''
        adminUrl: ''
        baseUrl: ''
        surrogateAuthRequired: false
        enabled: false
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris: [ ]
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: false
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'true'
          post.logout.redirect.uris: "+"
          display.on.consent.screen: 'false'
          oauth2.device.authorization.grant.enabled: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: a507e547-3f8e-4e73-9e8b-30f1e8f7b4df
        clientId: auth-svc
        name: ''
        description: ''
        rootUrl: ''
        adminUrl: ''
        baseUrl: ''
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: {{ .Values.svcAuthSecret | required "svcAuthSecret required" | quote }}
        redirectUris:
          - {{ .Values.svcAuthCallback | quote }}
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: true
        protocol: openid-connect
        attributes:
          client.secret.creation.time: '1675260278'
          post.logout.redirect.uris: "+"
          oauth2.device.authorization.grant.enabled: 'false'
          use.jwks.url: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
          use.refresh.tokens: 'true'
          tls-client-certificate-bound-access-tokens: 'false'
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'true'
          client_credentials.use_refresh_token: 'false'
          acr.loa.map: "{}"
          require.pushed.authorization.requests: 'false'
          display.on.consent.screen: 'false'
          token.response.type.bearer.lower-case: 'false'
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        defaultClientScopes:
          - web-origins
          - profile
          - roles
          - email
        optionalClientScopes:
          - acr
          - address
          - phone
          - microprofile-jwt
      - id: 84dbc096-b575-42be-bee0-c15923ba14ef
        clientId: broker
        name: "${client_broker}"
        description: ''
        adminUrl: ''
        surrogateAuthRequired: false
        enabled: false
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris: [ ]
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: true
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: 8dbf219e-fb92-4e75-a6a6-6bb448d26f40
        clientId: realm-management
        name: "${client_realm-management}"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris: [ ]
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: true
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: 2a43c760-17d0-4a72-a426-2c569de7f2cf
        clientId: security-admin-console
        name: "${client_security-admin-console}"
        rootUrl: "${authAdminUrl}"
        baseUrl: "/admin/hw-staging/console/"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - "/admin/hw-staging/console/*"
        webOrigins:
          - "+"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
          pkce.code.challenge.method: S256
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        protocolMappers:
          - id: aa62983c-63b0-41f3-aea0-9c7dbca32195
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: locale
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: locale
              jsonType.label: String
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: bb9bab83-fd38-4451-98ba-d67a4667d527
        clientId: user-svc
        name: ''
        description: ''
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: {{ .Values.svcUserSecret | required "svcUserSecret required" | quote }}
        redirectUris: [ ]
        webOrigins: [ ]
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: false
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: true
        publicClient: false
        frontchannelLogout: true
        protocol: openid-connect
        attributes:
          oidc.ciba.grant.enabled: 'false'
          client.secret.creation.time: '1675260381'
          backchannel.logout.session.required: 'true'
          post.logout.redirect.uris: "+"
          oauth2.device.authorization.grant.enabled: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
        authenticationFlowBindingOverrides: { }
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        protocolMappers:
          - id: f4ac9f38-cbd5-4067-84c5-b5723f295032
            name: Client ID
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
            consentRequired: false
            config:
              user.session.note: clientId
              userinfo.token.claim: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: clientId
              jsonType.label: String
          - id: c75b3a3d-13c7-41f8-8296-4d60c0b78036
            name: Client IP Address
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
            consentRequired: false
            config:
              user.session.note: clientAddress
              userinfo.token.claim: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: clientAddress
              jsonType.label: String
          - id: 51cb76d2-8193-4286-bd1c-ccd509c98969
            name: Client Host
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
            consentRequired: false
            config:
              user.session.note: clientHost
              userinfo.token.claim: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: clientHost
              jsonType.label: String
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
    clientScopes:
      - id: d6067f5a-3441-44d2-b8c4-136059b058d0
        name: web-origins
        description: OpenID Connect scope for add allowed web origins to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'false'
          display.on.consent.screen: 'false'
          consent.screen.text: ''
        protocolMappers:
          - id: 43dc0131-178b-46d3-9155-172d4eb067ad
            name: allowed web origins
            protocol: openid-connect
            protocolMapper: oidc-allowed-origins-mapper
            consentRequired: false
            config: { }
      - id: a95127b5-a1b4-4a73-a58c-2d0bfc0f1666
        name: acr
        description: OpenID Connect scope for add acr (authentication context class reference)
          to the token
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'false'
          display.on.consent.screen: 'false'
        protocolMappers:
          - id: 3bb93a1f-a230-40d8-ba1a-5ad240234dcd
            name: acr loa level
            protocol: openid-connect
            protocolMapper: oidc-acr-mapper
            consentRequired: false
            config:
              id.token.claim: 'true'
              access.token.claim: 'true'
              userinfo.token.claim: 'true'
      - id: ead08ad6-72ec-447f-928e-ad30a5aabd7f
        name: profile
        description: 'OpenID Connect built-in scope: profile'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${profileScopeConsentText}"
        protocolMappers:
          - id: a6edb5f6-e871-4688-bd46-681f5ac84d2c
            name: birthdate
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: birthdate
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: birthdate
              jsonType.label: String
          - id: 2699ac00-5105-49dd-82b5-fc3053c0fd53
            name: middle name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: middleName
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: middle_name
              jsonType.label: String
          - id: 4bf4ad5c-4bf1-4982-b825-51a338861801
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: locale
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: locale
              jsonType.label: String
          - id: 486009df-4281-4c25-b41d-6f2f94ddca72
            name: full name
            protocol: openid-connect
            protocolMapper: oidc-full-name-mapper
            consentRequired: false
            config:
              id.token.claim: 'true'
              access.token.claim: 'true'
              userinfo.token.claim: 'true'
          - id: 282c6ef2-93b7-467f-b3f8-9b50f286d945
            name: nickname
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: nickname
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: nickname
              jsonType.label: String
          - id: 1afdf600-5798-4666-8976-e2c338b5c374
            name: given name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: firstName
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: given_name
              jsonType.label: String
          - id: 56365b19-06d0-4437-a0e6-571b64b9aa17
            name: website
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: website
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: website
              jsonType.label: String
          - id: c1bc0b36-f760-4935-acdb-d80ab99c471c
            name: family name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: lastName
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: family_name
              jsonType.label: String
          - id: 7c6133e7-0226-4c2c-9e5a-54765cd24b63
            name: username
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: username
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: preferred_username
              jsonType.label: String
          - id: 62765eb8-a1fe-4f84-9d8e-7d4389dc74dd
            name: zoneinfo
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: zoneinfo
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: zoneinfo
              jsonType.label: String
          - id: 0a19fd1a-3dc2-43e8-89e7-1baad730bca0
            name: profile
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: profile
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: profile
              jsonType.label: String
          - id: 5f5bd9d1-e4e8-49fb-85a6-f75ddde10254
            name: picture
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: picture
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: picture
              jsonType.label: String
          - id: bc1d0aca-910a-43cb-aa10-155f8a8d5002
            name: gender
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: gender
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: gender
              jsonType.label: String
          - id: 56f880ba-7ae6-478e-8b84-b7d9067ebdff
            name: updated at
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: updatedAt
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: updated_at
              jsonType.label: long
      - id: 31895551-b2ff-4192-9768-03fdac549885
        name: address
        description: 'OpenID Connect built-in scope: address'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${addressScopeConsentText}"
        protocolMappers:
          - id: 4e789d81-2d41-408b-a027-83bcb47c3a62
            name: address
            protocol: openid-connect
            protocolMapper: oidc-address-mapper
            consentRequired: false
            config:
              user.attribute.formatted: formatted
              user.attribute.country: country
              user.attribute.postal_code: postal_code
              userinfo.token.claim: 'true'
              user.attribute.street: street
              id.token.claim: 'true'
              user.attribute.region: region
              access.token.claim: 'true'
              user.attribute.locality: locality
      - id: 01dc7ce1-b5eb-44a4-99e3-88dfe2684202
        name: offline_access
        description: 'OpenID Connect built-in scope: offline_access'
        protocol: openid-connect
        attributes:
          consent.screen.text: "${offlineAccessScopeConsentText}"
          display.on.consent.screen: 'true'
      - id: 86c73422-2955-47b4-9870-7ef9e9357e06
        name: roles
        description: OpenID Connect scope for add user roles to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'false'
          display.on.consent.screen: 'true'
          consent.screen.text: "${rolesScopeConsentText}"
        protocolMappers:
          - id: ce041de4-650d-48fd-a192-1894024d4df7
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: 'true'
              claim.name: resource_access.${client_id}.roles
              jsonType.label: String
              multivalued: 'true'
          - id: 695abac6-f6b7-46c0-b6f2-762e0e00f3e0
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
            config: { }
          - id: bd0488ee-4884-4633-975e-4dd6c618ebdf
            name: realm roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: 'true'
              claim.name: realm_access.roles
              jsonType.label: String
              multivalued: 'true'
      - id: eb4bc7d8-60a9-4da8-ba3a-77937ec1ec13
        name: role_list
        description: SAML role list
        protocol: saml
        attributes:
          consent.screen.text: "${samlRoleListScopeConsentText}"
          display.on.consent.screen: 'true'
        protocolMappers:
          - id: 19ac86db-4e23-4853-89b9-0d18dbec69a6
            name: role list
            protocol: saml
            protocolMapper: saml-role-list-mapper
            consentRequired: false
            config:
              single: 'false'
              attribute.nameformat: Basic
              attribute.name: Role
      - id: d04a813e-d075-4432-962d-427642645058
        name: phone
        description: 'OpenID Connect built-in scope: phone'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${phoneScopeConsentText}"
        protocolMappers:
          - id: 73ce5215-fb16-40d1-8741-4316149c0255
            name: phone number verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: phoneNumberVerified
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: phone_number_verified
              jsonType.label: boolean
          - id: 04566de2-bd60-4e31-ac9a-a28b5fa587cf
            name: phone number
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: phoneNumber
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: phone_number
              jsonType.label: String
      - id: 6c983976-fc45-4f26-8ab7-71e9ffbc8b01
        name: microprofile-jwt
        description: Microprofile - JWT built-in scope
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'false'
        protocolMappers:
          - id: cd8c4dda-6740-4627-9dbc-bc69f9b77f45
            name: groups
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              multivalued: 'true'
              userinfo.token.claim: 'true'
              user.attribute: foo
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: groups
              jsonType.label: String
          - id: 66507bd4-36bd-4ce7-bac2-3ae52662e34a
            name: upn
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: username
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: upn
              jsonType.label: String
      - id: 0b933ce5-3b96-48e4-95c1-4c73a7a238a3
        name: email
        description: 'OpenID Connect built-in scope: email'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${emailScopeConsentText}"
        protocolMappers:
          - id: 63f9def7-64fb-4b8a-94b3-627128d7e5ca
            name: email
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: email
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: email
              jsonType.label: String
          - id: 3b70dd78-89d6-44e7-8fab-01f18aa4bed3
            name: email verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: emailVerified
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: email_verified
              jsonType.label: boolean
    defaultDefaultClientScopes:
      - role_list
      - profile
      - email
      - roles
      - web-origins
      - acr
    defaultOptionalClientScopes:
      - offline_access
      - address
      - phone
      - microprofile-jwt
    browserSecurityHeaders:
      contentSecurityPolicyReportOnly: ''
      xContentTypeOptions: nosniff
      xRobotsTag: none
      xFrameOptions: SAMEORIGIN
      contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
      xXSSProtection: 1; mode=block
      strictTransportSecurity: max-age=31536000; includeSubDomains
    smtpServer: { }
    loginTheme: keycloak
    accountTheme: ''
    adminTheme: ''
    emailTheme: ''
    eventsEnabled: true
    eventsExpiration: 1209600
    eventsListeners:
      - jboss-logging
    enabledEventTypes: [ ]
    adminEventsEnabled: true
    adminEventsDetailsEnabled: false
    identityProviders: [ ]
    identityProviderMappers: [ ]
    components:
      org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
        - id: 23ec4d30-5f31-4d4c-ba13-736d82aedb77
          name: Full Scope Disabled
          providerId: scope
          subType: anonymous
          subComponents: { }
          config: { }
        - id: 87702998-4ead-4f86-ba81-4e82efc56bc8
          name: Max Clients Limit
          providerId: max-clients
          subType: anonymous
          subComponents: { }
          config:
            max-clients:
              - '200'
        - id: 02fcb79c-ffb5-4ba0-9b95-a8ab302a11b6
          name: Trusted Hosts
          providerId: trusted-hosts
          subType: anonymous
          subComponents: { }
          config:
            host-sending-registration-request-must-match:
              - 'true'
            client-uris-must-match:
              - 'true'
        - id: e4b0c5c6-36f7-4107-b321-9d5c44eed08a
          name: Allowed Protocol Mapper Types
          providerId: allowed-protocol-mappers
          subType: authenticated
          subComponents: { }
          config:
            allowed-protocol-mapper-types:
              - oidc-address-mapper
              - oidc-usermodel-attribute-mapper
              - oidc-full-name-mapper
              - saml-user-attribute-mapper
              - oidc-sha256-pairwise-sub-mapper
              - saml-user-property-mapper
              - oidc-usermodel-property-mapper
              - saml-role-list-mapper
        - id: abe1d9fc-0710-44c7-923d-a39c235c82bd
          name: Allowed Client Scopes
          providerId: allowed-client-templates
          subType: anonymous
          subComponents: { }
          config:
            allow-default-scopes:
              - 'true'
        - id: 3c2fb077-b548-48b6-82e6-f99732d132e8
          name: Allowed Protocol Mapper Types
          providerId: allowed-protocol-mappers
          subType: anonymous
          subComponents: { }
          config:
            allowed-protocol-mapper-types:
              - oidc-usermodel-attribute-mapper
              - saml-user-attribute-mapper
              - oidc-sha256-pairwise-sub-mapper
              - oidc-usermodel-property-mapper
              - oidc-full-name-mapper
              - saml-user-property-mapper
              - saml-role-list-mapper
              - oidc-address-mapper
        - id: 2345dcd4-5314-47b9-9eb8-34491d6be720
          name: Allowed Client Scopes
          providerId: allowed-client-templates
          subType: authenticated
          subComponents: { }
          config:
            allow-default-scopes:
              - 'true'
        - id: c7983e8e-c91e-496c-9a5e-baf5d3a76f02
          name: Consent Required
          providerId: consent-required
          subType: anonymous
          subComponents: { }
          config: { }
      org.keycloak.keys.KeyProvider:
        - id: 68e46043-7f5d-44fe-a120-e9e7f2d7142d
          name: hmac-generated
          providerId: hmac-generated
          subComponents: { }
          config:
            priority:
              - '100'
            algorithm:
              - HS256
        - id: 3a3d5f7f-a037-4849-aac7-9a4141b0cbf0
          name: rsa-generated
          providerId: rsa-generated
          subComponents: { }
          config:
            priority:
              - '100'
        - id: 677aa4e2-51d4-4a52-94a5-09ebbb3ae6ef
          name: rsa-enc-generated
          providerId: rsa-enc-generated
          subComponents: { }
          config:
            priority:
              - '100'
            algorithm:
              - RSA-OAEP
        - id: 91461320-009b-4405-ba35-85c42e2cb9d2
          name: aes-generated
          providerId: aes-generated
          subComponents: { }
          config:
            priority:
              - '100'
    internationalizationEnabled: false
    supportedLocales: [ ]
    authenticationFlows:
      - id: 9f84766c-a65f-4b86-8489-2ad9d7f29a1a
        alias: Account verification options
        description: Method with which to verity the existing account
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-email-verification
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: true
            flowAlias: Verify Existing Account by Re-authentication
            userSetupAllowed: false
      - id: b27dd153-d4ef-4737-be76-dacabce8c24b
        alias: Authentication Options
        description: Authentication options.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: basic-auth
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: basic-auth-otp
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
      - id: 78cae298-ca74-4973-86b6-6f36149bb7b4
        alias: Browser - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: 7f8a1a5b-f2c7-4729-ab82-169014944cd4
        alias: Direct Grant - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-otp
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: '00721039-5d2a-460f-8cd0-a563f2b2b506'
        alias: First broker login - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: ad87d1ec-343c-4026-9647-0621b68e7c5f
        alias: Handle Existing Account
        description: Handle what to do if there is existing account with same email/username
          like authenticated identity provider
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-confirm-link
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: Account verification options
            userSetupAllowed: false
      - id: 8e121b81-a172-4386-8672-f68a89950990
        alias: Reset - Conditional OTP
        description: Flow to determine if the OTP should be reset or not. Set to REQUIRED
          to force.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-otp
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: b3042952-043e-4abd-8ed3-db8edd5457ff
        alias: User creation or linking
        description: Flow for the existing/non-existing user alternatives
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticatorConfig: create unique user config
            authenticator: idp-create-user-if-unique
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: true
            flowAlias: Handle Existing Account
            userSetupAllowed: false
      - id: b87ccd38-8dc5-41ec-9561-c1db2734153f
        alias: Verify Existing Account by Re-authentication
        description: Reauthentication of existing account
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 20
            autheticatorFlow: true
            flowAlias: First broker login - Conditional OTP
            userSetupAllowed: false
      - id: a5368e48-53ce-4986-8ef4-b551780ab8ca
        alias: browser
        description: browser based authentication
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 25
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: true
            flowAlias: forms
            userSetupAllowed: false
      - id: 28ddadd3-247d-43ff-b5e3-b9175c73727a
        alias: clients
        description: Base authentication for clients
        providerId: client-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: client-secret
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-secret-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-x509
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
      - id: 5ad232dc-bdda-4df8-a03c-fdcaa3ad2270
        alias: direct grant
        description: OpenID Connect Resource Owner Grant
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: direct-grant-validate-username
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 30
            autheticatorFlow: true
            flowAlias: Direct Grant - Conditional OTP
            userSetupAllowed: false
      - id: 295b3bf5-0976-4a84-a7d6-c9a778f0c1fe
        alias: docker auth
        description: Used by Docker clients to authenticate against the IDP
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: docker-http-basic-authenticator
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
      - id: 4eb5f1eb-bd52-4e64-b4f7-56fad779989e
        alias: first broker login
        description: Actions taken after first broker login with identity provider account,
          which is not yet linked to any Keycloak account
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticatorConfig: review profile config
            authenticator: idp-review-profile
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: User creation or linking
            userSetupAllowed: false
      - id: 81ad09ac-f85a-4dc9-901d-04d1a8b23037
        alias: forms
        description: Username, password, otp and other auth forms.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 20
            autheticatorFlow: true
            flowAlias: Browser - Conditional OTP
            userSetupAllowed: false
      - id: 3701fecc-22ea-4cc7-8c1d-9ade87131830
        alias: http challenge
        description: An authentication flow based on challenge-response HTTP Authentication
          Schemes
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: no-cookie-redirect
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: Authentication Options
            userSetupAllowed: false
      - id: 19d79d32-2157-4483-904e-77187a8cd9d1
        alias: registration
        description: registration flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-page-form
            authenticatorFlow: true
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: true
            flowAlias: registration form
            userSetupAllowed: false
      - id: 16ac2db0-3b28-4023-bdc6-9872a014a62f
        alias: registration form
        description: registration form
        providerId: form-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-user-creation
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-profile-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-password-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 50
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-recaptcha-action
            authenticatorFlow: false
            requirement: DISABLED
            priority: 60
            autheticatorFlow: false
            userSetupAllowed: false
      - id: aab701d7-f213-4421-a3d7-bb22e84c8a4b
        alias: reset credentials
        description: Reset credentials for a user if they forgot their password or something
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: reset-credentials-choose-user
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-credential-email
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 40
            autheticatorFlow: true
            flowAlias: Reset - Conditional OTP
            userSetupAllowed: false
      - id: 7529ef67-62e0-44c6-ba6d-0f1ef77774e6
        alias: saml ecp
        description: SAML ECP Profile Authentication Flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: http-basic-authenticator
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
    authenticatorConfig:
      - id: b5c484a1-78e0-40d6-816a-3208eab0a3e2
        alias: create unique user config
        config:
          require.password.update.after.registration: 'false'
      - id: f724aa6a-cd06-4d63-84d7-f66689c3cf01
        alias: review profile config
        config:
          update.profile.on.first.login: missing
    requiredActions:
      - alias: CONFIGURE_TOTP
        name: Configure OTP
        providerId: CONFIGURE_TOTP
        enabled: true
        defaultAction: false
        priority: 10
        config: { }
      - alias: terms_and_conditions
        name: Terms and Conditions
        providerId: terms_and_conditions
        enabled: false
        defaultAction: false
        priority: 20
        config: { }
      - alias: UPDATE_PASSWORD
        name: Update Password
        providerId: UPDATE_PASSWORD
        enabled: true
        defaultAction: false
        priority: 30
        config: { }
      - alias: UPDATE_PROFILE
        name: Update Profile
        providerId: UPDATE_PROFILE
        enabled: true
        defaultAction: false
        priority: 40
        config: { }
      - alias: VERIFY_EMAIL
        name: Verify Email
        providerId: VERIFY_EMAIL
        enabled: true
        defaultAction: false
        priority: 50
        config: { }
      - alias: delete_account
        name: Delete Account
        providerId: delete_account
        enabled: false
        defaultAction: false
        priority: 60
        config: { }
      - alias: webauthn-register
        name: Webauthn Register
        providerId: webauthn-register
        enabled: true
        defaultAction: false
        priority: 70
        config: { }
      - alias: webauthn-register-passwordless
        name: Webauthn Register Passwordless
        providerId: webauthn-register-passwordless
        enabled: true
        defaultAction: false
        priority: 80
        config: { }
      - alias: update_user_locale
        name: Update User Locale
        providerId: update_user_locale
        enabled: true
        defaultAction: false
        priority: 1000
        config: { }
    browserFlow: browser
    registrationFlow: registration
    directGrantFlow: direct grant
    resetCredentialsFlow: reset credentials
    clientAuthenticationFlow: clients
    dockerAuthenticationFlow: docker auth
    attributes:
      cibaBackchannelTokenDeliveryMode: poll
      cibaAuthRequestedUserHint: login_hint
      clientOfflineSessionMaxLifespan: '0'
      oauth2DevicePollingInterval: '5'
      clientSessionIdleTimeout: '0'
      clientOfflineSessionIdleTimeout: '0'
      cibaInterval: '5'
      realmReusableOtpCode: 'false'
      cibaExpiresIn: '120'
      oauth2DeviceCodeLifespan: '600'
      parRequestUriLifespan: '60'
      clientSessionMaxLifespan: '0'
      adminEventsExpiration: ''
    keycloakVersion: 20.0.3
    userManagedAccessAllowed: false
    clientProfiles:
      profiles: [ ]
    clientPolicies:
      policies: [ ]
