// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BedsColumns holds the columns for the "beds" table.
	BedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647, Default: "Unnamed Bed"},
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "room_beds", Type: field.TypeUUID},
	}
	// BedsTable holds the schema information for the "beds" table.
	BedsTable = &schema.Table{
		Name:       "beds",
		Columns:    BedsColumns,
		PrimaryKey: []*schema.Column{BedsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "beds_rooms_beds",
				Columns:    []*schema.Column{BedsColumns[3]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "human_readable_identifier", Type: field.TypeString, Size: 2147483647},
		{Name: "notes", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "is_discharged", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "bed_patient", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:       "patients",
		Columns:    PatientsColumns,
		PrimaryKey: []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "patients_beds_patient",
				Columns:    []*schema.Column{PatientsColumns[7]},
				RefColumns: []*schema.Column{BedsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "ward_rooms", Type: field.TypeUUID},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rooms_wards_rooms",
				Columns:    []*schema.Column{RoomsColumns[3]},
				RefColumns: []*schema.Column{WardsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SubTasksColumns holds the columns for the "sub_tasks" table.
	SubTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "done", Type: field.TypeBool, Default: false},
		{Name: "creation_date", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "task_subtasks", Type: field.TypeUUID},
	}
	// SubTasksTable holds the schema information for the "sub_tasks" table.
	SubTasksTable = &schema.Table{
		Name:       "sub_tasks",
		Columns:    SubTasksColumns,
		PrimaryKey: []*schema.Column{SubTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sub_tasks_tasks_subtasks",
				Columns:    []*schema.Column{SubTasksColumns[5]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "public", Type: field.TypeBool, Default: false},
		{Name: "status", Type: field.TypeInt32},
		{Name: "due_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "assigned_user_id", Type: field.TypeUUID},
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "patient_tasks", Type: field.TypeUUID, Nullable: true},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tasks_patients_tasks",
				Columns:    []*schema.Column{TasksColumns[9]},
				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TaskTemplatesColumns holds the columns for the "task_templates" table.
	TaskTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "ward_task_templates", Type: field.TypeUUID, Nullable: true},
	}
	// TaskTemplatesTable holds the schema information for the "task_templates" table.
	TaskTemplatesTable = &schema.Table{
		Name:       "task_templates",
		Columns:    TaskTemplatesColumns,
		PrimaryKey: []*schema.Column{TaskTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_templates_wards_task_templates",
				Columns:    []*schema.Column{TaskTemplatesColumns[5]},
				RefColumns: []*schema.Column{WardsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TaskTemplateSubTasksColumns holds the columns for the "task_template_sub_tasks" table.
	TaskTemplateSubTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "task_template_subtasks", Type: field.TypeUUID},
	}
	// TaskTemplateSubTasksTable holds the schema information for the "task_template_sub_tasks" table.
	TaskTemplateSubTasksTable = &schema.Table{
		Name:       "task_template_sub_tasks",
		Columns:    TaskTemplateSubTasksColumns,
		PrimaryKey: []*schema.Column{TaskTemplateSubTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_template_sub_tasks_task_templates_subtasks",
				Columns:    []*schema.Column{TaskTemplateSubTasksColumns[2]},
				RefColumns: []*schema.Column{TaskTemplatesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WardsColumns holds the columns for the "wards" table.
	WardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "organization_id", Type: field.TypeUUID},
	}
	// WardsTable holds the schema information for the "wards" table.
	WardsTable = &schema.Table{
		Name:       "wards",
		Columns:    WardsColumns,
		PrimaryKey: []*schema.Column{WardsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BedsTable,
		PatientsTable,
		RoomsTable,
		SubTasksTable,
		TasksTable,
		TaskTemplatesTable,
		TaskTemplateSubTasksTable,
		WardsTable,
	}
)

func init() {
	BedsTable.ForeignKeys[0].RefTable = RoomsTable
	PatientsTable.ForeignKeys[0].RefTable = BedsTable
	RoomsTable.ForeignKeys[0].RefTable = WardsTable
	SubTasksTable.ForeignKeys[0].RefTable = TasksTable
	TasksTable.ForeignKeys[0].RefTable = PatientsTable
	TaskTemplatesTable.ForeignKeys[0].RefTable = WardsTable
	TaskTemplateSubTasksTable.ForeignKeys[0].RefTable = TaskTemplatesTable
}
