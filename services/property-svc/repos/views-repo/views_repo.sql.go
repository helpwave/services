// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: views_repo.sql

package viewsrepo

import (
	"context"

	"github.com/google/uuid"
)

type AddToAlwaysIncludeParams struct {
	RuleID            uuid.UUID
	PropertyID        uuid.UUID
	DontAlwaysInclude bool
}

const createRule = `-- name: CreateRule :exec
INSERT INTO property_view_rules (rule_id) VALUES ($1)
`

func (q *Queries) CreateRule(ctx context.Context, id uuid.UUID) error {
	_, err := q.db.Exec(ctx, createRule, id)
	return err
}

const deleteFromAlwaysInclude = `-- name: DeleteFromAlwaysInclude :exec
DELETE FROM property_view_filter_always_include_items
	WHERE (
		rule_id = $1 AND
		property_id = ANY($2 :: uuid[])
	)
`

type DeleteFromAlwaysIncludeParams struct {
	RuleID      uuid.UUID
	PropertyIds []uuid.UUID
}

func (q *Queries) DeleteFromAlwaysInclude(ctx context.Context, arg DeleteFromAlwaysIncludeParams) error {
	_, err := q.db.Exec(ctx, deleteFromAlwaysInclude, arg.RuleID, arg.PropertyIds)
	return err
}
