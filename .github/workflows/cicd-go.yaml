name: 'CICD Go'

on:
  workflow_call:
    inputs:
      deploy:
        description: 'Should the CD run?'
        type: boolean
        default: false
      service:
        description: 'The name of the service.'
        type: string
        required: true

permissions:
  contents: read
  pull-requests: read

# We cannot use the global "defaults" syntax. ${{ inputs.service }} will not resolve.
# defaults:
#   run:
#     working-directory: services/${{ inputs.service }}

env:
  GO_VERSION: '1.19'

jobs:

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/${{ inputs.service }}
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v4

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/_go.sum') }}

      - uses: golangci/golangci-lint-action@v3
        with:
          # Can this be a bug in golangci-lint? We already defined the working-directory for this step.
          working-directory: services/${{ inputs.service }}

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/${{ inputs.service }}
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v4

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/_go.sum') }}

      - name: Install dependencies
        run: go get .

      - name: Test
        run: go test -v -race ./...

  docker:
    needs: [ lint, test ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Lowercase github.repository_owner
        run: |
          echo "REPOSITORY_OWNER_LC=${REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}

      - name: Image name
        run: |
          echo "IMAGE_NAME=ghcr.io/${{ env.REPOSITORY_OWNER_LC }}/${{ inputs.service }}" >>${GITHUB_ENV}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=branch,prefix=branch-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Login to GitHub Container Registry
        if: inputs.deploy
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - id: commit
        uses: pr-mpt/actions-commit-hash@v2
        with:
          commit: "${{ github.sha }}"

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.service
          platforms: linux/amd64
          push: ${{ inputs.deploy }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            SERVICE=${{ inputs.service }}
            VERSION=${{ steps.commit.outputs.short }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Check manifest
        if: inputs.deploy
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
