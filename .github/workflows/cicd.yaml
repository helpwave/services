name: cicd

on:
  push:
    branches: [ '*' ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.aggregate-changes.outputs.services }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes in libs
        id: changes-in-libs
        uses: tj-actions/changed-files@v39
        with:
          files: |
            .github/**
            libs/**
            .dockerignore
            Dockerfile.service

      - name: Detect changes in services
        id: changes-in-services
        uses: tj-actions/changed-files@v39
        with:
          files: |
            services/auth-svc/**
            services/emergency-room-svc/**
            services/ory-svc/**
            services/task-svc/**
            services/user-svc/**

      - name: Detect changes in images
        id: changes-in-images
        uses: tj-actions/changed-files@v39
        with:
          files: |
            images/**

      - name: Aggregate changes
        id: aggregate-changes
        run: |
          if [[ "$libsChanged" == "true" ]]; then
            echo "services=$(ls services | grep -v 'impulse_svc' | uniq | jq -R . | jq -sc .)" >> $GITHUB_OUTPUT
          else
            echo "services=$(echo $changesInServices | awk -F / '$1 ~ /services/ {print $2}' | uniq | jq -R . | jq -sc .)" >> $GITHUB_OUTPUT
          fi
          echo "images=$(echo $changesInImages | awk -F / '$1 ~ /images/ {print $2}' | uniq | jq -R . | jq -sc .)" >> $GITHUB_OUTPUT
        env:
          libsChanged: ${{ steps.changes-in-libs.outputs.any_changed }}
          changesInServices: ${{ steps.changes-in-services.outputs.all_changed_files }}
          changesInImages: ${{ steps.changes-in-images.outputs.all_changed_files }}

      - name: Summarize
        run: |
          echo "services: $services" >> $GITHUB_STEP_SUMMARY
          echo "images: $images" >> $GITHUB_STEP_SUMMARY
        env:
          services: ${{ steps.aggregate-changes.outputs.services }}
          images: ${{ steps.aggregate-changes.outputs.images }}

  cicd-go:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.services != '[]' && needs.detect-changes.outputs.services != '' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    permissions:
      contents: read
      pull-requests: read
      packages: write
    uses: ./.github/workflows/cicd-go.yaml
    with:
      deploy: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) }}
      service: ${{ matrix.service }}
    secrets: inherit

  cicd-images:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.images != '[]' && needs.detect-changes.outputs.images != '' }}
    strategy:
      matrix:
        image: ${{ fromJson(needs.detect-changes.outputs.images) }}
    permissions:
      contents: read
      pull-requests: read
      packages: write
    uses: ./.github/workflows/cicd-images.yaml
    with:
      deploy: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) }}
      image: ${{ matrix.image }}
    secrets: inherit

  fly-deploy:
    needs: detect-changes
    if: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && needs.detect-changes.outputs.services != '[]' && needs.detect-changes.outputs.services != '' }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    uses: ./.github/workflows/fly-deploy.yaml
    with:
      service: ${{ matrix.service }}
      app: ${{ vars.FLY_ORGANIZATION_NAME }}-${{ matrix.service }}
      organization: ${{ vars.FLY_ORGANIZATION_NAME }}
    secrets: inherit
