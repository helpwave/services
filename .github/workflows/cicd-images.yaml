name: 'CICD images'

on:
  workflow_call:
    inputs:
      deploy:
        description: 'Should the CD run?'
        type: boolean
        default: false
      image:
        description: 'The name of the image.'
        type: string
        required: true
      custom_tag:
        description: 'This tag will the used when pushing the image'
        type: string
        required: false
        default: ''

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Lowercase github.repository_owner
        run: |
          echo "REPOSITORY_OWNER_LC=${REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}

      - name: Image name
        run: |
          echo "IMAGE_NAME=ghcr.io/${{ env.REPOSITORY_OWNER_LC }}/${{ inputs.image }}" >>${GITHUB_ENV}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=branch,prefix=branch-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Login to GitHub Container Registry
        if: inputs.deploy
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build
        id: build
        uses: docker/build-push-action@v6
        with:
          context: images/${{ inputs.image }}
          platforms: linux/amd64
          push: ${{ inputs.deploy }}
          tags: ${{ inputs.custom_tag && format('{0}:{1}', env.IMAGE_NAME, inputs.custom_tag) || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Check manifest
        if: inputs.deploy
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
