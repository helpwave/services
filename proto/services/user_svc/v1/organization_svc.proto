syntax = "proto3";

package proto.services.user_svc.v1;

option go_package = "gen/proto/services/user-svc";

//
// CreateOrganization
//

message CreateOrganizationRequest {
  string long_name = 1; // @gotags: validate:"required,gte=4,lte=64"
  string short_name = 2; // @gotags: validate:"omitempty,gte=2,lte=16"
  string contact_email = 3; // @gotags: validate:"required,email"
  bool is_personal = 4; // @gotags: validate:"required"
}

message CreateOrganizationResponse {
  string id = 1;
}

//
// CreateOrganizationForUser
//

message CreateOrganizationForUserRequest {
  string long_name = 1; // @gotags: validate:"required,gte=4,lte=64"
  string short_name = 2; // @gotags: validate:"omitempty,gte=2,lte=16"
  string contact_email = 3; // @gotags: validate:"required,email"
  bool is_personal = 4; // @gotags: validate:"required"
  string user_id = 5; // @gotags: validate:"uuid4"
}

message CreateOrganizationForUserResponse {
  string id = 1;
}

//
// GetOrganization
//

message GetOrganizationMember {
  string user_id = 1;
}

message GetOrganizationRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetOrganizationResponse {
  string id = 1;
  string long_name = 2;
  string short_name = 3;
  string contact_email = 4;
  string avatar_url = 5;
  bool is_personal = 6;
  repeated GetOrganizationMember members = 7;
}

//
// GetOrganizationsByUser
//

message GetOrganizationsByUserMember {
  string user_id = 1;
}

message GetOrganizationsByUserRequest {
  string user_id = 1; // @gotags: validate:"uuid4"
}

message GetOrganizationsByUserResponse {
  string id = 1;
  string long_name = 2;
  string short_name = 3;
  string contact_email = 4;
  string avatar_url = 5;
  bool is_personal = 6;
  repeated GetOrganizationsByUserMember members = 7;
}

//
//  UpdateOrganization
//

message UpdateOrganizationRequest {
  string id = 1;  // @gotags: validate:"uuid4"
  optional string long_name = 2;
  optional string short_name = 3;
  optional string contact_email = 4;
  optional string avatar_url = 5;
  optional bool is_personal = 6;
}

message UpdateOrganizationResponse {}

//
//  DeleteOrganization
//

message DeleteOrganizationRequest {
  string id = 1;  // @gotags: validate:"uuid4"
}

message DeleteOrganizationResponse {}

//
// AddMember
//

message AddMemberRequest {
  string id = 1; // @gotags: validate:"uuid4"
  string user_id = 2; // @gotags: validate:"uuid4"
}

message AddMemberResponse {}

//
// RemoveMember
//

message RemoveMemberRequest {
  string id = 1; // @gotags: validate:"uuid4"
  string user_id = 2; // @gotags: validate:"uuid4"
}

message RemoveMemberResponse{}

//
// InviteMember
//

message InviteMemberRequest {
  string organization_id = 1; // @gotags: validate:"uuid4"
  string email = 2; // @gotags: validate:"required,email"
}

message InviteMemberResponse {
  string id = 1;
}

//
// AcceptInvite
//
message AcceptInvitationRequest {
  string invitation_id = 1;  // @gotags: validate:"uuid4"
}

message AcceptInvitationResponse {}

//
// GetInvitationsByUser
//

message GetInvitationsByUserRequest {
  optional string state = 1;
}

message GetInvitationsByUserResponse {

  repeated Invitation invitations = 1;

  message Invitation{
    string id = 1;
    string email = 2;
    string organization_id = 3;
    string state = 4;
  }
}

//
// DeclineInvitation
//

message DeclineInvitationRequest {
  string invitation_id = 1;  // @gotags: validate:"uuid4"
}

message DeclineInvitationResponse {}


//
//  OrganizationService
//

service OrganizationService {
  rpc CreateOrganization (CreateOrganizationRequest) returns (CreateOrganizationResponse) {}
  rpc CreateOrganizationForUser (CreateOrganizationForUserRequest) returns (CreateOrganizationForUserResponse) {}
  rpc GetOrganization (GetOrganizationRequest) returns (GetOrganizationResponse) {}
  rpc GetOrganizationsByUser (GetOrganizationsByUserRequest) returns (GetOrganizationsByUserResponse) {}
  rpc UpdateOrganization (UpdateOrganizationRequest) returns (UpdateOrganizationResponse) {}
  rpc DeleteOrganization (DeleteOrganizationRequest) returns (DeleteOrganizationResponse) {}
  rpc AddMember (AddMemberRequest) returns (AddMemberResponse) {}
  rpc RemoveMember (RemoveMemberRequest) returns (RemoveMemberResponse) {}
  rpc InviteMember (InviteMemberRequest) returns (InviteMemberResponse) {}
  rpc AcceptInvitation (AcceptInvitationRequest) returns (AcceptInvitationResponse) {}
  rpc GetInvitationsByUser(GetInvitationsByUserRequest) returns (GetInvitationsByUserResponse) {}
  rpc DeclineInvitation(DeclineInvitationRequest) returns (DeclineInvitationResponse) {}
}
