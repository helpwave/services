syntax = "proto3";

package proto.services.user_svc.v1;

option go_package = "gen/proto/services/user-svc";

//
// CreateOrganization
//

message CreateOrganizationRequest {
	string long_name = 1; // @gotags: validate:"required,gte=4,lte=64"
	string short_name = 2; // @gotags: validate:"omitempty,gte=2,lte=16"
	string contact_email = 3; // @gotags: validate:"required,email"
	bool is_personal = 4; // @gotags: validate:"required"
}

message CreateOrganizationResponse {
	string id = 1;
}

//
// CreateOrganizationForUser
//

message CreateOrganizationForUserRequest {
	string long_name = 1; // @gotags: validate:"required,gte=4,lte=64"
	string short_name = 2; // @gotags: validate:"omitempty,gte=2,lte=16"
	string contact_email = 3; // @gotags: validate:"required,email"
	bool is_personal = 4; // @gotags: validate:"required"
	string user_id = 5; // @gotags: validate:"uuid4"
}

message CreateOrganizationForUserResponse {
	string id = 1;
}

//
// GetOrganization
//

message Member {
	string user_id = 1;
}

message GetOrganizationRequest {
	string id = 1; // @gotags: validate:"uuid4"
}

message GetOrganizationResponse {
	string id = 1;
	string long_name = 2;
	string short_name = 3;
	string contact_email = 4;
	string avatar_url = 5;
	bool is_personal = 6;
	repeated Member members = 7;
}

//
//  OrganizationService
//

service OrganizationService {
	rpc CreateOrganization (CreateOrganizationRequest) returns (CreateOrganizationResponse) {}
	rpc CreateOrganizationForUser (CreateOrganizationForUserRequest) returns (CreateOrganizationForUserResponse) {}
	rpc GetOrganization (GetOrganizationRequest) returns (GetOrganizationResponse) {}
}
