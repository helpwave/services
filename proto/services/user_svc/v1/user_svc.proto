syntax = "proto3";

package services.user_svc.v1;

option go_package = "gen/services/user-svc/v1";

//
// CreateUser
// TODO: Internal
//

message CreateUserRequest {
  string id = 1; // @gotags: validate:"uuid4"
  string email = 2; // @gotags: validate:"email"
  string nickname = 3;
  string name = 4;
}

message CreateUserResponse {
  string id = 1;
}

//
// ReadSelf
//

message ReadSelfOrganization {
  string id = 1;
}

// User gets resolved from current authentication context
message ReadSelfRequest {}

message ReadSelfResponse {
  string id = 1;
  string name = 2;
  string nickname = 3;
  optional string avatar_url = 4;
  repeated ReadSelfOrganization organizations = 5;
}

//
// ReadPublicProfile
//

message ReadPublicProfileRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message ReadPublicProfileResponse {
  string id = 1;
  string name = 2;
  string nickname = 3;
  optional string avatar_url = 4;
}

//
// UpdateUser
//

message UpdateUserRequest {
  string id = 1; // @gotags: validate:"uuid4"
  // TODO: Avatar handling via an image/assets service
  // TODO: Storagae localization related settings: language, units
}

message UpdateUserResponse {}

//
// UserService
//

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc ReadSelf (ReadSelfRequest) returns (ReadSelfResponse) {}
  rpc ReadPublicProfile (ReadPublicProfileRequest) returns (ReadPublicProfileResponse) {}
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
}
