syntax = "proto3";

package proto.services.user_svc.v1;

option go_package = "gen/proto/services/user-svc";

//
// ReadSelf
//

message ReadSelfOrganization {
	string id = 1;
}

// User gets resolved from current authentication context
message ReadSelfRequest {}

message ReadSelfResponse {
	string id = 1;
	string name = 2;
	string nickname = 3;
	string avatar_url = 4;
	repeated ReadSelfOrganization organizations = 5;
}

//
// ReadPublicProfile
//

message ReadPublicProfileRequest {
	string id = 1; // @gotags: validate:"uuid4"
}

message ReadPublicProfileResponse {
	string id = 1;
	string name = 2;
	string nickname = 3;
	string avatar_url = 4;
}

//
// UpdateUser
//

message UpdateUserRequest {
	string id = 1; // @gotags: validate:"uuid4"
	// TODO: Avatar handling via an image/assets service
}

message UpdateUserResponse {}

//
// UserService
//

service UserService {
	rpc ReadSelf (ReadSelfRequest) returns (ReadSelfResponse) {}
	rpc ReadPublicProfile (ReadPublicProfileRequest) returns (ReadPublicProfileResponse) {}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
}
