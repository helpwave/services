syntax = "proto3";

package services.tasks_svc.v1;

import "libs/common/v1/conflict.proto";

option go_package = "gen/services/tasks-svc/v1";

//
// CreateBed
//

message CreateBedRequest {
  string room_id = 1; // @gotags: validate:"uuid4"
  string name = 2; // @gotags: validate:"required"
}

message CreateBedResponse {
  string id = 1;
  string consistency = 2;
}

//
// BulkCreateBeds
//

message BulkCreateBedsRequest {
  string room_id = 1; // @gotags: validate:"uuid4"
  uint32 amount_of_beds = 2; // @gotags: validate:"required"
}

message BulkCreateBedsResponse {
  repeated Bed beds = 1;

  message Bed {
    string id = 1;
    string name = 2;
    string consistency = 3;
  }
}

//
// GetBed
//

message GetBedRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetBedResponse {
  string id = 1;
  string room_id = 2;
  string name = 3;
  string consistency = 4;
}


//
// GetBedByPatient
//

message GetBedByPatientRequest {
  string patient_id = 1; // @gotags: validate:"uuid4"
}

message GetBedByPatientResponse {
  optional Room room = 1;
  optional Bed bed = 2;

  message Room {
    string id = 1;
    string name = 2;
    string ward_id = 3;
    string consistency = 4;
  }

  message Bed {
    string id = 1;
    string name = 2;
    string consistency = 3;
  }
}

//
// GetBeds
//

message GetBedsRequest {
  optional string room_id = 1; // @gotags: validate:"omitnil,uuid4"
}

message GetBedsResponse {
  repeated Bed beds = 1;

  message Bed {
    string id = 1;
    string room_id = 2;
    string name = 3;
    string consistency = 4;
  }
}

//
// GetBedsByRoom
//

message GetBedsByRoomRequest {
  string room_id = 1; // @gotags: validate:"uuid4"
}

message GetBedsByRoomResponse {
  repeated Bed beds = 1;

  message Bed {
    string id = 1;
    string name = 2;
    string consistency = 3;
  }
}

//
// UpdateBed
//

message UpdateBedRequest {
  string id = 1; // @gotags: validate:"uuid4"
  optional string room_id = 2; // @gotags: validate:"omitempty,omitnil,uuid4"
  optional string name = 3;
  optional string consistency = 4; // no conflict detection, if not provided
}

message UpdateBedResponse {
  optional libs.common.v1.Conflict conflict = 1;
  string consistency = 2;
}

//
// DeleteBed
//

message DeleteBedRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteBedResponse {}

//
// BedService
//

service BedService {
  rpc CreateBed(CreateBedRequest) returns (CreateBedResponse) {}
  rpc BulkCreateBeds(BulkCreateBedsRequest) returns (BulkCreateBedsResponse) {}
  rpc GetBed(GetBedRequest) returns (GetBedResponse) {}
  rpc GetBedByPatient(GetBedByPatientRequest) returns (GetBedByPatientResponse) {}
  rpc GetBeds(GetBedsRequest) returns (GetBedsResponse) {}
  // Deprecated: Use GetBeds with optional room_id instead
  rpc GetBedsByRoom(GetBedsByRoomRequest) returns (GetBedsByRoomResponse) {
   option deprecated = true;
  }
  rpc UpdateBed(UpdateBedRequest) returns (UpdateBedResponse) {}
  rpc DeleteBed(DeleteBedRequest) returns (DeleteBedResponse) {}
}
