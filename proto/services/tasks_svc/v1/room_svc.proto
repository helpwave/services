syntax = "proto3";

package services.tasks_svc.v1;

import "libs/common/v1/conflict.proto";

option go_package = "gen/services/tasks-svc/v1";

//
// CreateRoom
//

message CreateRoomRequest {
  string name = 1; // @gotags: validate:"required"
  string ward_id = 2; // @gotags: validate:"required"
}

message CreateRoomResponse {
  string id = 1;
  string consistency = 2;
}

//
// GetRoom
//

message GetRoomRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetRoomResponse {
  string id = 1;
  string name = 2;
  repeated Bed beds = 3;
  string ward_id = 5;
  string consistency = 6;

  message Bed {
    string id = 1;
    string name = 2;
    string consistency = 3;
  }
}

//
// GetRooms
//

message GetRoomsRequest {
  optional string ward_id = 1; // @gotags: validate:"omitempty,uuid4"
}

message GetRoomsResponse {
  repeated Room rooms = 1;

  message Room {
    string id = 1;
    string name = 2;
    repeated Bed beds = 3;
    string ward_id = 5;
    string consistency = 6;

    message Bed {
      string id = 1;
      string name = 2;
      string consistency = 3;
    }
  }
}

//
// UpdateRoom
//

message UpdateRoomRequest {
  string id = 1; // @gotags: validate:"uuid4"
  optional string name = 2;
  optional string consistency = 3; // no conflict detection, if not provided
}

message UpdateRoomResponse {
  optional libs.common.v1.Conflict conflict = 1;
  string consistency = 2;
}

//
// DeleteRoom
//

message DeleteRoomRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteRoomResponse {}


//
// GetRoomOverviewsByWard
//

message GetRoomOverviewsByWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetRoomOverviewsByWardResponse {
  repeated Room rooms = 1;

  message Room {
    string id = 1;
    string  name = 2;
    repeated Bed beds = 3;
    string consistency = 4;

    message Bed {
      string id = 1;
      string name = 3;
      optional Patient patient = 2;
      string consistency = 4;

      message Patient{
        string id = 1;
        string human_readable_identifier = 2;
        uint32 tasks_unscheduled = 3;
        uint32 tasks_in_progress = 4;
        uint32 tasks_done = 5;
        string consistency = 6;
      }
    }
  }
}


//
// RoomService
//

service RoomService {
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse) {}
  rpc GetRoom(GetRoomRequest) returns (GetRoomResponse) {}
  rpc GetRooms(GetRoomsRequest) returns (GetRoomsResponse) {}
  rpc UpdateRoom(UpdateRoomRequest) returns (UpdateRoomResponse) {}
  rpc DeleteRoom(DeleteRoomRequest) returns (DeleteRoomResponse) {}
  rpc GetRoomOverviewsByWard(GetRoomOverviewsByWardRequest) returns (GetRoomOverviewsByWardResponse) {}
}
