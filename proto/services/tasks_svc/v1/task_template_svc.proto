syntax = "proto3";

package services.tasks_svc.v1;

option go_package = "gen/proto/services/tasks-svc";

///
/// CreateTaskTemplate
///

message CreateTaskTemplateRequest {
  string name = 1; // @gotags: validate:"required"
  optional string description = 2;
  optional string ward_id = 4; // @gotags: validate:"omitempty,omitnil,uuid4"
  repeated SubTask subtasks = 5;

  message SubTask {
    string name = 1;
  }
}

message CreateTaskTemplateResponse {
  string id = 1;
}

///
/// DeleteTaskTemplate
///

message DeleteTaskTemplateRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteTaskTemplateResponse {
}


///
/// DeleteTaskTemplateSubTask
///

message DeleteTaskTemplateSubTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteTaskTemplateSubTaskResponse {
}


///
/// UpdateTaskTemplate
///

message UpdateTaskTemplateRequest {
  string id = 1; // @gotags: validate:"required"
  optional string name = 2;
  optional string description = 3;
}

message UpdateTaskTemplateResponse {
}


///
/// UpdateTaskTemplateSubTask
///

message UpdateTaskTemplateSubTaskRequest {
  string subtask_id = 1; // @gotags: validate:"required"
  optional string name = 2;
}

message UpdateTaskTemplateSubTaskResponse {
}


///
/// CreateTaskTemplateSubTask
///

message CreateTaskTemplateSubTaskRequest {
  string task_template_id = 1; // @gotags: validate:"required"
  string name = 2; // @gotags: validate:"required"
}

message CreateTaskTemplateSubTaskResponse {
  string id = 1;
}


///
/// GetAllTaskTemplatesByWardAndCreatorFilter
/// If no filter is set, all TaskTemplates will be returned
///

message GetAllTaskTemplatesWithWardAndCreatorFilterRequest {
  optional string ward_id = 1;
  optional string created_by = 2;
  bool private_only = 3;
}

message GetAllTaskTemplatesWithWardAndCreatorFilterResponse {
  repeated TaskTemplate templates = 1;

  message TaskTemplate {
    string id = 1;
    string name = 2;
    string description = 3;
    bool is_public = 4;
    string created_by = 6;
    repeated SubTask subtasks = 7;

    message SubTask {
      string id = 1;
      string task_template_id = 2;
      string name = 3;
    }
  }
}

service TaskTemplateService {
  rpc CreateTaskTemplate (CreateTaskTemplateRequest) returns (CreateTaskTemplateResponse) {}
  rpc DeleteTaskTemplate (DeleteTaskTemplateRequest) returns (DeleteTaskTemplateResponse) {}
  rpc DeleteTaskTemplateSubTask (DeleteTaskTemplateSubTaskRequest) returns (DeleteTaskTemplateSubTaskResponse) {}
  rpc UpdateTaskTemplate (UpdateTaskTemplateRequest) returns (UpdateTaskTemplateResponse) {}
  rpc UpdateTaskTemplateSubTask (UpdateTaskTemplateSubTaskRequest) returns (UpdateTaskTemplateSubTaskResponse) {}
  rpc CreateTaskTemplateSubTask (CreateTaskTemplateSubTaskRequest) returns (CreateTaskTemplateSubTaskResponse) {}
  rpc GetAllTaskTemplatesWithWardAndCreatorFilter (GetAllTaskTemplatesWithWardAndCreatorFilterRequest) returns (GetAllTaskTemplatesWithWardAndCreatorFilterResponse) {}
}
