syntax = "proto3";

package proto.services.property_svc.v1;

import "proto/services/property_svc/v1/types.proto";
import "google/protobuf/timestamp.proto";

option go_package = "gen/proto/services/property-svc";

//
// AttachPropertyValueRequest
//
message AttachPropertyValueRequest{
  string subject_id = 1; // @gotags: validate:"uuid4"
  string property_id = 2; // @gotags: validate:"uuid4"

  oneof value {
    string text_value = 3; // @gotags: validate:"required" // FIELD_TYPE_TEXT
    double number_value = 4; // FIELD_TYPE_NUMBER
    bool bool_value = 5; // FIELD_TYPE_CHECKBOX
    Date date_value = 6; // FIELD_TYPE_DATE
    google.protobuf.Timestamp date_time_value = 7; // FIELD_TYPE_DATE_TIME
    string select_value = 8; // FIELD_TYPE_SELECT, id of option
  }
}

message AttachPropertyValueResponse {
  string property_value_id = 1;
}

//
// GetAttachedPropertyValue
//

message TaskPropertyMatcher {
  optional string ward_id = 1; // @gotags: validate:"omitempty,omitnil,uuid4"
  optional string task_id = 2; // @gotags: validate:"omitempty,omitnil,uuid4"
}

message GetAttachedPropertyValuesRequest {
  oneof matcher {
    TaskPropertyMatcher task_matcher = 1;
  }
}

message GetAttachedPropertyValuesResponse {
  message Value {
    string property_id = 1;
    FieldType field_type = 2;
    string name = 3;
    optional string description = 4;

    bool is_archived = 5;

    /* TODO:
    bool is_soft_required = 6;
    message Set {
      string id = 1;
      string name = 2;
    }
    optional Set set = 7;
    */

    oneof value {
      string text_value = 6; // FIELD_TYPE_TEXT
      double number_value = 7; // FIELD_TYPE_NUMBER
      bool bool_value = 8; // FIELD_TYPE_CHECKBOX
      Date date_value = 9; // FIELD_TYPE_DATE
      google.protobuf.Timestamp date_time_value = 10; // FIELD_TYPE_DATE_TIME
      string select_value = 11; // FIELD_TYPE_SELECT, id of option
    }
  }

  repeated Value values = 1;
  // TODO: TBD: Property Information for Values
}

//
// PropertyValueService
//

service PropertyValueService {
  rpc AttachPropertyValue(AttachPropertyValueRequest) returns (AttachPropertyValueResponse) {}
  rpc GetAttachedPropertyValues(GetAttachedPropertyValuesRequest) returns (GetAttachedPropertyValuesResponse) {}
}

