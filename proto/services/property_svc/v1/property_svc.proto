syntax = "proto3";

package proto.services.property_svc.v1;

import "proto/services/property_svc/v1/types.proto";

option go_package = "gen/proto/services/property-svc";

// TODO: This proto is just an hello-world example and far from where it should be!

//
// CreateProperty
//
message CreatePropertyRequest {
  ViewContext context = 1;
  SubjectType subject_type = 2; // TODO: add validation here (not-unspecified check)
  FieldType field_type = 3; // TODO: add validation here (not-unspecified check)

  string name = 4; // TODO: add validation (at least non-empty checks)
  optional string description = 5; // TODO: add validation, if needed

  // ID of set this Property should belong to
  optional string set_id = 6;

  optional bool always_include_for_current_context = 7;

  oneof field_type_data {
    bool none = 8;
    SelectData select_data = 9;
  }

  message SelectData {
    optional bool allow_freetext = 1;
    repeated SelectOption options = 2;
    message SelectOption {
      string name = 1; // TODO: add validation (at least non-empty checks)
      optional string description = 2; // TODO: add validation, if needed
    }
  }

}

message CreatePropertyResponse {
  string property_id = 1;
}

//
// GetProperty
//

message GetPropertyRequest {
  string id = 1; // @gotags: validate:"uuid4"
  ViewContext context = 2; // TODO: Why is that here?
}

message GetPropertyResponse {
  string id = 1;
  SubjectType subject_type = 2;
  FieldType field_type = 3;

  string name = 4;
  optional string description = 5;

  bool is_archived = 6; //TODO: Is that still part of property model?

  // ID of set this Property should belong to
  optional string set_id = 8;

  oneof field_type_data {
    bool none = 9;
    SelectData select_data = 10;
  }

  message SelectData {
    optional bool allow_freetext = 1;
    repeated SelectOption options = 2;

    message SelectOption {
      string name = 1;
      optional string description = 2;
    }
  }

  optional bool always_include_for_current_context = 11; // TODO: Is that still part of property model?
}

//
// PropertyService
//

service PropertyService {
  rpc CreateProperty(CreatePropertyRequest) returns (CreatePropertyResponse) {}
  rpc GetProperty(GetPropertyRequest) returns (GetPropertyResponse) {}
}
