syntax = "proto3";

package proto.services.property_svc.v1;

import "proto/services/property_svc/v1/types.proto";

option go_package = "gen/proto/services/property-svc";

//
// CreateProperty
//
message CreatePropertyRequest {
  SubjectType subject_type = 2; // @gotags: validate:"required"
  FieldType field_type = 3; // @gotags: validate:"required"

  string name = 4; // @gotags: validate:"required"
  optional string description = 5;

  // ID of set this Property should belong to
  optional string set_id = 6;

  oneof field_type_data {
    SelectData select_data = 9;
  }

  message SelectData {
    optional bool allow_freetext = 1;
    repeated SelectOption options = 2;
    message SelectOption {
      string name = 1; // @gotags: validate:"required"
      optional string description = 2;
    }
  }
}

message CreatePropertyResponse {
  string property_id = 1;
}

//
// GetProperty
//

message GetPropertyRequest {
  string id = 1; // @gotags: validate:"uuid4"
  // describes from which View (global, ward, ...) the property is accessed from
  // The attribute "always_include_for_current_context" depends on this ViewSource
  message ViewSource {
    oneof value {
      bool global = 1;
      string ward_id = 2; // @gotags: validate:"uuid4"
    }
  }
}

message GetPropertyResponse {
  string id = 1;
  SubjectType subject_type = 2;
  FieldType field_type = 3;

  string name = 4;
  optional string description = 5;

  bool is_archived = 6;

  // id of set this Property should belong to
  optional string set_id = 8;

  oneof field_type_data {
    SelectData select_data = 10;
  }

  message SelectData {
    optional bool allow_freetext = 1;
    repeated SelectOption options = 2;

    message SelectOption {
      string id = 1;
      string name = 2;
      optional string description = 3;
      bool is_custom = 4;
    }
  }

  optional bool always_include_for_view_source = 11; // This value is dependend on the ViewSource
}

//
// UpdateProperty
//

message UpdatePropertyRequest {
  string id = 1;

  optional SubjectType subject_type = 2;

  optional string name = 4;
  optional string description = 5;

  optional bool is_archived = 6;

  // ID of set this Property should belong to
  optional string set_id = 8;

  oneof field_type_data {
    SelectData select_data = 10;
  }

  message SelectData {
    optional bool allow_freetext = 1;
    repeated string remove_options = 2; // @gotags: validate:"dive,uuid4"
    repeated SelectOption upsert_options = 3;

    message SelectOption {
      string id = 1;
      optional string name = 2;
      optional string description = 3;
      optional bool is_custom = 4;
    }
  }
}

message UpdatePropertyResponse {}

//
// GetPropertiesBySubjectType
//

message GetPropertiesBySubjectTypeRequest {
  SubjectType subject_type = 1;
}

message GetPropertiesBySubjectTypeResponse {
  message Property {
    string id = 1;
    SubjectType subject_type = 2;
    FieldType field_type = 3;

    string name = 4;
    optional string description = 5;

    bool is_archived = 6;

    // id of set this Property should belong to
    optional string set_id = 8;

    oneof field_type_data {
      SelectData select_data = 10;
    }

    message SelectData {
      optional bool allow_freetext = 1;
      repeated SelectOption options = 2;

      message SelectOption {
        string id = 1;
        string name = 2;
        optional string description = 3;
        bool is_custom = 4;
      }
    }
  }

  repeated Property properties = 1;
}
//
// PropertyService
//

service PropertyService {
  rpc CreateProperty(CreatePropertyRequest) returns (CreatePropertyResponse) {}
  rpc GetProperty(GetPropertyRequest) returns (GetPropertyResponse) {}
  rpc UpdateProperty(UpdatePropertyRequest) returns (UpdatePropertyResponse) {}
  rpc GetPropertiesBySubjectType(GetPropertiesBySubjectTypeRequest) returns (GetPropertiesBySubjectTypeResponse) {}
}
