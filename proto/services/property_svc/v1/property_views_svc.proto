syntax = "proto3";
import "services/property_svc/v1/property_value_svc.proto";

package services.property_svc.v1;

option go_package = "gen/services/property-svc/v1";


message FilterUpdate {
  // append property_id to the always_include list
  // this means the property is shown, unless a more specific rule (including itself)
  // puts it in its dont_always_include list
  repeated string append_to_always_include = 1; // @gotags: validate:"dive,uuid4"

  // remove property_id to the always_include list, also see append_to_always_include
  repeated string remove_from_always_include = 2; // @gotags: validate:"dive,uuid4"

  // append property_id to the dont_always_include list, also see append_to_always_include
  repeated string append_to_dont_always_include = 3; // @gotags: validate:"dive,uuid4"

  // remove property_id to the dont_always_include list, also see append_to_always_include
  repeated string remove_from_dont_always_include = 4; // @gotags: validate:"dive,uuid4"
}

message UpdatePropertyViewRuleRequest {
  FilterUpdate filter_update = 1; // @gotags: validate:"required"

  oneof matcher {
    TaskPropertyMatcher task_matcher = 2;
    PatientPropertyMatcher patient_matcher = 3;
  }
}

message UpdatePropertyViewRuleResponse {}

service PropertyViewsService {
  rpc UpdatePropertyViewRule (UpdatePropertyViewRuleRequest) returns (UpdatePropertyViewRuleResponse) {}
}
