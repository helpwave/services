syntax = "proto3";

package services.task_svc.v1;

option go_package = "gen/services/task-svc/v1";

import "google/protobuf/timestamp.proto";

enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_TODO = 1;
  TASK_STATUS_IN_PROGRESS = 2;
  TASK_STATUS_DONE = 3;
}

//
// CreateTask
//

message CreateTaskRequest {
  string name = 1; // @gotags: validate:"required"
  optional string description = 2;
  string patient_id = 3; // @gotags: validate:"uuid4"
  bool public = 4;
  google.protobuf.Timestamp due_at = 5;
  optional TaskStatus initial_status = 6;
}

message CreateTaskResponse {
  string id = 1;
}

//
// GetTask
//

message GetTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetTaskResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  TaskStatus status = 4;
  string assigned_user_id = 5;
  Patient patient = 6;
  bool public = 7;
  google.protobuf.Timestamp due_at = 8;
  string created_by = 9;
  repeated SubTask subtasks = 10;
  string organization_id = 11;

  message SubTask {
    string id = 1;
    string name = 2;
    bool done = 3;
    string created_by = 4;
  }

  message Patient {
    string id = 1;
    string name = 2;
  }
}

//
// GetTaskByPatient
//

message GetTasksByPatientRequest {
  string patient_id = 1; // @gotags: validate:"uuid4"
}

message GetTasksByPatientResponse {
  repeated Task tasks = 1;

  message Task {
    string id = 1;
    string name = 2;
    string description = 3;
    TaskStatus status = 4;
    optional string assigned_user_id = 5;
    string patient_id = 6;
    bool public = 7;
    google.protobuf.Timestamp due_at = 8;
    string created_by = 9;
    repeated SubTask subtasks = 10;

    message SubTask {
      string id = 1;
      string name = 2;
      bool done = 3;
      string created_by = 4;
    }
  }
}


//
// GetTasksByPatientSortedByStatus
//

message GetTasksByPatientSortedByStatusRequest {
  string patient_id = 1; // @gotags: validate:"uuid4"
}

message GetTasksByPatientSortedByStatusResponse {
  repeated Task todo = 1;
  repeated Task in_progress = 2;
  repeated Task done = 3;

  message Task {
    string id = 1;
    string name = 2;
    string description = 3;
    optional string assigned_user_id = 5;
    string patient_id = 6;
    bool public = 7;
    google.protobuf.Timestamp due_at = 8;
    string created_by = 9;

    repeated SubTask subtasks = 10;

    message SubTask {
      string id = 1;
      string name = 2;
      bool done = 3;
      string created_by = 4;
    }
  }
}


//
// GetAssignedTasks
//

message GetAssignedTasksRequest {}

message GetAssignedTasksResponse {
  repeated Task tasks = 1;

  message Task {
    string id = 1;
    string name = 2;
    string description = 3;
    TaskStatus status = 4;
    string assigned_user_id = 5;
    Patient patient = 6;
    bool public = 7;
    google.protobuf.Timestamp due_at = 8;
    string created_by = 9;
    repeated SubTask subtasks = 10;

    message Patient {
      string id = 1;
      string name = 2;
    }

    message SubTask {
      string id = 1;
      string name = 2;
      bool done = 3;
      string created_by = 4;
    }
  }
}


//
// UpdateTask
//

message UpdateTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
  optional string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp due_at = 4;
  optional bool public = 5;
}

message UpdateTaskResponse {}

//
// AddSubTask
//

message AddSubTaskRequest {
  string name = 1;
  string task_id = 2; // @gotags: validate:"uuid4"
  optional bool done = 3; // default: false
}

message AddSubTaskResponse {
  string id = 1; // @gotags: validate:"uuid4"
}

//
// RemoveSubTask
//

message RemoveSubTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message RemoveSubTaskResponse {}


//
// UpdateSubTask
//

message UpdateSubTaskRequest{
  string id = 1; // @gotags: validate:"uuid4"
  optional string name = 2;
}

message UpdateSubTaskResponse {}

//
// SubTaskToToDo
//

message SubTaskToToDoRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message SubTaskToToDoResponse {}

//
// SubTaskToDone
//

message SubTaskToDoneRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message SubTaskToDoneResponse {}

//
// TaskToToDo
//

message TaskToToDoRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message TaskToToDoResponse {}

//
// TaskToInProgress
//

message TaskToInProgressRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message TaskToInProgressResponse {}

//
// TaskToDone
//

message TaskToDoneRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message TaskToDoneResponse {}

//
// AssignTaskToUser
//

message AssignTaskToUserRequest {
  string id = 1; // @gotags: validate:"uuid4"
  string user_id = 2; // @gotags: validate:"uuid4"
}

message AssignTaskToUserResponse {}

//
// UnassignTaskFromUser
//

message UnassignTaskFromUserRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message UnassignTaskFromUserResponse {}

//
// PublishTask
//

message PublishTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message PublishTaskResponse {}

//
// UnpublishTask
//

message UnpublishTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message UnpublishTaskResponse {}


//
// DeleteTask
//

message DeleteTaskRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteTaskResponse {}


//
// TaskService
//

service TaskService {
  rpc CreateTask (CreateTaskRequest) returns (CreateTaskResponse) {}
  rpc GetTask (GetTaskRequest) returns (GetTaskResponse) {}
  rpc GetTasksByPatient (GetTasksByPatientRequest) returns (GetTasksByPatientResponse) {}
  rpc GetTasksByPatientSortedByStatus (GetTasksByPatientSortedByStatusRequest) returns (GetTasksByPatientSortedByStatusResponse) {}
  rpc GetAssignedTasks (GetAssignedTasksRequest) returns (GetAssignedTasksResponse) {}
  rpc UpdateTask (UpdateTaskRequest) returns (UpdateTaskResponse) {}
  rpc AddSubTask (AddSubTaskRequest) returns (AddSubTaskResponse) {}
  rpc RemoveSubTask (RemoveSubTaskRequest) returns (RemoveSubTaskResponse) {}
  rpc UpdateSubTask (UpdateSubTaskRequest) returns (UpdateSubTaskResponse) {}
  rpc SubTaskToToDo (SubTaskToToDoRequest) returns (SubTaskToToDoResponse) {}
  rpc SubTaskToDone (SubTaskToDoneRequest) returns (SubTaskToDoneResponse) {}
  rpc TaskToToDo (TaskToToDoRequest) returns (TaskToToDoResponse) {}
  rpc TaskToInProgress (TaskToInProgressRequest) returns (TaskToInProgressResponse) {}
  rpc TaskToDone (TaskToDoneRequest) returns (TaskToDoneResponse) {}
  rpc AssignTaskToUser (AssignTaskToUserRequest) returns (AssignTaskToUserResponse) {}
  rpc UnassignTaskFromUser (UnassignTaskFromUserRequest) returns (UnassignTaskFromUserResponse) {}
  rpc PublishTask (PublishTaskRequest) returns (PublishTaskResponse) {}
  rpc UnpublishTask (UnpublishTaskRequest) returns (UnpublishTaskResponse) {}
  rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse) {}
}
