syntax = "proto3";

package proto.services.task_svc.v1;

option go_package = "gen/proto/services/task-svc";

//
// CreateWard
//

message CreateWardRequest {
  string name = 1; // @gotags: validate:"required"
}

message CreateWardResponse {
  string id = 1;
  string name = 2;
}

//
// GetWard
//

message GetWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetWardResponse {
  string id = 1;
  string name = 2;
}

//
// GetWards
//

message GetWardsRequest {}

message GetWardsResponse {
  repeated Ward wards = 1;

  message Ward {
    string id = 1;
    string name = 2;
  }
}

//
// UpdateWard
//

message UpdateWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
  optional string name = 2;
}

message UpdateWardResponse {}

//
// DeleteWard
//

message DeleteWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteWardResponse {}


message GetWardDetailsRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetWardDetailsResponse {
  string id = 1; // @gotags: validate:"uuid4"
  string name = 2;
  repeated Room rooms = 3;
  repeated TaskTemplate task_templates = 4;

  message Bed {
    string id = 1;
  }

  message Subtask {
    string id = 1;
    string name = 2;
  }

  message Room {
    string name = 1;
    repeated Bed beds = 2;
  }

  message TaskTemplate {
    string id = 1;
    string name = 2;
    repeated Subtask subtasks = 3;
  }
}


//
// WardService
//

service WardService {
  rpc CreateWard (CreateWardRequest) returns (CreateWardResponse) {}
  rpc GetWard (GetWardRequest) returns (GetWardResponse) {}
  rpc GetWards(GetWardsRequest) returns (GetWardsResponse) {}
  rpc UpdateWard (UpdateWardRequest) returns (UpdateWardResponse) {}
  rpc DeleteWard (DeleteWardRequest) returns (DeleteWardResponse) {}
  rpc GetWardDetails (GetWardDetailsRequest) returns (GetWardDetailsResponse) {}
}
