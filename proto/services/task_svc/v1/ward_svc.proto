syntax = "proto3";

package proto.services.task_svc.v1;

option go_package = "gen/proto/services/task-svc";

//
// CreateWard
//

message CreateWardRequest {
  string name = 1; // @gotags: validate:"required"
}

message CreateWardResponse {
  string id = 1;
  string name = 2;
}

//
// GetWard
//

message GetWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message GetWardResponse {
  string id = 1;
  string name = 2;
}

//
// GetWards
//

message GetWardsRequest {}

message GetWardsResponse {
  repeated Ward wards = 1;

  message Ward {
    string id = 1;
    string name = 2;
  }
}

//
// UpdateWard
//

message UpdateWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
  optional string name = 2;
}

message UpdateWardResponse {}

//
// DeleteWard
//

message DeleteWardRequest {
  string id = 1; // @gotags: validate:"uuid4"
}

message DeleteWardResponse {}

//
// GetWardsOverview
//

message GetWardOverviewsRequest {}

message GetWardOverviewsResponse {
  repeated Ward wards = 1;

  message Ward {
    string id = 1;
    string name = 2;
    uint32 bed_count = 3;
    uint32 tasks_todo = 4;
    uint32 tasks_in_progress = 5;
    uint32 tasks_done = 6;
  }
}

//
// WardService
//

service WardService {
  rpc CreateWard (CreateWardRequest) returns (CreateWardResponse) {}
  rpc GetWard (GetWardRequest) returns (GetWardResponse) {}
  rpc GetWards(GetWardsRequest) returns (GetWardsResponse) {}
  rpc UpdateWard (UpdateWardRequest) returns (UpdateWardResponse) {}
  rpc DeleteWard (DeleteWardRequest) returns (DeleteWardResponse) {}
  rpc GetWardOverviews (GetWardOverviewsRequest) returns (GetWardOverviewsResponse) {}
}
