syntax = "proto3";

package proto.services.impulse_svc.v1;

option go_package = "gen/proto/services/impulse-svc";

// import "google/protobuf/timestamp.proto";

enum ChallengeType {
  CHALLENGE_TYPE_UNSPECIFIED = 0;
  CHALLENGE_TYPE_DAILY = 1;
  CHALLENGE_TYPE_QUEST = 2;
}

enum ChallengeCategory {
  CHALLENGE_CATEGORY_UNSPECIFIED = 0;
  CHALLENGE_CATEGORY_FOOD = 1;
  CHALLENGE_CATEGORY_FITNESS = 2;
}

//
// CreateUser
//

message CreateUserRequest {
  string username = 1;
  string gender = 2;
  string birthday = 3;
  uint32 pal = 4;
}

message CreateUserResponse {
  string id = 1;
}

//
// UpdateUser
//

message UpdateUserRequest {
  string id = 1;
  optional string gender = 2;
  optional string birthday = 3;
  optional uint32 pal = 4;
}

message UpdateUserResponse {
  string id = 1;
  string gender = 2;
  string birthday = 3;
  uint32 pal = 4;
}

//
// TrackChallenge
//

message TrackChallengeRequest {
  string challenge_id = 1;
  string user_id = 2;
  uint64 score = 3;
  string done_at = 4;
}

message TrackChallengeResponse {
  string id = 1;
}

//
// GetActiveChallenges
//

message GetActiveChallengesRequest {}

message GetActiveChallengesResponse {
  repeated Challenge challenges = 1;

  message Challenge {
    string id = 1;
    string title = 2;
    string description = 3;
    string start_at = 4;
    string end_at = 5;
    ChallengeCategory category = 6;
    ChallengeType type = 7;
    uint64 threshold = 8;
    uint64 points = 9;
    string unit = 10;
  }
}

//
// UpdateChallenge
//

message UpdateChallengeRequest {
  string id = 1;
  optional string title = 2;
  optional string description = 3;
  optional string start_at = 4;
  optional string end_at = 5;
  optional ChallengeCategory category = 6;
  optional uint64 threshold = 7;
  optional uint64 points = 8;
  optional string unit = 9;
}

message UpdateChallengeResponse {
  string id = 1;
  string title = 2;
  string description = 3;
  string start_at = 4;
  string end_at = 5;
  ChallengeCategory category = 6;
  ChallengeType type = 7;
  uint64 threshold = 8;
  uint64 points = 9;
  string unit = 10;
}

//
// GetScore
//

message GetScoreRequest {
  string user_id = 1;
}

message GetScoreResponse {
  uint64 score = 1;
}

//
// GetRewards
//

message GetRewardsRequest {
  string user_id = 1;
}

message GetRewardsResponse {
  repeated Reward rewards = 1;

  message Reward {
      string id = 1;
      string title = 2;
      string description = 3;
      uint64 points = 5;
  }
}

//
// GetAllRewards
//

message GetAllRewardsRequest {}

message GetAllRewardsResponse {
  repeated Reward rewards = 1;

  message Reward {
    string id = 1;
    string title = 2;
    string description = 3;
    uint64 points = 5;
  }
}

//
// ImpulseService
//

service ImpulseService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc TrackChallenge(TrackChallengeRequest) returns (TrackChallengeResponse) {}
  rpc GetActiveChallenges(GetActiveChallengesRequest) returns (GetActiveChallengesResponse) {}
  rpc GetScore(GetScoreRequest) returns (GetScoreResponse) {}
  rpc GetRewards(GetRewardsRequest) returns (GetRewardsResponse) {}
  rpc GetAllRewards(GetAllRewardsRequest) returns (GetAllRewardsResponse) {}
}
