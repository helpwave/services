syntax = "proto3";

package services.impulse_svc.v1;

option go_package = "gen/proto/services/impulse-svc";

// import "google/protobuf/timestamp.proto";

enum ChallengeType {
  CHALLENGE_TYPE_UNSPECIFIED = 0;
  CHALLENGE_TYPE_DAILY = 1;
  CHALLENGE_TYPE_QUEST = 2;
}

enum ChallengeCategory {
  CHALLENGE_CATEGORY_UNSPECIFIED = 0;
  CHALLENGE_CATEGORY_FOOD = 1;
  CHALLENGE_CATEGORY_FITNESS = 2;
}

enum Gender {
  GENDER_UNSPECIFIED = 0;
  GENDER_MALE = 1;
  GENDER_FEMALE = 2;
  GENDER_DIVERSE = 3;
}

enum StringVerificationType {
  STRING_VERIFICATION_TYPE_UNSPECIFIED = 0;
  STRING_VERIFICATION_TYPE_QR = 1;
}

enum IntegerVerificationType {
  INTEGER_VERIFICATION_TYPE_UNSPECIFIED = 0;
  INTEGER_VERIFICATION_TYPE_TIMER = 1;
  INTEGER_VERIFICATION_TYPE_NUMBER = 2;
}

//
// CreateUser
//

message CreateUserRequest {
  string username = 1;
  Gender gender = 2;
  string birthday = 3;
  float pal = 4;
  int32 length = 5;
  float weight = 6;
}

message CreateUserResponse {
  string user_id = 1;
}

//
// UpdateUser
//

message UpdateUserRequest {
  string user_id = 1;
  optional string team_id = 2;
  optional Gender gender = 3;
  optional string birthday = 4;
  optional float pal = 5;
  optional int32 length = 6;
  optional float weight = 7;
}

message UpdateUserResponse {
  string user_id = 1;
  optional string team_id = 2;
  Gender gender = 3;
  string birthday = 4;
  float pal = 5;
  int32 length = 6;
  float weight = 7;
}

//
// GetTeams
//

message GetAllTeamsRequest { }

message GetAllTeamsResponse {
  repeated Team teams = 1;

  message Team {
      string team_id = 1;
      string name = 2;
      string description = 3;
  }
}

//
// TrackChallenge
//

message TrackChallengeRequest {
  string challenge_id = 1;
  string user_id = 2;
  uint64 score = 3;
  string done_at = 4;
}

message TrackChallengeResponse {
  string challenge_id = 1;
}

//
// GetActiveChallenges
//

message GetActiveChallengesRequest {}

message GetActiveChallengesResponse {
  repeated Challenge challenges = 1;

  message Challenge {
    string challenge_id = 1;
    string title = 2;
    string description = 3;
    string start_at = 4;
    string end_at = 5;
    ChallengeCategory category = 6;
    ChallengeType type = 7;
    uint64 threshold = 8;
    uint64 points = 9;
    string unit = 10;
  }
}

//
// UpdateChallenge
//

message UpdateChallengeRequest {
  string challenge_id = 1;
  optional string title = 2;
  optional string description = 3;
  optional string start_at = 4;
  optional string end_at = 5;
  optional ChallengeCategory category = 6;
  optional uint64 threshold = 7;
  optional uint64 points = 8;
  optional string unit = 9;
}

message UpdateChallengeResponse {
  string challenge_id = 1;
  string title = 2;
  string description = 3;
  string start_at = 4;
  string end_at = 5;
  ChallengeCategory category = 6;
  ChallengeType type = 7;
  uint64 threshold = 8;
  uint64 points = 9;
  string unit = 10;
}

//
// GetScore
//

message GetScoreRequest {
  string user_id = 1;
}

message GetScoreResponse {
  uint64 score = 1;
}

//
// GetRewards
//

message GetRewardsRequest {
  string user_id = 1;
}

message GetRewardsResponse {
  repeated Reward rewards = 1;

  message Reward {
      string reward_id = 1;
      string title = 2;
      string description = 3;
      uint64 points = 5;
  }
}

//
// GetAllRewards
//

message GetAllRewardsRequest {}

message GetAllRewardsResponse {
  repeated Reward rewards = 1;

  message Reward {
    string reward_id = 1;
    string title = 2;
    string description = 3;
    uint64 points = 5;
  }
}

message StatsForTeamByUserRequest {
  string user_id = 1;
}

message StatsForTeamByUserResponse {
  string team_id = 1;
  uint64 score = 2;
  repeated GenderCount gender_count = 3;
  float average_age = 4;
  uint64 user_count = 5;

  message GenderCount {
    Gender gender = 1;
    uint32 count = 2;
  }
}

//
// Verification
//

message VerificationRequest {
  string challenge_id = 1;
}

message VerificationResponse {
  repeated StringVerification string_verifications = 1;
  repeated IntegerVerification integer_verifications = 2;

  message StringVerification {
      uint32 order = 1;
      StringVerificationType type = 2;
      string value = 3;
  }
  message IntegerVerification {
      uint32 order = 1;
      IntegerVerificationType type = 2;
      uint64 value = 3;
  }
}

//
// ImpulseService
//

service ImpulseService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc TrackChallenge(TrackChallengeRequest) returns (TrackChallengeResponse) {}
  rpc GetActiveChallenges(GetActiveChallengesRequest) returns (GetActiveChallengesResponse) {}
  rpc GetScore(GetScoreRequest) returns (GetScoreResponse) {}
  rpc GetRewards(GetRewardsRequest) returns (GetRewardsResponse) {}
  rpc GetAllRewards(GetAllRewardsRequest) returns (GetAllRewardsResponse) {}
  rpc GetAllTeams(GetAllTeamsRequest) returns (GetAllTeamsResponse) {}
  rpc StatsForTeamByUser(StatsForTeamByUserRequest) returns (StatsForTeamByUserResponse) {}
  rpc Verification(VerificationRequest) returns (VerificationResponse) {}
}
