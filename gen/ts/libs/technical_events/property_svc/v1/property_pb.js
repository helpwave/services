// source: libs/technical_events/property_svc/v1/property.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var libs_events_v1_options_pb = require('../../../../libs/events/v1/options_pb.js');
goog.object.extend(proto, libs_events_v1_options_pb);
var services_property_svc_v1_types_pb = require('../../../../services/property_svc/v1/types_pb.js');
goog.object.extend(proto, services_property_svc_v1_types_pb);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.TechnicalEvent', null, global);
goog.exportSymbol('proto.libs.technical_events.property_svc.v1.TechnicalEvent.EventCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.repeatedFields_, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.repeatedFields_, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.repeatedFields_, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.displayName = 'proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_);
};
goog.inherits(proto.libs.technical_events.property_svc.v1.TechnicalEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libs.technical_events.property_svc.v1.TechnicalEvent.displayName = 'proto.libs.technical_events.property_svc.v1.TechnicalEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subjectType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fieldType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.services.property_svc.v1.SubjectType} */ (reader.readEnum());
      msg.setSubjectType(value);
      break;
    case 3:
      var value = /** @type {!proto.services.property_svc.v1.FieldType} */ (reader.readEnum());
      msg.setFieldType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubjectType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFieldType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional services.property_svc.v1.SubjectType subject_type = 2;
 * @return {!proto.services.property_svc.v1.SubjectType}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.getSubjectType = function() {
  return /** @type {!proto.services.property_svc.v1.SubjectType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.services.property_svc.v1.SubjectType} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.setSubjectType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional services.property_svc.v1.FieldType field_type = 3;
 * @return {!proto.services.property_svc.v1.FieldType}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.getFieldType = function() {
  return /** @type {!proto.services.property_svc.v1.FieldType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.services.property_svc.v1.FieldType} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.setFieldType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    setId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string set_id = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.prototype.getSetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.prototype.setSetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectType: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string subject_type = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.prototype.getSubjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.prototype.setSubjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldType: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string field_type = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.prototype.getFieldType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.prototype.setFieldType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldTypeData: (f = msg.getFieldTypeData()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.deserializeBinaryFromReader);
      msg.setFieldTypeData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldTypeData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isCustom: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCustom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsCustom();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_custom = 4;
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.getIsCustom = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.prototype.setIsCustom = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowFreetext: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    selectOptionsList: jspb.Message.toObjectList(msg.getSelectOptionsList(),
    proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowFreetext(value);
      break;
    case 2:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.deserializeBinaryFromReader);
      msg.addSelectOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowFreetext();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSelectOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool allow_freetext = 1;
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.getAllowFreetext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.setAllowFreetext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated SelectOption select_options = 2;
 * @return {!Array<!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption>}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.getSelectOptionsList = function() {
  return /** @type{!Array<!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption, 2));
};


/**
 * @param {!Array<!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption>} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} returns this
*/
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.setSelectOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.addSelectOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.prototype.clearSelectOptionsList = function() {
  return this.setSelectOptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectData: (f = msg.getSelectData()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.deserializeBinaryFromReader);
      msg.setSelectData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.serializeBinaryToWriter
    );
  }
};


/**
 * optional SelectData select_data = 1;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.prototype.getSelectData = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData, 1));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData} returns this
*/
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.prototype.setSelectData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.prototype.clearSelectData = function() {
  return this.setSelectData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.prototype.hasSelectData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FieldTypeData field_type_data = 1;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.prototype.getFieldTypeData = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData, 1));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.prototype.setFieldTypeData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.prototype.clearFieldTypeData = function() {
  return this.setFieldTypeData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.prototype.hasFieldTypeData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    newAllowFreetext: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNewAllowFreetext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewAllowFreetext();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool new_allow_freetext = 1;
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.prototype.getNewAllowFreetext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.prototype.setNewAllowFreetext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    removedSelectOptionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemovedSelectOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemovedSelectOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string removed_select_options = 1;
 * @return {!Array<string>}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.prototype.getRemovedSelectOptionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.prototype.setRemovedSelectOptionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.prototype.addRemovedSelectOptions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.prototype.clearRemovedSelectOptionsList = function() {
  return this.setRemovedSelectOptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    upsertedSelectOptionsList: jspb.Message.toObjectList(msg.getUpsertedSelectOptionsList(),
    proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.deserializeBinaryFromReader);
      msg.addUpsertedSelectOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpsertedSelectOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isCustom: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption;
  return proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCustom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_custom = 4;
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.getIsCustom = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.setIsCustom = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.clearIsCustom = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption.prototype.hasIsCustom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated UpdateSelectOption upserted_select_options = 1;
 * @return {!Array<!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption>}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.prototype.getUpsertedSelectOptionsList = function() {
  return /** @type{!Array<!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption, 1));
};


/**
 * @param {!Array<!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption>} value
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.prototype.setUpsertedSelectOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption}
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.prototype.addUpsertedSelectOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.prototype.clearUpsertedSelectOptionsList = function() {
  return this.setUpsertedSelectOptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent;
  return proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent}
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.EventCase = {
  EVENT_NOT_SET: 0,
  PROPERTY_CREATED: 1,
  PROPERTY_DESCRIPTION_UPDATED: 2,
  PROPERTY_SET_ID_UPDATED: 3,
  PROPERTY_SUBJECT_TYPE_UPDATED: 4,
  PROPERTY_FIELD_TYPE_UPDATED: 5,
  PROPERTY_FIELD_TYPE_DATA_CREATED: 6,
  PROPERTY_NAME_UPDATED: 7,
  PROPERTY_FIELD_TYPE_DATA_ALLOW_FREETEXT_UPDATED: 8,
  PROPERTY_FIELD_TYPE_DATA_SELECT_OPTIONS_REMOVED: 9,
  PROPERTY_FIELD_TYPE_DATA_SELECT_OPTIONS_UPSERTED: 10,
  PROPERTY_ARCHIVED: 11,
  PROPERTY_RETRIEVED: 12
};

/**
 * @return {proto.libs.technical_events.property_svc.v1.TechnicalEvent.EventCase}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getEventCase = function() {
  return /** @type {proto.libs.technical_events.property_svc.v1.TechnicalEvent.EventCase} */(jspb.Message.computeOneofCase(this, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.libs.technical_events.property_svc.v1.TechnicalEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    propertyCreated: (f = msg.getPropertyCreated()) && proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.toObject(includeInstance, f),
    propertyDescriptionUpdated: (f = msg.getPropertyDescriptionUpdated()) && proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.toObject(includeInstance, f),
    propertySetIdUpdated: (f = msg.getPropertySetIdUpdated()) && proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.toObject(includeInstance, f),
    propertySubjectTypeUpdated: (f = msg.getPropertySubjectTypeUpdated()) && proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.toObject(includeInstance, f),
    propertyFieldTypeUpdated: (f = msg.getPropertyFieldTypeUpdated()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.toObject(includeInstance, f),
    propertyFieldTypeDataCreated: (f = msg.getPropertyFieldTypeDataCreated()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.toObject(includeInstance, f),
    propertyNameUpdated: (f = msg.getPropertyNameUpdated()) && proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.toObject(includeInstance, f),
    propertyFieldTypeDataAllowFreetextUpdated: (f = msg.getPropertyFieldTypeDataAllowFreetextUpdated()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.toObject(includeInstance, f),
    propertyFieldTypeDataSelectOptionsRemoved: (f = msg.getPropertyFieldTypeDataSelectOptionsRemoved()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.toObject(includeInstance, f),
    propertyFieldTypeDataSelectOptionsUpserted: (f = msg.getPropertyFieldTypeDataSelectOptionsUpserted()) && proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.toObject(includeInstance, f),
    propertyArchived: (f = msg.getPropertyArchived()) && proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.toObject(includeInstance, f),
    propertyRetrieved: (f = msg.getPropertyRetrieved()) && proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libs.technical_events.property_svc.v1.TechnicalEvent;
  return proto.libs.technical_events.property_svc.v1.TechnicalEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.deserializeBinaryFromReader);
      msg.setPropertyCreated(value);
      break;
    case 2:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.deserializeBinaryFromReader);
      msg.setPropertyDescriptionUpdated(value);
      break;
    case 3:
      var value = new proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.deserializeBinaryFromReader);
      msg.setPropertySetIdUpdated(value);
      break;
    case 4:
      var value = new proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.deserializeBinaryFromReader);
      msg.setPropertySubjectTypeUpdated(value);
      break;
    case 5:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.deserializeBinaryFromReader);
      msg.setPropertyFieldTypeUpdated(value);
      break;
    case 6:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.deserializeBinaryFromReader);
      msg.setPropertyFieldTypeDataCreated(value);
      break;
    case 7:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.deserializeBinaryFromReader);
      msg.setPropertyNameUpdated(value);
      break;
    case 8:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.deserializeBinaryFromReader);
      msg.setPropertyFieldTypeDataAllowFreetextUpdated(value);
      break;
    case 9:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.deserializeBinaryFromReader);
      msg.setPropertyFieldTypeDataSelectOptionsRemoved(value);
      break;
    case 10:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.deserializeBinaryFromReader);
      msg.setPropertyFieldTypeDataSelectOptionsUpserted(value);
      break;
    case 11:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.deserializeBinaryFromReader);
      msg.setPropertyArchived(value);
      break;
    case 12:
      var value = new proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent;
      reader.readMessage(value,proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.deserializeBinaryFromReader);
      msg.setPropertyRetrieved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libs.technical_events.property_svc.v1.TechnicalEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPropertyCreated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyDescriptionUpdated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertySetIdUpdated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertySubjectTypeUpdated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyFieldTypeUpdated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyFieldTypeDataCreated();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyNameUpdated();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyFieldTypeDataAllowFreetextUpdated();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyFieldTypeDataSelectOptionsRemoved();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyFieldTypeDataSelectOptionsUpserted();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyArchived();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPropertyRetrieved();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional PropertyCreatedEvent property_created = 1;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyCreated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent, 1));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyCreatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyCreated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyCreated = function() {
  return this.setPropertyCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyCreated = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PropertyDescriptionUpdatedEvent property_description_updated = 2;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyDescriptionUpdated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent, 2));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyDescriptionUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyDescriptionUpdated = function() {
  return this.setPropertyDescriptionUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyDescriptionUpdated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PropertySetIDUpdatedEvent property_set_id_updated = 3;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertySetIdUpdated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent, 3));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertySetIdUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertySetIdUpdated = function() {
  return this.setPropertySetIdUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertySetIdUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PropertySubjectTypeUpdatedEvent property_subject_type_updated = 4;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertySubjectTypeUpdated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent, 4));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertySubjectTypeUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertySubjectTypeUpdated = function() {
  return this.setPropertySubjectTypeUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertySubjectTypeUpdated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PropertyFieldTypeUpdatedEvent property_field_type_updated = 5;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyFieldTypeUpdated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent, 5));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyFieldTypeUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyFieldTypeUpdated = function() {
  return this.setPropertyFieldTypeUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyFieldTypeUpdated = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PropertyFieldTypeDataCreatedEvent property_field_type_data_created = 6;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyFieldTypeDataCreated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent, 6));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyFieldTypeDataCreated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyFieldTypeDataCreated = function() {
  return this.setPropertyFieldTypeDataCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyFieldTypeDataCreated = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PropertyNameUpdatedEvent property_name_updated = 7;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyNameUpdated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent, 7));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyNameUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyNameUpdated = function() {
  return this.setPropertyNameUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyNameUpdated = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PropertyFieldTypeDataAllowFreetextUpdatedEvent property_field_type_data_allow_freetext_updated = 8;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyFieldTypeDataAllowFreetextUpdated = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent, 8));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyFieldTypeDataAllowFreetextUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyFieldTypeDataAllowFreetextUpdated = function() {
  return this.setPropertyFieldTypeDataAllowFreetextUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyFieldTypeDataAllowFreetextUpdated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PropertyFieldTypeDataSelectOptionsRemovedEvent property_field_type_data_select_options_removed = 9;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyFieldTypeDataSelectOptionsRemoved = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent, 9));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyFieldTypeDataSelectOptionsRemoved = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyFieldTypeDataSelectOptionsRemoved = function() {
  return this.setPropertyFieldTypeDataSelectOptionsRemoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyFieldTypeDataSelectOptionsRemoved = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PropertyFieldTypeDataSelectOptionsUpsertedEvent property_field_type_data_select_options_upserted = 10;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyFieldTypeDataSelectOptionsUpserted = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent, 10));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyFieldTypeDataSelectOptionsUpserted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyFieldTypeDataSelectOptionsUpserted = function() {
  return this.setPropertyFieldTypeDataSelectOptionsUpserted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyFieldTypeDataSelectOptionsUpserted = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PropertyArchivedEvent property_archived = 11;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyArchived = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent, 11));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyArchivedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyArchived = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyArchived = function() {
  return this.setPropertyArchived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyArchived = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PropertyRetrievedEvent property_retrieved = 12;
 * @return {?proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.getPropertyRetrieved = function() {
  return /** @type{?proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent} */ (
    jspb.Message.getWrapperField(this, proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent, 12));
};


/**
 * @param {?proto.libs.technical_events.property_svc.v1.PropertyRetrievedEvent|undefined} value
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
*/
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.setPropertyRetrieved = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.libs.technical_events.property_svc.v1.TechnicalEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libs.technical_events.property_svc.v1.TechnicalEvent} returns this
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.clearPropertyRetrieved = function() {
  return this.setPropertyRetrieved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libs.technical_events.property_svc.v1.TechnicalEvent.prototype.hasPropertyRetrieved = function() {
  return jspb.Message.getField(this, 12) != null;
};


goog.object.extend(exports, proto.libs.technical_events.property_svc.v1);
