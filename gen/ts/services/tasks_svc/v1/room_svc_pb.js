// source: services/tasks_svc/v1/room_svc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var libs_common_v1_conflict_pb = require('../../../libs/common/v1/conflict_pb.js');
goog.object.extend(proto, libs_common_v1_conflict_pb);
goog.exportSymbol('proto.services.tasks_svc.v1.CreateRoomRequest', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.CreateRoomResponse', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.DeleteRoomRequest', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.DeleteRoomResponse', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomRequest', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomResponse', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomResponse.Bed', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomsRequest', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomsResponse', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomsResponse.Room', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.UpdateRoomRequest', null, global);
goog.exportSymbol('proto.services.tasks_svc.v1.UpdateRoomResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.CreateRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.CreateRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.CreateRoomRequest.displayName = 'proto.services.tasks_svc.v1.CreateRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.CreateRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.CreateRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.CreateRoomResponse.displayName = 'proto.services.tasks_svc.v1.CreateRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomRequest.displayName = 'proto.services.tasks_svc.v1.GetRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.tasks_svc.v1.GetRoomResponse.repeatedFields_, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomResponse.displayName = 'proto.services.tasks_svc.v1.GetRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomResponse.Bed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomResponse.Bed.displayName = 'proto.services.tasks_svc.v1.GetRoomResponse.Bed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomsRequest.displayName = 'proto.services.tasks_svc.v1.GetRoomsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.tasks_svc.v1.GetRoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomsResponse.displayName = 'proto.services.tasks_svc.v1.GetRoomsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.tasks_svc.v1.GetRoomsResponse.Room.repeatedFields_, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomsResponse.Room, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomsResponse.Room.displayName = 'proto.services.tasks_svc.v1.GetRoomsResponse.Room';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.displayName = 'proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.UpdateRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.UpdateRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.UpdateRoomRequest.displayName = 'proto.services.tasks_svc.v1.UpdateRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.UpdateRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.UpdateRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.UpdateRoomResponse.displayName = 'proto.services.tasks_svc.v1.UpdateRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.DeleteRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.DeleteRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.DeleteRoomRequest.displayName = 'proto.services.tasks_svc.v1.DeleteRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.DeleteRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.DeleteRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.DeleteRoomResponse.displayName = 'proto.services.tasks_svc.v1.DeleteRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.displayName = 'proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.repeatedFields_, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.displayName = 'proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.repeatedFields_, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.displayName = 'proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.displayName = 'proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.displayName = 'proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.CreateRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.CreateRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.CreateRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.CreateRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    wardId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.CreateRoomRequest}
 */
proto.services.tasks_svc.v1.CreateRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.CreateRoomRequest;
  return proto.services.tasks_svc.v1.CreateRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.CreateRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.CreateRoomRequest}
 */
proto.services.tasks_svc.v1.CreateRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.CreateRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.CreateRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.CreateRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.CreateRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWardId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.CreateRoomRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.CreateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.CreateRoomRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ward_id = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.CreateRoomRequest.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.CreateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.CreateRoomRequest.prototype.setWardId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.CreateRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.CreateRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.CreateRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.CreateRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consistency: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.CreateRoomResponse}
 */
proto.services.tasks_svc.v1.CreateRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.CreateRoomResponse;
  return proto.services.tasks_svc.v1.CreateRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.CreateRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.CreateRoomResponse}
 */
proto.services.tasks_svc.v1.CreateRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.CreateRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.CreateRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.CreateRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.CreateRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.CreateRoomResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.CreateRoomResponse} returns this
 */
proto.services.tasks_svc.v1.CreateRoomResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consistency = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.CreateRoomResponse.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.CreateRoomResponse} returns this
 */
proto.services.tasks_svc.v1.CreateRoomResponse.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomRequest}
 */
proto.services.tasks_svc.v1.GetRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomRequest;
  return proto.services.tasks_svc.v1.GetRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomRequest}
 */
proto.services.tasks_svc.v1.GetRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomRequest} returns this
 */
proto.services.tasks_svc.v1.GetRoomRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.tasks_svc.v1.GetRoomResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bedsList: jspb.Message.toObjectList(msg.getBedsList(),
    proto.services.tasks_svc.v1.GetRoomResponse.Bed.toObject, includeInstance),
    wardId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    consistency: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse}
 */
proto.services.tasks_svc.v1.GetRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomResponse;
  return proto.services.tasks_svc.v1.GetRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse}
 */
proto.services.tasks_svc.v1.GetRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.services.tasks_svc.v1.GetRoomResponse.Bed;
      reader.readMessage(value,proto.services.tasks_svc.v1.GetRoomResponse.Bed.deserializeBinaryFromReader);
      msg.addBeds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.services.tasks_svc.v1.GetRoomResponse.Bed.serializeBinaryToWriter
    );
  }
  f = message.getWardId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomResponse.Bed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse.Bed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consistency: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse.Bed}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomResponse.Bed;
  return proto.services.tasks_svc.v1.GetRoomResponse.Bed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse.Bed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse.Bed}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomResponse.Bed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse.Bed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string consistency = 3;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.Bed.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Bed beds = 3;
 * @return {!Array<!proto.services.tasks_svc.v1.GetRoomResponse.Bed>}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.getBedsList = function() {
  return /** @type{!Array<!proto.services.tasks_svc.v1.GetRoomResponse.Bed>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.tasks_svc.v1.GetRoomResponse.Bed, 3));
};


/**
 * @param {!Array<!proto.services.tasks_svc.v1.GetRoomResponse.Bed>} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse} returns this
*/
proto.services.tasks_svc.v1.GetRoomResponse.prototype.setBedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetRoomResponse.Bed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse.Bed}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.addBeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.services.tasks_svc.v1.GetRoomResponse.Bed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.clearBedsList = function() {
  return this.setBedsList([]);
};


/**
 * optional string ward_id = 5;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.setWardId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string consistency = 6;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomResponse.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomsRequest}
 */
proto.services.tasks_svc.v1.GetRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomsRequest;
  return proto.services.tasks_svc.v1.GetRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomsRequest}
 */
proto.services.tasks_svc.v1.GetRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ward_id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsRequest.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsRequest} returns this
 */
proto.services.tasks_svc.v1.GetRoomsRequest.prototype.setWardId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.tasks_svc.v1.GetRoomsRequest} returns this
 */
proto.services.tasks_svc.v1.GetRoomsRequest.prototype.clearWardId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.tasks_svc.v1.GetRoomsRequest.prototype.hasWardId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.tasks_svc.v1.GetRoomsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    proto.services.tasks_svc.v1.GetRoomsResponse.Room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomsResponse;
  return proto.services.tasks_svc.v1.GetRoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.tasks_svc.v1.GetRoomsResponse.Room;
      reader.readMessage(value,proto.services.tasks_svc.v1.GetRoomsResponse.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.tasks_svc.v1.GetRoomsResponse.Room.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomsResponse.Room.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bedsList: jspb.Message.toObjectList(msg.getBedsList(),
    proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.toObject, includeInstance),
    wardId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    consistency: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomsResponse.Room;
  return proto.services.tasks_svc.v1.GetRoomsResponse.Room.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed;
      reader.readMessage(value,proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.deserializeBinaryFromReader);
      msg.addBeds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomsResponse.Room.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.serializeBinaryToWriter
    );
  }
  f = message.getWardId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consistency: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed;
  return proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string consistency = 3;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Bed beds = 3;
 * @return {!Array<!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed>}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.getBedsList = function() {
  return /** @type{!Array<!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed, 3));
};


/**
 * @param {!Array<!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed>} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} returns this
*/
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.setBedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.addBeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.services.tasks_svc.v1.GetRoomsResponse.Room.Bed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.clearBedsList = function() {
  return this.setBedsList([]);
};


/**
 * optional string ward_id = 5;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.setWardId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string consistency = 6;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.Room.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Room rooms = 1;
 * @return {!Array<!proto.services.tasks_svc.v1.GetRoomsResponse.Room>}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.prototype.getRoomsList = function() {
  return /** @type{!Array<!proto.services.tasks_svc.v1.GetRoomsResponse.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.tasks_svc.v1.GetRoomsResponse.Room, 1));
};


/**
 * @param {!Array<!proto.services.tasks_svc.v1.GetRoomsResponse.Room>} value
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse} returns this
*/
proto.services.tasks_svc.v1.GetRoomsResponse.prototype.setRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetRoomsResponse.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse.Room}
 */
proto.services.tasks_svc.v1.GetRoomsResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.tasks_svc.v1.GetRoomsResponse.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.tasks_svc.v1.GetRoomsResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomsResponse.prototype.clearRoomsList = function() {
  return this.setRoomsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.UpdateRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.UpdateRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consistency: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.UpdateRoomRequest;
  return proto.services.tasks_svc.v1.UpdateRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.UpdateRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.UpdateRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.UpdateRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string consistency = 3;
 * @return {string}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.setConsistency = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomRequest} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.clearConsistency = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.tasks_svc.v1.UpdateRoomRequest.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.UpdateRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.UpdateRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    conflict: (f = msg.getConflict()) && libs_common_v1_conflict_pb.Conflict.toObject(includeInstance, f),
    consistency: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomResponse}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.UpdateRoomResponse;
  return proto.services.tasks_svc.v1.UpdateRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.UpdateRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomResponse}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new libs_common_v1_conflict_pb.Conflict;
      reader.readMessage(value,libs_common_v1_conflict_pb.Conflict.deserializeBinaryFromReader);
      msg.setConflict(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.UpdateRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.UpdateRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConflict();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      libs_common_v1_conflict_pb.Conflict.serializeBinaryToWriter
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional libs.common.v1.Conflict conflict = 1;
 * @return {?proto.libs.common.v1.Conflict}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.getConflict = function() {
  return /** @type{?proto.libs.common.v1.Conflict} */ (
    jspb.Message.getWrapperField(this, libs_common_v1_conflict_pb.Conflict, 1));
};


/**
 * @param {?proto.libs.common.v1.Conflict|undefined} value
 * @return {!proto.services.tasks_svc.v1.UpdateRoomResponse} returns this
*/
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.setConflict = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.tasks_svc.v1.UpdateRoomResponse} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.clearConflict = function() {
  return this.setConflict(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.hasConflict = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string consistency = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.UpdateRoomResponse} returns this
 */
proto.services.tasks_svc.v1.UpdateRoomResponse.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.DeleteRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.DeleteRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.DeleteRoomRequest}
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.DeleteRoomRequest;
  return proto.services.tasks_svc.v1.DeleteRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.DeleteRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.DeleteRoomRequest}
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.DeleteRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.DeleteRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.DeleteRoomRequest} returns this
 */
proto.services.tasks_svc.v1.DeleteRoomRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.DeleteRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.DeleteRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.DeleteRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.DeleteRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.DeleteRoomResponse}
 */
proto.services.tasks_svc.v1.DeleteRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.DeleteRoomResponse;
  return proto.services.tasks_svc.v1.DeleteRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.DeleteRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.DeleteRoomResponse}
 */
proto.services.tasks_svc.v1.DeleteRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.DeleteRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.DeleteRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.DeleteRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.DeleteRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest;
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse;
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room;
      reader.readMessage(value,proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bedsList: jspb.Message.toObjectList(msg.getBedsList(),
    proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.toObject, includeInstance),
    consistency: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room;
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed;
      reader.readMessage(value,proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.deserializeBinaryFromReader);
      msg.addBeds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.serializeBinaryToWriter
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    patient: (f = msg.getPatient()) && proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.toObject(includeInstance, f),
    consistency: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed;
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient;
      reader.readMessage(value,proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.deserializeBinaryFromReader);
      msg.setPatient(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPatient();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.serializeBinaryToWriter
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.toObject = function(opt_includeInstance) {
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    humanReadableIdentifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tasksUnscheduled: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tasksInProgress: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tasksDone: jspb.Message.getFieldWithDefault(msg, 5, 0),
    consistency: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient;
  return proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHumanReadableIdentifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTasksUnscheduled(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTasksInProgress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTasksDone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHumanReadableIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTasksUnscheduled();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTasksInProgress();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTasksDone();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getConsistency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string human_readable_identifier = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.getHumanReadableIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.setHumanReadableIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 tasks_unscheduled = 3;
 * @return {number}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.getTasksUnscheduled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.setTasksUnscheduled = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 tasks_in_progress = 4;
 * @return {number}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.getTasksInProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.setTasksInProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 tasks_done = 5;
 * @return {number}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.getTasksDone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.setTasksDone = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string consistency = 6;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Patient patient = 2;
 * @return {?proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.getPatient = function() {
  return /** @type{?proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient} */ (
    jspb.Message.getWrapperField(this, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient, 2));
};


/**
 * @param {?proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.Patient|undefined} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} returns this
*/
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.setPatient = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.clearPatient = function() {
  return this.setPatient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.hasPatient = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string consistency = 4;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Bed beds = 3;
 * @return {!Array<!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed>}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.getBedsList = function() {
  return /** @type{!Array<!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed, 3));
};


/**
 * @param {!Array<!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed>} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} returns this
*/
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.setBedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.addBeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.Bed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.clearBedsList = function() {
  return this.setBedsList([]);
};


/**
 * optional string consistency = 4;
 * @return {string}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.getConsistency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Room rooms = 1;
 * @return {!Array<!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room>}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.prototype.getRoomsList = function() {
  return /** @type{!Array<!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room, 1));
};


/**
 * @param {!Array<!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room>} value
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse} returns this
*/
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.prototype.setRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room}
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse} returns this
 */
proto.services.tasks_svc.v1.GetRoomOverviewsByWardResponse.prototype.clearRoomsList = function() {
  return this.setRoomsList([]);
};


goog.object.extend(exports, proto.services.tasks_svc.v1);
