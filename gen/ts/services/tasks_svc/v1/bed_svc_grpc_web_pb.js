/**
 * @fileoverview gRPC-Web generated client stub for services.tasks_svc.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: services/tasks_svc/v1/bed_svc.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var libs_common_v1_conflict_pb = require('../../../libs/common/v1/conflict_pb.js')
const proto = {};
proto.services = {};
proto.services.tasks_svc = {};
proto.services.tasks_svc.v1 = require('./bed_svc_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.services.tasks_svc.v1.BedServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.services.tasks_svc.v1.BedServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.CreateBedRequest,
 *   !proto.services.tasks_svc.v1.CreateBedResponse>}
 */
const methodDescriptor_BedService_CreateBed = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/CreateBed',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.CreateBedRequest,
  proto.services.tasks_svc.v1.CreateBedResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.CreateBedRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.CreateBedResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.CreateBedRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.CreateBedResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.CreateBedResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.createBed =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/CreateBed',
      request,
      metadata || {},
      methodDescriptor_BedService_CreateBed,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.CreateBedRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.CreateBedResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.createBed =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/CreateBed',
      request,
      metadata || {},
      methodDescriptor_BedService_CreateBed);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.BulkCreateBedsRequest,
 *   !proto.services.tasks_svc.v1.BulkCreateBedsResponse>}
 */
const methodDescriptor_BedService_BulkCreateBeds = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/BulkCreateBeds',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.BulkCreateBedsRequest,
  proto.services.tasks_svc.v1.BulkCreateBedsResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.BulkCreateBedsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.BulkCreateBedsResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.BulkCreateBedsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.BulkCreateBedsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.BulkCreateBedsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.bulkCreateBeds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/BulkCreateBeds',
      request,
      metadata || {},
      methodDescriptor_BedService_BulkCreateBeds,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.BulkCreateBedsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.BulkCreateBedsResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.bulkCreateBeds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/BulkCreateBeds',
      request,
      metadata || {},
      methodDescriptor_BedService_BulkCreateBeds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.GetBedRequest,
 *   !proto.services.tasks_svc.v1.GetBedResponse>}
 */
const methodDescriptor_BedService_GetBed = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/GetBed',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.GetBedRequest,
  proto.services.tasks_svc.v1.GetBedResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.GetBedRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.GetBedResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.GetBedRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.GetBedResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.GetBedResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.getBed =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBed',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBed,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetBedRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.GetBedResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.getBed =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBed',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBed);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.GetBedByPatientRequest,
 *   !proto.services.tasks_svc.v1.GetBedByPatientResponse>}
 */
const methodDescriptor_BedService_GetBedByPatient = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/GetBedByPatient',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.GetBedByPatientRequest,
  proto.services.tasks_svc.v1.GetBedByPatientResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.GetBedByPatientRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.GetBedByPatientResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.GetBedByPatientRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.GetBedByPatientResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.GetBedByPatientResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.getBedByPatient =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBedByPatient',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBedByPatient,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetBedByPatientRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.GetBedByPatientResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.getBedByPatient =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBedByPatient',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBedByPatient);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.GetBedsRequest,
 *   !proto.services.tasks_svc.v1.GetBedsResponse>}
 */
const methodDescriptor_BedService_GetBeds = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/GetBeds',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.GetBedsRequest,
  proto.services.tasks_svc.v1.GetBedsResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.GetBedsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.GetBedsResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.GetBedsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.GetBedsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.GetBedsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.getBeds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBeds',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBeds,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetBedsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.GetBedsResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.getBeds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBeds',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBeds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.GetBedsByRoomRequest,
 *   !proto.services.tasks_svc.v1.GetBedsByRoomResponse>}
 */
const methodDescriptor_BedService_GetBedsByRoom = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/GetBedsByRoom',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.GetBedsByRoomRequest,
  proto.services.tasks_svc.v1.GetBedsByRoomResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.GetBedsByRoomRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.GetBedsByRoomResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.GetBedsByRoomRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.GetBedsByRoomResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.GetBedsByRoomResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.getBedsByRoom =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBedsByRoom',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBedsByRoom,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.GetBedsByRoomRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.GetBedsByRoomResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.getBedsByRoom =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/GetBedsByRoom',
      request,
      metadata || {},
      methodDescriptor_BedService_GetBedsByRoom);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.UpdateBedRequest,
 *   !proto.services.tasks_svc.v1.UpdateBedResponse>}
 */
const methodDescriptor_BedService_UpdateBed = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/UpdateBed',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.UpdateBedRequest,
  proto.services.tasks_svc.v1.UpdateBedResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.UpdateBedRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.UpdateBedResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.UpdateBedRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.UpdateBedResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.UpdateBedResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.updateBed =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/UpdateBed',
      request,
      metadata || {},
      methodDescriptor_BedService_UpdateBed,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.UpdateBedRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.UpdateBedResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.updateBed =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/UpdateBed',
      request,
      metadata || {},
      methodDescriptor_BedService_UpdateBed);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.tasks_svc.v1.DeleteBedRequest,
 *   !proto.services.tasks_svc.v1.DeleteBedResponse>}
 */
const methodDescriptor_BedService_DeleteBed = new grpc.web.MethodDescriptor(
  '/services.tasks_svc.v1.BedService/DeleteBed',
  grpc.web.MethodType.UNARY,
  proto.services.tasks_svc.v1.DeleteBedRequest,
  proto.services.tasks_svc.v1.DeleteBedResponse,
  /**
   * @param {!proto.services.tasks_svc.v1.DeleteBedRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.tasks_svc.v1.DeleteBedResponse.deserializeBinary
);


/**
 * @param {!proto.services.tasks_svc.v1.DeleteBedRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.tasks_svc.v1.DeleteBedResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.tasks_svc.v1.DeleteBedResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.tasks_svc.v1.BedServiceClient.prototype.deleteBed =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/DeleteBed',
      request,
      metadata || {},
      methodDescriptor_BedService_DeleteBed,
      callback);
};


/**
 * @param {!proto.services.tasks_svc.v1.DeleteBedRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.tasks_svc.v1.DeleteBedResponse>}
 *     Promise that resolves to the response
 */
proto.services.tasks_svc.v1.BedServicePromiseClient.prototype.deleteBed =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.tasks_svc.v1.BedService/DeleteBed',
      request,
      metadata || {},
      methodDescriptor_BedService_DeleteBed);
};


module.exports = proto.services.tasks_svc.v1;

