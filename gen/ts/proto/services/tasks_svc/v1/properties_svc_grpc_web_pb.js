/**
 * @fileoverview gRPC-Web generated client stub for proto.services.tasks_svc.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: proto/services/tasks_svc/v1/properties_svc.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.proto = {};
proto.proto.services = {};
proto.proto.services.tasks_svc = {};
proto.proto.services.tasks_svc.v1 = require('./properties_svc_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.CreatePropertySetRequest,
 *   !proto.proto.services.tasks_svc.v1.CreatePropertySetResponse>}
 */
const methodDescriptor_PropertiesService_CreatePropertySet = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/CreatePropertySet',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.CreatePropertySetRequest,
  proto.proto.services.tasks_svc.v1.CreatePropertySetResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.CreatePropertySetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.CreatePropertySetResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.CreatePropertySetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.CreatePropertySetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.CreatePropertySetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.createPropertySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/CreatePropertySet',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_CreatePropertySet,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.CreatePropertySetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.CreatePropertySetResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.createPropertySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/CreatePropertySet',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_CreatePropertySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.UpdatePropertySetRequest,
 *   !proto.proto.services.tasks_svc.v1.UpdatePropertySetResponse>}
 */
const methodDescriptor_PropertiesService_UpdatePropertySet = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/UpdatePropertySet',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.UpdatePropertySetRequest,
  proto.proto.services.tasks_svc.v1.UpdatePropertySetResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.UpdatePropertySetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.UpdatePropertySetResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.UpdatePropertySetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.UpdatePropertySetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.UpdatePropertySetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.updatePropertySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/UpdatePropertySet',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_UpdatePropertySet,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.UpdatePropertySetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.UpdatePropertySetResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.updatePropertySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/UpdatePropertySet',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_UpdatePropertySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.DeletePropertySetRequest,
 *   !proto.proto.services.tasks_svc.v1.DeletePropertySetResponse>}
 */
const methodDescriptor_PropertiesService_DeletePropertySet = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/DeletePropertySet',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.DeletePropertySetRequest,
  proto.proto.services.tasks_svc.v1.DeletePropertySetResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.DeletePropertySetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.DeletePropertySetResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.DeletePropertySetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.DeletePropertySetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.DeletePropertySetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.deletePropertySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/DeletePropertySet',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_DeletePropertySet,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.DeletePropertySetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.DeletePropertySetResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.deletePropertySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/DeletePropertySet',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_DeletePropertySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.CreatePropertyRequest,
 *   !proto.proto.services.tasks_svc.v1.CreatePropertyResponse>}
 */
const methodDescriptor_PropertiesService_CreateProperty = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/CreateProperty',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.CreatePropertyRequest,
  proto.proto.services.tasks_svc.v1.CreatePropertyResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.CreatePropertyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.CreatePropertyResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.CreatePropertyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.CreatePropertyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.CreatePropertyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.createProperty =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/CreateProperty',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_CreateProperty,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.CreatePropertyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.CreatePropertyResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.createProperty =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/CreateProperty',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_CreateProperty);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.GetPropertyRequest,
 *   !proto.proto.services.tasks_svc.v1.GetPropertyResponse>}
 */
const methodDescriptor_PropertiesService_GetProperty = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/GetProperty',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.GetPropertyRequest,
  proto.proto.services.tasks_svc.v1.GetPropertyResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.GetPropertyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.GetPropertyResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.GetPropertyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.GetPropertyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.GetPropertyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.getProperty =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/GetProperty',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_GetProperty,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.GetPropertyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.GetPropertyResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.getProperty =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/GetProperty',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_GetProperty);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.GetPropertiesRequest,
 *   !proto.proto.services.tasks_svc.v1.GetPropertiesResponse>}
 */
const methodDescriptor_PropertiesService_GetProperties = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/GetProperties',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.GetPropertiesRequest,
  proto.proto.services.tasks_svc.v1.GetPropertiesResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.GetPropertiesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.GetPropertiesResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.GetPropertiesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.GetPropertiesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.GetPropertiesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.getProperties =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/GetProperties',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_GetProperties,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.GetPropertiesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.GetPropertiesResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.getProperties =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/GetProperties',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_GetProperties);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.UpdatePropertyRequest,
 *   !proto.proto.services.tasks_svc.v1.UpdatePropertyResponse>}
 */
const methodDescriptor_PropertiesService_UpdateProperty = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/UpdateProperty',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.UpdatePropertyRequest,
  proto.proto.services.tasks_svc.v1.UpdatePropertyResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.UpdatePropertyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.UpdatePropertyResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.UpdatePropertyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.UpdatePropertyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.UpdatePropertyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.updateProperty =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/UpdateProperty',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_UpdateProperty,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.UpdatePropertyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.UpdatePropertyResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.updateProperty =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/UpdateProperty',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_UpdateProperty);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.AttachPropertyValueRequest,
 *   !proto.proto.services.tasks_svc.v1.AttachPropertyValueResponse>}
 */
const methodDescriptor_PropertiesService_AttachPropertyValue = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/AttachPropertyValue',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.AttachPropertyValueRequest,
  proto.proto.services.tasks_svc.v1.AttachPropertyValueResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.AttachPropertyValueRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.AttachPropertyValueResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.AttachPropertyValueRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.AttachPropertyValueResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.AttachPropertyValueResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.attachPropertyValue =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/AttachPropertyValue',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_AttachPropertyValue,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.AttachPropertyValueRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.AttachPropertyValueResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.attachPropertyValue =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/AttachPropertyValue',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_AttachPropertyValue);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest,
 *   !proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse>}
 */
const methodDescriptor_PropertiesService_GetAttachedPropertyValues = new grpc.web.MethodDescriptor(
  '/proto.services.tasks_svc.v1.PropertiesService/GetAttachedPropertyValues',
  grpc.web.MethodType.UNARY,
  proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest,
  proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse,
  /**
   * @param {!proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.tasks_svc.v1.PropertiesServiceClient.prototype.getAttachedPropertyValues =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/GetAttachedPropertyValues',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_GetAttachedPropertyValues,
      callback);
};


/**
 * @param {!proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.tasks_svc.v1.PropertiesServicePromiseClient.prototype.getAttachedPropertyValues =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.tasks_svc.v1.PropertiesService/GetAttachedPropertyValues',
      request,
      metadata || {},
      methodDescriptor_PropertiesService_GetAttachedPropertyValues);
};


module.exports = proto.proto.services.tasks_svc.v1;

