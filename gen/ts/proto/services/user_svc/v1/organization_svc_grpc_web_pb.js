/**
 * @fileoverview gRPC-Web generated client stub for proto.services.user_svc.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v0.0.0
// source: proto/services/user_svc/v1/organization_svc.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.proto = {};
proto.proto.services = {};
proto.proto.services.user_svc = {};
proto.proto.services.user_svc.v1 = require('./organization_svc_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.user_svc.v1.CreateOrganizationRequest,
 *   !proto.proto.services.user_svc.v1.CreateOrganizationResponse>}
 */
const methodDescriptor_OrganizationService_CreateOrganization = new grpc.web.MethodDescriptor(
  '/proto.services.user_svc.v1.OrganizationService/CreateOrganization',
  grpc.web.MethodType.UNARY,
  proto.proto.services.user_svc.v1.CreateOrganizationRequest,
  proto.proto.services.user_svc.v1.CreateOrganizationResponse,
  /**
   * @param {!proto.proto.services.user_svc.v1.CreateOrganizationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.user_svc.v1.CreateOrganizationResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.user_svc.v1.CreateOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.user_svc.v1.CreateOrganizationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.user_svc.v1.CreateOrganizationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient.prototype.createOrganization =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/CreateOrganization',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_CreateOrganization,
      callback);
};


/**
 * @param {!proto.proto.services.user_svc.v1.CreateOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.user_svc.v1.CreateOrganizationResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient.prototype.createOrganization =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/CreateOrganization',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_CreateOrganization);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.user_svc.v1.CreateOrganizationForUserRequest,
 *   !proto.proto.services.user_svc.v1.CreateOrganizationForUserResponse>}
 */
const methodDescriptor_OrganizationService_CreateOrganizationForUser = new grpc.web.MethodDescriptor(
  '/proto.services.user_svc.v1.OrganizationService/CreateOrganizationForUser',
  grpc.web.MethodType.UNARY,
  proto.proto.services.user_svc.v1.CreateOrganizationForUserRequest,
  proto.proto.services.user_svc.v1.CreateOrganizationForUserResponse,
  /**
   * @param {!proto.proto.services.user_svc.v1.CreateOrganizationForUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.user_svc.v1.CreateOrganizationForUserResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.user_svc.v1.CreateOrganizationForUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.user_svc.v1.CreateOrganizationForUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.user_svc.v1.CreateOrganizationForUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient.prototype.createOrganizationForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/CreateOrganizationForUser',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_CreateOrganizationForUser,
      callback);
};


/**
 * @param {!proto.proto.services.user_svc.v1.CreateOrganizationForUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.user_svc.v1.CreateOrganizationForUserResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient.prototype.createOrganizationForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/CreateOrganizationForUser',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_CreateOrganizationForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.user_svc.v1.GetOrganizationRequest,
 *   !proto.proto.services.user_svc.v1.GetOrganizationResponse>}
 */
const methodDescriptor_OrganizationService_GetOrganization = new grpc.web.MethodDescriptor(
  '/proto.services.user_svc.v1.OrganizationService/GetOrganization',
  grpc.web.MethodType.UNARY,
  proto.proto.services.user_svc.v1.GetOrganizationRequest,
  proto.proto.services.user_svc.v1.GetOrganizationResponse,
  /**
   * @param {!proto.proto.services.user_svc.v1.GetOrganizationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.user_svc.v1.GetOrganizationResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.user_svc.v1.GetOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.user_svc.v1.GetOrganizationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.user_svc.v1.GetOrganizationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient.prototype.getOrganization =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/GetOrganization',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_GetOrganization,
      callback);
};


/**
 * @param {!proto.proto.services.user_svc.v1.GetOrganizationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.user_svc.v1.GetOrganizationResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient.prototype.getOrganization =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/GetOrganization',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_GetOrganization);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.user_svc.v1.AddMemberRequest,
 *   !proto.proto.services.user_svc.v1.AddMemberResponse>}
 */
const methodDescriptor_OrganizationService_AddMember = new grpc.web.MethodDescriptor(
  '/proto.services.user_svc.v1.OrganizationService/AddMember',
  grpc.web.MethodType.UNARY,
  proto.proto.services.user_svc.v1.AddMemberRequest,
  proto.proto.services.user_svc.v1.AddMemberResponse,
  /**
   * @param {!proto.proto.services.user_svc.v1.AddMemberRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.user_svc.v1.AddMemberResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.user_svc.v1.AddMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.user_svc.v1.AddMemberResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.user_svc.v1.AddMemberResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient.prototype.addMember =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/AddMember',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_AddMember,
      callback);
};


/**
 * @param {!proto.proto.services.user_svc.v1.AddMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.user_svc.v1.AddMemberResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient.prototype.addMember =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/AddMember',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_AddMember);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.user_svc.v1.RemoveMemberRequest,
 *   !proto.proto.services.user_svc.v1.RemoveMemberResponse>}
 */
const methodDescriptor_OrganizationService_RemoveMember = new grpc.web.MethodDescriptor(
  '/proto.services.user_svc.v1.OrganizationService/RemoveMember',
  grpc.web.MethodType.UNARY,
  proto.proto.services.user_svc.v1.RemoveMemberRequest,
  proto.proto.services.user_svc.v1.RemoveMemberResponse,
  /**
   * @param {!proto.proto.services.user_svc.v1.RemoveMemberRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.user_svc.v1.RemoveMemberResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.user_svc.v1.RemoveMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.user_svc.v1.RemoveMemberResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.user_svc.v1.RemoveMemberResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient.prototype.removeMember =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/RemoveMember',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_RemoveMember,
      callback);
};


/**
 * @param {!proto.proto.services.user_svc.v1.RemoveMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.user_svc.v1.RemoveMemberResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient.prototype.removeMember =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/RemoveMember',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_RemoveMember);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.services.user_svc.v1.InviteMemberRequest,
 *   !proto.proto.services.user_svc.v1.InviteMemberResponse>}
 */
const methodDescriptor_OrganizationService_InviteMember = new grpc.web.MethodDescriptor(
  '/proto.services.user_svc.v1.OrganizationService/InviteMember',
  grpc.web.MethodType.UNARY,
  proto.proto.services.user_svc.v1.InviteMemberRequest,
  proto.proto.services.user_svc.v1.InviteMemberResponse,
  /**
   * @param {!proto.proto.services.user_svc.v1.InviteMemberRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.services.user_svc.v1.InviteMemberResponse.deserializeBinary
);


/**
 * @param {!proto.proto.services.user_svc.v1.InviteMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.services.user_svc.v1.InviteMemberResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.services.user_svc.v1.InviteMemberResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.services.user_svc.v1.OrganizationServiceClient.prototype.inviteMember =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/InviteMember',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_InviteMember,
      callback);
};


/**
 * @param {!proto.proto.services.user_svc.v1.InviteMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.services.user_svc.v1.InviteMemberResponse>}
 *     Promise that resolves to the response
 */
proto.proto.services.user_svc.v1.OrganizationServicePromiseClient.prototype.inviteMember =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.services.user_svc.v1.OrganizationService/InviteMember',
      request,
      metadata || {},
      methodDescriptor_OrganizationService_InviteMember);
};


module.exports = proto.proto.services.user_svc.v1;

