// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: proto/services/properties_svc/v1/values.proto

package properties_svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// attach the same property again to update
type AttachPropertyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId   string      `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty" validate:"uuid4"`                                         // @gotags: validate:"uuid4"
	SubjectType SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.properties_svc.v1.SubjectType" json:"subject_type,omitempty"` // TODO: validation (not 0)
	PropertyId  string      `protobuf:"bytes,3,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty" validate:"uuid4"`                                      // @gotags: validate:"uuid4"
	// Types that are assignable to Value:
	//
	//	*AttachPropertyValueRequest_IsUndefined
	//	*AttachPropertyValueRequest_TextValue
	//	*AttachPropertyValueRequest_NumberValue
	//	*AttachPropertyValueRequest_BoolValue
	//	*AttachPropertyValueRequest_DateValue
	//	*AttachPropertyValueRequest_DateTimeValue
	//	*AttachPropertyValueRequest_SelectValue
	Value isAttachPropertyValueRequest_Value `protobuf_oneof:"value"`
}

func (x *AttachPropertyValueRequest) Reset() {
	*x = AttachPropertyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachPropertyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachPropertyValueRequest) ProtoMessage() {}

func (x *AttachPropertyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachPropertyValueRequest.ProtoReflect.Descriptor instead.
func (*AttachPropertyValueRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_properties_svc_v1_values_proto_rawDescGZIP(), []int{0}
}

func (x *AttachPropertyValueRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *AttachPropertyValueRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (m *AttachPropertyValueRequest) GetValue() isAttachPropertyValueRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AttachPropertyValueRequest) GetIsUndefined() bool {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_IsUndefined); ok {
		return x.IsUndefined
	}
	return false
}

func (x *AttachPropertyValueRequest) GetTextValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetNumberValue() float32 {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *AttachPropertyValueRequest) GetBoolValue() bool {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *AttachPropertyValueRequest) GetDateValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_DateValue); ok {
		return x.DateValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetDateTimeValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_DateTimeValue); ok {
		return x.DateTimeValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetSelectValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_SelectValue); ok {
		return x.SelectValue
	}
	return ""
}

type isAttachPropertyValueRequest_Value interface {
	isAttachPropertyValueRequest_Value()
}

type AttachPropertyValueRequest_IsUndefined struct {
	IsUndefined bool `protobuf:"varint,4,opt,name=is_undefined,json=isUndefined,proto3,oneof"` // if it exists, it should be true
}

type AttachPropertyValueRequest_TextValue struct {
	TextValue string `protobuf:"bytes,5,opt,name=text_value,json=textValue,proto3,oneof"` // FIELD_TYPE_TEXT
}

type AttachPropertyValueRequest_NumberValue struct {
	NumberValue float32 `protobuf:"fixed32,6,opt,name=number_value,json=numberValue,proto3,oneof"` // FIELD_TYPE_NUMBER
}

type AttachPropertyValueRequest_BoolValue struct {
	BoolValue bool `protobuf:"varint,7,opt,name=bool_value,json=boolValue,proto3,oneof"` // FIELD_TYPE_CHECKBOX
}

type AttachPropertyValueRequest_DateValue struct {
	DateValue string `protobuf:"bytes,8,opt,name=date_value,json=dateValue,proto3,oneof"` // FIELD_TYPE_DATE TODO: is there a proto date type?
}

type AttachPropertyValueRequest_DateTimeValue struct {
	DateTimeValue string `protobuf:"bytes,9,opt,name=date_time_value,json=dateTimeValue,proto3,oneof"` // FIELD_TYPE_DATE_TIME
}

type AttachPropertyValueRequest_SelectValue struct {
	SelectValue string `protobuf:"bytes,10,opt,name=select_value,json=selectValue,proto3,oneof"` // FIELD_TYPE_SELECT, id of option
}

func (*AttachPropertyValueRequest_IsUndefined) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_TextValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_NumberValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_BoolValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_DateValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_DateTimeValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_SelectValue) isAttachPropertyValueRequest_Value() {}

type AttachPropertyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyValueId string `protobuf:"bytes,1,opt,name=property_value_id,json=propertyValueId,proto3" json:"property_value_id,omitempty"`
}

func (x *AttachPropertyValueResponse) Reset() {
	*x = AttachPropertyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachPropertyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachPropertyValueResponse) ProtoMessage() {}

func (x *AttachPropertyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachPropertyValueResponse.ProtoReflect.Descriptor instead.
func (*AttachPropertyValueResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_properties_svc_v1_values_proto_rawDescGZIP(), []int{1}
}

func (x *AttachPropertyValueResponse) GetPropertyValueId() string {
	if x != nil {
		return x.PropertyValueId
	}
	return ""
}

type GetAttachedPropertyValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetAttachedPropertyValuesRequest) Reset() {
	*x = GetAttachedPropertyValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesRequest) ProtoMessage() {}

func (x *GetAttachedPropertyValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesRequest.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_properties_svc_v1_values_proto_rawDescGZIP(), []int{2}
}

func (x *GetAttachedPropertyValuesRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type GetAttachedPropertyValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*GetAttachedPropertyValuesResponse_Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // TODO: TBD: Property Information for Values
}

func (x *GetAttachedPropertyValuesResponse) Reset() {
	*x = GetAttachedPropertyValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_properties_svc_v1_values_proto_rawDescGZIP(), []int{3}
}

func (x *GetAttachedPropertyValuesResponse) GetValues() []*GetAttachedPropertyValuesResponse_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetAttachedPropertyValuesResponse_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId  string                                       `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	FieldType   FieldType                                    `protobuf:"varint,2,opt,name=field_type,json=fieldType,proto3,enum=proto.services.properties_svc.v1.FieldType" json:"field_type,omitempty"`
	Name        string                                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description *string                                      `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsArchived  bool                                         `protobuf:"varint,5,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	Set         *GetAttachedPropertyValuesResponse_Value_Set `protobuf:"bytes,7,opt,name=set,proto3,oneof" json:"set,omitempty"`
	// Types that are assignable to Value:
	//
	//	*GetAttachedPropertyValuesResponse_Value_IsUndefined
	//	*GetAttachedPropertyValuesResponse_Value_TextValue
	//	*GetAttachedPropertyValuesResponse_Value_NumberValue
	//	*GetAttachedPropertyValuesResponse_Value_BoolValue
	//	*GetAttachedPropertyValuesResponse_Value_DateValue
	//	*GetAttachedPropertyValuesResponse_Value_DateTimeValue
	//	*GetAttachedPropertyValuesResponse_Value_SelectValue
	Value isGetAttachedPropertyValuesResponse_Value_Value `protobuf_oneof:"value"`
}

func (x *GetAttachedPropertyValuesResponse_Value) Reset() {
	*x = GetAttachedPropertyValuesResponse_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse_Value) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse_Value) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse_Value.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse_Value) Descriptor() ([]byte, []int) {
	return file_proto_services_properties_svc_v1_values_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetAttachedPropertyValuesResponse_Value) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *GetAttachedPropertyValuesResponse_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetAttachedPropertyValuesResponse_Value) GetSet() *GetAttachedPropertyValuesResponse_Value_Set {
	if x != nil {
		return x.Set
	}
	return nil
}

func (m *GetAttachedPropertyValuesResponse_Value) GetValue() isGetAttachedPropertyValuesResponse_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *GetAttachedPropertyValuesResponse_Value) GetIsUndefined() bool {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_IsUndefined); ok {
		return x.IsUndefined
	}
	return false
}

func (x *GetAttachedPropertyValuesResponse_Value) GetTextValue() string {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetNumberValue() float32 {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *GetAttachedPropertyValuesResponse_Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDateValue() string {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_DateValue); ok {
		return x.DateValue
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDateTimeValue() string {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_DateTimeValue); ok {
		return x.DateTimeValue
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetSelectValue() string {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_SelectValue); ok {
		return x.SelectValue
	}
	return ""
}

type isGetAttachedPropertyValuesResponse_Value_Value interface {
	isGetAttachedPropertyValuesResponse_Value_Value()
}

type GetAttachedPropertyValuesResponse_Value_IsUndefined struct {
	IsUndefined bool `protobuf:"varint,8,opt,name=is_undefined,json=isUndefined,proto3,oneof"` // if it exists, it's true
}

type GetAttachedPropertyValuesResponse_Value_TextValue struct {
	TextValue string `protobuf:"bytes,9,opt,name=text_value,json=textValue,proto3,oneof"` // FIELD_TYPE_TEXT
}

type GetAttachedPropertyValuesResponse_Value_NumberValue struct {
	NumberValue float32 `protobuf:"fixed32,10,opt,name=number_value,json=numberValue,proto3,oneof"` // FIELD_TYPE_NUMBER
}

type GetAttachedPropertyValuesResponse_Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,11,opt,name=bool_value,json=boolValue,proto3,oneof"` // FIELD_TYPE_CHECKBOX
}

type GetAttachedPropertyValuesResponse_Value_DateValue struct {
	DateValue string `protobuf:"bytes,12,opt,name=date_value,json=dateValue,proto3,oneof"` // FIELD_TYPE_DATE TODO: is there a proto date type?
}

type GetAttachedPropertyValuesResponse_Value_DateTimeValue struct {
	DateTimeValue string `protobuf:"bytes,13,opt,name=date_time_value,json=dateTimeValue,proto3,oneof"` // FIELD_TYPE_DATE_TIME
}

type GetAttachedPropertyValuesResponse_Value_SelectValue struct {
	SelectValue string `protobuf:"bytes,14,opt,name=select_value,json=selectValue,proto3,oneof"` // FIELD_TYPE_SELECT, id of option
}

func (*GetAttachedPropertyValuesResponse_Value_IsUndefined) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_TextValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_NumberValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_BoolValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_DateValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_DateTimeValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_SelectValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

type GetAttachedPropertyValuesResponse_Value_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) Reset() {
	*x = GetAttachedPropertyValuesResponse_Value_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse_Value_Set) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse_Value_Set) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_properties_svc_v1_values_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse_Value_Set.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse_Value_Set) Descriptor() ([]byte, []int) {
	return file_proto_services_properties_svc_v1_values_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_proto_services_properties_svc_v1_values_proto protoreflect.FileDescriptor

var file_proto_services_properties_svc_v1_values_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb3, 0x03, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0b,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x1b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64,
	0x22, 0x41, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x87, 0x06, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xfe, 0x04, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x64, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x02, 0x52, 0x03, 0x73,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x69,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x29, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x74, 0x32, 0xd7, 0x02,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6,
	0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x42, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xf5, 0x01, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x42, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x21, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2d, 0x73,
	0x76, 0x63, 0xa2, 0x02, 0x03, 0x50, 0x53, 0x50, 0xaa, 0x02, 0x1f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x53, 0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x22, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_services_properties_svc_v1_values_proto_rawDescOnce sync.Once
	file_proto_services_properties_svc_v1_values_proto_rawDescData = file_proto_services_properties_svc_v1_values_proto_rawDesc
)

func file_proto_services_properties_svc_v1_values_proto_rawDescGZIP() []byte {
	file_proto_services_properties_svc_v1_values_proto_rawDescOnce.Do(func() {
		file_proto_services_properties_svc_v1_values_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_services_properties_svc_v1_values_proto_rawDescData)
	})
	return file_proto_services_properties_svc_v1_values_proto_rawDescData
}

var file_proto_services_properties_svc_v1_values_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_services_properties_svc_v1_values_proto_goTypes = []interface{}{
	(*AttachPropertyValueRequest)(nil),                  // 0: proto.services.properties_svc.v1.AttachPropertyValueRequest
	(*AttachPropertyValueResponse)(nil),                 // 1: proto.services.properties_svc.v1.AttachPropertyValueResponse
	(*GetAttachedPropertyValuesRequest)(nil),            // 2: proto.services.properties_svc.v1.GetAttachedPropertyValuesRequest
	(*GetAttachedPropertyValuesResponse)(nil),           // 3: proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse
	(*GetAttachedPropertyValuesResponse_Value)(nil),     // 4: proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.Value
	(*GetAttachedPropertyValuesResponse_Value_Set)(nil), // 5: proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.Value.Set
	(SubjectType)(0), // 6: proto.services.properties_svc.v1.SubjectType
	(FieldType)(0),   // 7: proto.services.properties_svc.v1.FieldType
}
var file_proto_services_properties_svc_v1_values_proto_depIdxs = []int32{
	6, // 0: proto.services.properties_svc.v1.AttachPropertyValueRequest.subject_type:type_name -> proto.services.properties_svc.v1.SubjectType
	4, // 1: proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.values:type_name -> proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.Value
	7, // 2: proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.Value.field_type:type_name -> proto.services.properties_svc.v1.FieldType
	5, // 3: proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.Value.set:type_name -> proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse.Value.Set
	0, // 4: proto.services.properties_svc.v1.PropertyValuesService.AttachPropertyValue:input_type -> proto.services.properties_svc.v1.AttachPropertyValueRequest
	2, // 5: proto.services.properties_svc.v1.PropertyValuesService.GetAttachedPropertyValues:input_type -> proto.services.properties_svc.v1.GetAttachedPropertyValuesRequest
	1, // 6: proto.services.properties_svc.v1.PropertyValuesService.AttachPropertyValue:output_type -> proto.services.properties_svc.v1.AttachPropertyValueResponse
	3, // 7: proto.services.properties_svc.v1.PropertyValuesService.GetAttachedPropertyValues:output_type -> proto.services.properties_svc.v1.GetAttachedPropertyValuesResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_services_properties_svc_v1_values_proto_init() }
func file_proto_services_properties_svc_v1_values_proto_init() {
	if File_proto_services_properties_svc_v1_values_proto != nil {
		return
	}
	file_proto_services_properties_svc_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_services_properties_svc_v1_values_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachPropertyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_properties_svc_v1_values_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachPropertyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_properties_svc_v1_values_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_properties_svc_v1_values_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_properties_svc_v1_values_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_properties_svc_v1_values_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse_Value_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_services_properties_svc_v1_values_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AttachPropertyValueRequest_IsUndefined)(nil),
		(*AttachPropertyValueRequest_TextValue)(nil),
		(*AttachPropertyValueRequest_NumberValue)(nil),
		(*AttachPropertyValueRequest_BoolValue)(nil),
		(*AttachPropertyValueRequest_DateValue)(nil),
		(*AttachPropertyValueRequest_DateTimeValue)(nil),
		(*AttachPropertyValueRequest_SelectValue)(nil),
	}
	file_proto_services_properties_svc_v1_values_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetAttachedPropertyValuesResponse_Value_IsUndefined)(nil),
		(*GetAttachedPropertyValuesResponse_Value_TextValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_NumberValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_BoolValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_DateValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_DateTimeValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_SelectValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_services_properties_svc_v1_values_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_services_properties_svc_v1_values_proto_goTypes,
		DependencyIndexes: file_proto_services_properties_svc_v1_values_proto_depIdxs,
		MessageInfos:      file_proto_services_properties_svc_v1_values_proto_msgTypes,
	}.Build()
	File_proto_services_properties_svc_v1_values_proto = out.File
	file_proto_services_properties_svc_v1_values_proto_rawDesc = nil
	file_proto_services_properties_svc_v1_values_proto_goTypes = nil
	file_proto_services_properties_svc_v1_values_proto_depIdxs = nil
}
