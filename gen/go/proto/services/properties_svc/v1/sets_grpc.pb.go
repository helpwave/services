// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: proto/services/properties_svc/v1/sets.proto

package properties_svc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PropertySetsService_CreatePropertySet_FullMethodName = "/proto.services.properties_svc.v1.PropertySetsService/CreatePropertySet"
	PropertySetsService_UpdatePropertySet_FullMethodName = "/proto.services.properties_svc.v1.PropertySetsService/UpdatePropertySet"
	PropertySetsService_DeletePropertySet_FullMethodName = "/proto.services.properties_svc.v1.PropertySetsService/DeletePropertySet"
)

// PropertySetsServiceClient is the client API for PropertySetsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PropertySetsServiceClient interface {
	CreatePropertySet(ctx context.Context, in *CreatePropertySetRequest, opts ...grpc.CallOption) (*CreatePropertySetResponse, error)
	UpdatePropertySet(ctx context.Context, in *UpdatePropertySetRequest, opts ...grpc.CallOption) (*UpdatePropertySetResponse, error)
	DeletePropertySet(ctx context.Context, in *DeletePropertySetRequest, opts ...grpc.CallOption) (*DeletePropertySetResponse, error)
}

type propertySetsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPropertySetsServiceClient(cc grpc.ClientConnInterface) PropertySetsServiceClient {
	return &propertySetsServiceClient{cc}
}

func (c *propertySetsServiceClient) CreatePropertySet(ctx context.Context, in *CreatePropertySetRequest, opts ...grpc.CallOption) (*CreatePropertySetResponse, error) {
	out := new(CreatePropertySetResponse)
	err := c.cc.Invoke(ctx, PropertySetsService_CreatePropertySet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *propertySetsServiceClient) UpdatePropertySet(ctx context.Context, in *UpdatePropertySetRequest, opts ...grpc.CallOption) (*UpdatePropertySetResponse, error) {
	out := new(UpdatePropertySetResponse)
	err := c.cc.Invoke(ctx, PropertySetsService_UpdatePropertySet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *propertySetsServiceClient) DeletePropertySet(ctx context.Context, in *DeletePropertySetRequest, opts ...grpc.CallOption) (*DeletePropertySetResponse, error) {
	out := new(DeletePropertySetResponse)
	err := c.cc.Invoke(ctx, PropertySetsService_DeletePropertySet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PropertySetsServiceServer is the server API for PropertySetsService service.
// All implementations must embed UnimplementedPropertySetsServiceServer
// for forward compatibility
type PropertySetsServiceServer interface {
	CreatePropertySet(context.Context, *CreatePropertySetRequest) (*CreatePropertySetResponse, error)
	UpdatePropertySet(context.Context, *UpdatePropertySetRequest) (*UpdatePropertySetResponse, error)
	DeletePropertySet(context.Context, *DeletePropertySetRequest) (*DeletePropertySetResponse, error)
	mustEmbedUnimplementedPropertySetsServiceServer()
}

// UnimplementedPropertySetsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPropertySetsServiceServer struct {
}

func (UnimplementedPropertySetsServiceServer) CreatePropertySet(context.Context, *CreatePropertySetRequest) (*CreatePropertySetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePropertySet not implemented")
}
func (UnimplementedPropertySetsServiceServer) UpdatePropertySet(context.Context, *UpdatePropertySetRequest) (*UpdatePropertySetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePropertySet not implemented")
}
func (UnimplementedPropertySetsServiceServer) DeletePropertySet(context.Context, *DeletePropertySetRequest) (*DeletePropertySetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePropertySet not implemented")
}
func (UnimplementedPropertySetsServiceServer) mustEmbedUnimplementedPropertySetsServiceServer() {}

// UnsafePropertySetsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PropertySetsServiceServer will
// result in compilation errors.
type UnsafePropertySetsServiceServer interface {
	mustEmbedUnimplementedPropertySetsServiceServer()
}

func RegisterPropertySetsServiceServer(s grpc.ServiceRegistrar, srv PropertySetsServiceServer) {
	s.RegisterService(&PropertySetsService_ServiceDesc, srv)
}

func _PropertySetsService_CreatePropertySet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePropertySetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropertySetsServiceServer).CreatePropertySet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PropertySetsService_CreatePropertySet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropertySetsServiceServer).CreatePropertySet(ctx, req.(*CreatePropertySetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PropertySetsService_UpdatePropertySet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePropertySetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropertySetsServiceServer).UpdatePropertySet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PropertySetsService_UpdatePropertySet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropertySetsServiceServer).UpdatePropertySet(ctx, req.(*UpdatePropertySetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PropertySetsService_DeletePropertySet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePropertySetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropertySetsServiceServer).DeletePropertySet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PropertySetsService_DeletePropertySet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropertySetsServiceServer).DeletePropertySet(ctx, req.(*DeletePropertySetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PropertySetsService_ServiceDesc is the grpc.ServiceDesc for PropertySetsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PropertySetsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.services.properties_svc.v1.PropertySetsService",
	HandlerType: (*PropertySetsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePropertySet",
			Handler:    _PropertySetsService_CreatePropertySet_Handler,
		},
		{
			MethodName: "UpdatePropertySet",
			Handler:    _PropertySetsService_UpdatePropertySet_Handler,
		},
		{
			MethodName: "DeletePropertySet",
			Handler:    _PropertySetsService_DeletePropertySet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/services/properties_svc/v1/sets.proto",
}
