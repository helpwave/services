// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: proto/services/properties_svc/v1/values.proto

package properties_svc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PropertyValuesService_AttachPropertyValue_FullMethodName       = "/proto.services.properties_svc.v1.PropertyValuesService/AttachPropertyValue"
	PropertyValuesService_GetAttachedPropertyValues_FullMethodName = "/proto.services.properties_svc.v1.PropertyValuesService/GetAttachedPropertyValues"
)

// PropertyValuesServiceClient is the client API for PropertyValuesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PropertyValuesServiceClient interface {
	AttachPropertyValue(ctx context.Context, in *AttachPropertyValueRequest, opts ...grpc.CallOption) (*AttachPropertyValueResponse, error)
	GetAttachedPropertyValues(ctx context.Context, in *GetAttachedPropertyValuesRequest, opts ...grpc.CallOption) (*GetAttachedPropertyValuesResponse, error)
}

type propertyValuesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPropertyValuesServiceClient(cc grpc.ClientConnInterface) PropertyValuesServiceClient {
	return &propertyValuesServiceClient{cc}
}

func (c *propertyValuesServiceClient) AttachPropertyValue(ctx context.Context, in *AttachPropertyValueRequest, opts ...grpc.CallOption) (*AttachPropertyValueResponse, error) {
	out := new(AttachPropertyValueResponse)
	err := c.cc.Invoke(ctx, PropertyValuesService_AttachPropertyValue_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *propertyValuesServiceClient) GetAttachedPropertyValues(ctx context.Context, in *GetAttachedPropertyValuesRequest, opts ...grpc.CallOption) (*GetAttachedPropertyValuesResponse, error) {
	out := new(GetAttachedPropertyValuesResponse)
	err := c.cc.Invoke(ctx, PropertyValuesService_GetAttachedPropertyValues_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PropertyValuesServiceServer is the server API for PropertyValuesService service.
// All implementations must embed UnimplementedPropertyValuesServiceServer
// for forward compatibility
type PropertyValuesServiceServer interface {
	AttachPropertyValue(context.Context, *AttachPropertyValueRequest) (*AttachPropertyValueResponse, error)
	GetAttachedPropertyValues(context.Context, *GetAttachedPropertyValuesRequest) (*GetAttachedPropertyValuesResponse, error)
	mustEmbedUnimplementedPropertyValuesServiceServer()
}

// UnimplementedPropertyValuesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPropertyValuesServiceServer struct {
}

func (UnimplementedPropertyValuesServiceServer) AttachPropertyValue(context.Context, *AttachPropertyValueRequest) (*AttachPropertyValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachPropertyValue not implemented")
}
func (UnimplementedPropertyValuesServiceServer) GetAttachedPropertyValues(context.Context, *GetAttachedPropertyValuesRequest) (*GetAttachedPropertyValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttachedPropertyValues not implemented")
}
func (UnimplementedPropertyValuesServiceServer) mustEmbedUnimplementedPropertyValuesServiceServer() {}

// UnsafePropertyValuesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PropertyValuesServiceServer will
// result in compilation errors.
type UnsafePropertyValuesServiceServer interface {
	mustEmbedUnimplementedPropertyValuesServiceServer()
}

func RegisterPropertyValuesServiceServer(s grpc.ServiceRegistrar, srv PropertyValuesServiceServer) {
	s.RegisterService(&PropertyValuesService_ServiceDesc, srv)
}

func _PropertyValuesService_AttachPropertyValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachPropertyValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropertyValuesServiceServer).AttachPropertyValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PropertyValuesService_AttachPropertyValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropertyValuesServiceServer).AttachPropertyValue(ctx, req.(*AttachPropertyValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PropertyValuesService_GetAttachedPropertyValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttachedPropertyValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropertyValuesServiceServer).GetAttachedPropertyValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PropertyValuesService_GetAttachedPropertyValues_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropertyValuesServiceServer).GetAttachedPropertyValues(ctx, req.(*GetAttachedPropertyValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PropertyValuesService_ServiceDesc is the grpc.ServiceDesc for PropertyValuesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PropertyValuesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.services.properties_svc.v1.PropertyValuesService",
	HandlerType: (*PropertyValuesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AttachPropertyValue",
			Handler:    _PropertyValuesService_AttachPropertyValue_Handler,
		},
		{
			MethodName: "GetAttachedPropertyValues",
			Handler:    _PropertyValuesService_GetAttachedPropertyValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/services/properties_svc/v1/values.proto",
}
