// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: proto/services/property_svc/v1/property_svc.proto

package property_svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateProperty
type CreatePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context     ViewContext `protobuf:"varint,1,opt,name=context,proto3,enum=proto.services.property_svc.v1.ViewContext" json:"context,omitempty"`                                                // TODO: Do we still have the necessity to set ViewContext if Propertys are always "organization-wide/global"?
	SubjectType SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.property_svc.v1.SubjectType" json:"subject_type,omitempty" validate:"required"` // @gotags: validate:"required"
	FieldType   FieldType   `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.services.property_svc.v1.FieldType" json:"field_type,omitempty" validate:"required"`         // @gotags: validate:"required"
	Name        string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" validate:"required"`                                                                                   // @gotags: validate:"required"
	Description *string     `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// ID of set this Property should belong to
	SetId                          *string `protobuf:"bytes,6,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty"`
	AlwaysIncludeForCurrentContext *bool   `protobuf:"varint,7,opt,name=always_include_for_current_context,json=alwaysIncludeForCurrentContext,proto3,oneof" json:"always_include_for_current_context,omitempty"`
	// Types that are assignable to FieldTypeData:
	//
	//	*CreatePropertyRequest_None
	//	*CreatePropertyRequest_SelectData_
	FieldTypeData isCreatePropertyRequest_FieldTypeData `protobuf_oneof:"field_type_data"`
}

func (x *CreatePropertyRequest) Reset() {
	*x = CreatePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyRequest) ProtoMessage() {}

func (x *CreatePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyRequest.ProtoReflect.Descriptor instead.
func (*CreatePropertyRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePropertyRequest) GetContext() ViewContext {
	if x != nil {
		return x.Context
	}
	return ViewContext_VIEW_CONTEXT_UNSPECIFIED
}

func (x *CreatePropertyRequest) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *CreatePropertyRequest) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *CreatePropertyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePropertyRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreatePropertyRequest) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

func (x *CreatePropertyRequest) GetAlwaysIncludeForCurrentContext() bool {
	if x != nil && x.AlwaysIncludeForCurrentContext != nil {
		return *x.AlwaysIncludeForCurrentContext
	}
	return false
}

func (m *CreatePropertyRequest) GetFieldTypeData() isCreatePropertyRequest_FieldTypeData {
	if m != nil {
		return m.FieldTypeData
	}
	return nil
}

func (x *CreatePropertyRequest) GetNone() bool {
	if x, ok := x.GetFieldTypeData().(*CreatePropertyRequest_None); ok {
		return x.None
	}
	return false
}

func (x *CreatePropertyRequest) GetSelectData() *CreatePropertyRequest_SelectData {
	if x, ok := x.GetFieldTypeData().(*CreatePropertyRequest_SelectData_); ok {
		return x.SelectData
	}
	return nil
}

type isCreatePropertyRequest_FieldTypeData interface {
	isCreatePropertyRequest_FieldTypeData()
}

type CreatePropertyRequest_None struct {
	None bool `protobuf:"varint,8,opt,name=none,proto3,oneof"`
}

type CreatePropertyRequest_SelectData_ struct {
	SelectData *CreatePropertyRequest_SelectData `protobuf:"bytes,9,opt,name=select_data,json=selectData,proto3,oneof"`
}

func (*CreatePropertyRequest_None) isCreatePropertyRequest_FieldTypeData() {}

func (*CreatePropertyRequest_SelectData_) isCreatePropertyRequest_FieldTypeData() {}

type CreatePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *CreatePropertyResponse) Reset() {
	*x = CreatePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyResponse) ProtoMessage() {}

func (x *CreatePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyResponse.ProtoReflect.Descriptor instead.
func (*CreatePropertyResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePropertyResponse) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type GetPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetPropertyRequest) Reset() {
	*x = GetPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyRequest) ProtoMessage() {}

func (x *GetPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyRequest.ProtoReflect.Descriptor instead.
func (*GetPropertyRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{2}
}

func (x *GetPropertyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectType SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.property_svc.v1.SubjectType" json:"subject_type,omitempty"`
	FieldType   FieldType   `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.services.property_svc.v1.FieldType" json:"field_type,omitempty"`
	Name        string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description *string     `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsArchived  bool        `protobuf:"varint,6,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	// ID of set this Property should belong to
	SetId *string `protobuf:"bytes,8,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty"`
	// Types that are assignable to FieldTypeData:
	//
	//	*GetPropertyResponse_None
	//	*GetPropertyResponse_SelectData_
	FieldTypeData                  isGetPropertyResponse_FieldTypeData `protobuf_oneof:"field_type_data"`
	AlwaysIncludeForCurrentContext *bool                               `protobuf:"varint,11,opt,name=always_include_for_current_context,json=alwaysIncludeForCurrentContext,proto3,oneof" json:"always_include_for_current_context,omitempty"` // This value is dependend on the ViewSource
}

func (x *GetPropertyResponse) Reset() {
	*x = GetPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyResponse) ProtoMessage() {}

func (x *GetPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyResponse.ProtoReflect.Descriptor instead.
func (*GetPropertyResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{3}
}

func (x *GetPropertyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPropertyResponse) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *GetPropertyResponse) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *GetPropertyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPropertyResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetPropertyResponse) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetPropertyResponse) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

func (m *GetPropertyResponse) GetFieldTypeData() isGetPropertyResponse_FieldTypeData {
	if m != nil {
		return m.FieldTypeData
	}
	return nil
}

func (x *GetPropertyResponse) GetNone() bool {
	if x, ok := x.GetFieldTypeData().(*GetPropertyResponse_None); ok {
		return x.None
	}
	return false
}

func (x *GetPropertyResponse) GetSelectData() *GetPropertyResponse_SelectData {
	if x, ok := x.GetFieldTypeData().(*GetPropertyResponse_SelectData_); ok {
		return x.SelectData
	}
	return nil
}

func (x *GetPropertyResponse) GetAlwaysIncludeForCurrentContext() bool {
	if x != nil && x.AlwaysIncludeForCurrentContext != nil {
		return *x.AlwaysIncludeForCurrentContext
	}
	return false
}

type isGetPropertyResponse_FieldTypeData interface {
	isGetPropertyResponse_FieldTypeData()
}

type GetPropertyResponse_None struct {
	None bool `protobuf:"varint,9,opt,name=none,proto3,oneof"`
}

type GetPropertyResponse_SelectData_ struct {
	SelectData *GetPropertyResponse_SelectData `protobuf:"bytes,10,opt,name=select_data,json=selectData,proto3,oneof"`
}

func (*GetPropertyResponse_None) isGetPropertyResponse_FieldTypeData() {}

func (*GetPropertyResponse_SelectData_) isGetPropertyResponse_FieldTypeData() {}

type CreatePropertyRequest_SelectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowFreetext *bool                                            `protobuf:"varint,1,opt,name=allow_freetext,json=allowFreetext,proto3,oneof" json:"allow_freetext,omitempty"`
	Options       []*CreatePropertyRequest_SelectData_SelectOption `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *CreatePropertyRequest_SelectData) Reset() {
	*x = CreatePropertyRequest_SelectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyRequest_SelectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyRequest_SelectData) ProtoMessage() {}

func (x *CreatePropertyRequest_SelectData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyRequest_SelectData.ProtoReflect.Descriptor instead.
func (*CreatePropertyRequest_SelectData) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreatePropertyRequest_SelectData) GetAllowFreetext() bool {
	if x != nil && x.AllowFreetext != nil {
		return *x.AllowFreetext
	}
	return false
}

func (x *CreatePropertyRequest_SelectData) GetOptions() []*CreatePropertyRequest_SelectData_SelectOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreatePropertyRequest_SelectData_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required"` // @gotags: validate:"required"
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *CreatePropertyRequest_SelectData_SelectOption) Reset() {
	*x = CreatePropertyRequest_SelectData_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyRequest_SelectData_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyRequest_SelectData_SelectOption) ProtoMessage() {}

func (x *CreatePropertyRequest_SelectData_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyRequest_SelectData_SelectOption.ProtoReflect.Descriptor instead.
func (*CreatePropertyRequest_SelectData_SelectOption) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *CreatePropertyRequest_SelectData_SelectOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePropertyRequest_SelectData_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// The ViewSource describes from which View (global, ward, ...) the property is accesed from
// The attribute "always_include_for_current_context" depends on this ViewSource
type GetPropertyRequest_ViewSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*GetPropertyRequest_ViewSource_Global
	//	*GetPropertyRequest_ViewSource_WardId
	Value isGetPropertyRequest_ViewSource_Value `protobuf_oneof:"value"`
}

func (x *GetPropertyRequest_ViewSource) Reset() {
	*x = GetPropertyRequest_ViewSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyRequest_ViewSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyRequest_ViewSource) ProtoMessage() {}

func (x *GetPropertyRequest_ViewSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyRequest_ViewSource.ProtoReflect.Descriptor instead.
func (*GetPropertyRequest_ViewSource) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{2, 0}
}

func (m *GetPropertyRequest_ViewSource) GetValue() isGetPropertyRequest_ViewSource_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *GetPropertyRequest_ViewSource) GetGlobal() bool {
	if x, ok := x.GetValue().(*GetPropertyRequest_ViewSource_Global); ok {
		return x.Global
	}
	return false
}

func (x *GetPropertyRequest_ViewSource) GetWardId() string {
	if x, ok := x.GetValue().(*GetPropertyRequest_ViewSource_WardId); ok {
		return x.WardId
	}
	return ""
}

type isGetPropertyRequest_ViewSource_Value interface {
	isGetPropertyRequest_ViewSource_Value()
}

type GetPropertyRequest_ViewSource_Global struct {
	Global bool `protobuf:"varint,1,opt,name=global,proto3,oneof"`
}

type GetPropertyRequest_ViewSource_WardId struct {
	WardId string `protobuf:"bytes,2,opt,name=ward_id,json=wardId,proto3,oneof" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (*GetPropertyRequest_ViewSource_Global) isGetPropertyRequest_ViewSource_Value() {}

func (*GetPropertyRequest_ViewSource_WardId) isGetPropertyRequest_ViewSource_Value() {}

type GetPropertyResponse_SelectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowFreetext *bool                                          `protobuf:"varint,1,opt,name=allow_freetext,json=allowFreetext,proto3,oneof" json:"allow_freetext,omitempty"`
	Options       []*GetPropertyResponse_SelectData_SelectOption `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *GetPropertyResponse_SelectData) Reset() {
	*x = GetPropertyResponse_SelectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyResponse_SelectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyResponse_SelectData) ProtoMessage() {}

func (x *GetPropertyResponse_SelectData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyResponse_SelectData.ProtoReflect.Descriptor instead.
func (*GetPropertyResponse_SelectData) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetPropertyResponse_SelectData) GetAllowFreetext() bool {
	if x != nil && x.AllowFreetext != nil {
		return *x.AllowFreetext
	}
	return false
}

func (x *GetPropertyResponse_SelectData) GetOptions() []*GetPropertyResponse_SelectData_SelectOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetPropertyResponse_SelectData_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *GetPropertyResponse_SelectData_SelectOption) Reset() {
	*x = GetPropertyResponse_SelectData_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyResponse_SelectData_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyResponse_SelectData_SelectOption) ProtoMessage() {}

func (x *GetPropertyResponse_SelectData_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_property_svc_v1_property_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyResponse_SelectData_SelectOption.ProtoReflect.Descriptor instead.
func (*GetPropertyResponse_SelectData_SelectOption) Descriptor() ([]byte, []int) {
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *GetPropertyResponse_SelectData_SelectOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPropertyResponse_SelectData_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

var File_proto_services_property_svc_v1_property_svc_proto protoreflect.FileDescriptor

var file_proto_services_property_svc_v1_property_svc_proto_rawDesc = []byte{
	0x0a, 0x31, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x82, 0x07, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x48, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x4f, 0x0a, 0x22, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52,
	0x1e, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x6f,
	0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x63, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x8f, 0x02,
	0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x0e,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x65,
	0x65, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x59, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x42,
	0x11, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x25, 0x0a,
	0x23, 0x5f, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x39, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x4a, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x19, 0x0a,
	0x07, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xe6, 0x06, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e,
	0x65, 0x12, 0x61, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x22, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x03, 0x52, 0x1e, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x46, 0x6f, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x8d, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x65, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x59, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x74, 0x65, 0x78, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x25, 0x0a, 0x23, 0x5f, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x32, 0x8f, 0x02, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81,
	0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x78, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xee, 0x01, 0x0a,
	0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x42, 0x10, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2d, 0x73, 0x76, 0x63, 0xa2, 0x02, 0x03, 0x50, 0x53, 0x50, 0xaa, 0x02,
	0x1d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x1d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x29, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_services_property_svc_v1_property_svc_proto_rawDescOnce sync.Once
	file_proto_services_property_svc_v1_property_svc_proto_rawDescData = file_proto_services_property_svc_v1_property_svc_proto_rawDesc
)

func file_proto_services_property_svc_v1_property_svc_proto_rawDescGZIP() []byte {
	file_proto_services_property_svc_v1_property_svc_proto_rawDescOnce.Do(func() {
		file_proto_services_property_svc_v1_property_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_services_property_svc_v1_property_svc_proto_rawDescData)
	})
	return file_proto_services_property_svc_v1_property_svc_proto_rawDescData
}

var file_proto_services_property_svc_v1_property_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_services_property_svc_v1_property_svc_proto_goTypes = []interface{}{
	(*CreatePropertyRequest)(nil),                         // 0: proto.services.property_svc.v1.CreatePropertyRequest
	(*CreatePropertyResponse)(nil),                        // 1: proto.services.property_svc.v1.CreatePropertyResponse
	(*GetPropertyRequest)(nil),                            // 2: proto.services.property_svc.v1.GetPropertyRequest
	(*GetPropertyResponse)(nil),                           // 3: proto.services.property_svc.v1.GetPropertyResponse
	(*CreatePropertyRequest_SelectData)(nil),              // 4: proto.services.property_svc.v1.CreatePropertyRequest.SelectData
	(*CreatePropertyRequest_SelectData_SelectOption)(nil), // 5: proto.services.property_svc.v1.CreatePropertyRequest.SelectData.SelectOption
	(*GetPropertyRequest_ViewSource)(nil),                 // 6: proto.services.property_svc.v1.GetPropertyRequest.ViewSource
	(*GetPropertyResponse_SelectData)(nil),                // 7: proto.services.property_svc.v1.GetPropertyResponse.SelectData
	(*GetPropertyResponse_SelectData_SelectOption)(nil),   // 8: proto.services.property_svc.v1.GetPropertyResponse.SelectData.SelectOption
	(ViewContext)(0),                                      // 9: proto.services.property_svc.v1.ViewContext
	(SubjectType)(0),                                      // 10: proto.services.property_svc.v1.SubjectType
	(FieldType)(0),                                        // 11: proto.services.property_svc.v1.FieldType
}
var file_proto_services_property_svc_v1_property_svc_proto_depIdxs = []int32{
	9,  // 0: proto.services.property_svc.v1.CreatePropertyRequest.context:type_name -> proto.services.property_svc.v1.ViewContext
	10, // 1: proto.services.property_svc.v1.CreatePropertyRequest.subject_type:type_name -> proto.services.property_svc.v1.SubjectType
	11, // 2: proto.services.property_svc.v1.CreatePropertyRequest.field_type:type_name -> proto.services.property_svc.v1.FieldType
	4,  // 3: proto.services.property_svc.v1.CreatePropertyRequest.select_data:type_name -> proto.services.property_svc.v1.CreatePropertyRequest.SelectData
	10, // 4: proto.services.property_svc.v1.GetPropertyResponse.subject_type:type_name -> proto.services.property_svc.v1.SubjectType
	11, // 5: proto.services.property_svc.v1.GetPropertyResponse.field_type:type_name -> proto.services.property_svc.v1.FieldType
	7,  // 6: proto.services.property_svc.v1.GetPropertyResponse.select_data:type_name -> proto.services.property_svc.v1.GetPropertyResponse.SelectData
	5,  // 7: proto.services.property_svc.v1.CreatePropertyRequest.SelectData.options:type_name -> proto.services.property_svc.v1.CreatePropertyRequest.SelectData.SelectOption
	8,  // 8: proto.services.property_svc.v1.GetPropertyResponse.SelectData.options:type_name -> proto.services.property_svc.v1.GetPropertyResponse.SelectData.SelectOption
	0,  // 9: proto.services.property_svc.v1.PropertyService.CreateProperty:input_type -> proto.services.property_svc.v1.CreatePropertyRequest
	2,  // 10: proto.services.property_svc.v1.PropertyService.GetProperty:input_type -> proto.services.property_svc.v1.GetPropertyRequest
	1,  // 11: proto.services.property_svc.v1.PropertyService.CreateProperty:output_type -> proto.services.property_svc.v1.CreatePropertyResponse
	3,  // 12: proto.services.property_svc.v1.PropertyService.GetProperty:output_type -> proto.services.property_svc.v1.GetPropertyResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_services_property_svc_v1_property_svc_proto_init() }
func file_proto_services_property_svc_v1_property_svc_proto_init() {
	if File_proto_services_property_svc_v1_property_svc_proto != nil {
		return
	}
	file_proto_services_property_svc_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyRequest_SelectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyRequest_SelectData_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyRequest_ViewSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyResponse_SelectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_property_svc_v1_property_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyResponse_SelectData_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreatePropertyRequest_None)(nil),
		(*CreatePropertyRequest_SelectData_)(nil),
	}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetPropertyResponse_None)(nil),
		(*GetPropertyResponse_SelectData_)(nil),
	}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*GetPropertyRequest_ViewSource_Global)(nil),
		(*GetPropertyRequest_ViewSource_WardId)(nil),
	}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_services_property_svc_v1_property_svc_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_services_property_svc_v1_property_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_services_property_svc_v1_property_svc_proto_goTypes,
		DependencyIndexes: file_proto_services_property_svc_v1_property_svc_proto_depIdxs,
		MessageInfos:      file_proto_services_property_svc_v1_property_svc_proto_msgTypes,
	}.Build()
	File_proto_services_property_svc_v1_property_svc_proto = out.File
	file_proto_services_property_svc_v1_property_svc_proto_rawDesc = nil
	file_proto_services_property_svc_v1_property_svc_proto_goTypes = nil
	file_proto_services_property_svc_v1_property_svc_proto_depIdxs = nil
}
