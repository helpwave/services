// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: proto/services/tasks_svc/v1/properties_svc.proto

package tasks_svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubjectType int32

const (
	SubjectType_SUBJECT_TYPE_UNSPECIFIED SubjectType = 0
	SubjectType_SUBJECT_TYPE_PATIENT     SubjectType = 1
)

// Enum value maps for SubjectType.
var (
	SubjectType_name = map[int32]string{
		0: "SUBJECT_TYPE_UNSPECIFIED",
		1: "SUBJECT_TYPE_PATIENT",
	}
	SubjectType_value = map[string]int32{
		"SUBJECT_TYPE_UNSPECIFIED": 0,
		"SUBJECT_TYPE_PATIENT":     1,
	}
)

func (x SubjectType) Enum() *SubjectType {
	p := new(SubjectType)
	*p = x
	return p
}

func (x SubjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_enumTypes[0].Descriptor()
}

func (SubjectType) Type() protoreflect.EnumType {
	return &file_proto_services_tasks_svc_v1_properties_svc_proto_enumTypes[0]
}

func (x SubjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubjectType.Descriptor instead.
func (SubjectType) EnumDescriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{0}
}

type FieldType int32

const (
	FieldType_FIELD_TYPE_UNSPECIFIED FieldType = 0
	FieldType_FIELD_TYPE_TEXT        FieldType = 1
	FieldType_FIELD_TYPE_NUMBER      FieldType = 2 // TODO: TBD: are we sure we don't want multiple number types?
	FieldType_FIELD_TYPE_CHECKBOX    FieldType = 3
	FieldType_FIELD_TYPE_DATE        FieldType = 4
	FieldType_FIELD_TYPE_DATE_TIME   FieldType = 5
	FieldType_FIELD_TYPE_SELECT      FieldType = 6
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "FIELD_TYPE_UNSPECIFIED",
		1: "FIELD_TYPE_TEXT",
		2: "FIELD_TYPE_NUMBER",
		3: "FIELD_TYPE_CHECKBOX",
		4: "FIELD_TYPE_DATE",
		5: "FIELD_TYPE_DATE_TIME",
		6: "FIELD_TYPE_SELECT",
	}
	FieldType_value = map[string]int32{
		"FIELD_TYPE_UNSPECIFIED": 0,
		"FIELD_TYPE_TEXT":        1,
		"FIELD_TYPE_NUMBER":      2,
		"FIELD_TYPE_CHECKBOX":    3,
		"FIELD_TYPE_DATE":        4,
		"FIELD_TYPE_DATE_TIME":   5,
		"FIELD_TYPE_SELECT":      6,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_enumTypes[1].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_proto_services_tasks_svc_v1_properties_svc_proto_enumTypes[1]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{1}
}

type CreatePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectType    SubjectType `protobuf:"varint,1,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.tasks_svc.v1.SubjectType" json:"subject_type,omitempty"` // TODO: add validation here (not-unspecified check)
	FieldType      FieldType   `protobuf:"varint,2,opt,name=field_type,json=fieldType,proto3,enum=proto.services.tasks_svc.v1.FieldType" json:"field_type,omitempty"`         // TODO: add validation here (not-unspecified check)
	Name           string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                                // TODO: add validation (at least non-empty checks)
	Description    *string     `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`                                                            // TODO: add validation, if needed
	IsSoftRequired bool        `protobuf:"varint,5,opt,name=is_soft_required,json=isSoftRequired,proto3" json:"is_soft_required,omitempty"`
	// ID of set this Property should belong to
	SetId         *string                               `protobuf:"bytes,6,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty"`
	SelectOptions []*CreatePropertyRequest_SelectOption `protobuf:"bytes,7,rep,name=select_options,json=selectOptions,proto3" json:"select_options,omitempty"`
}

func (x *CreatePropertyRequest) Reset() {
	*x = CreatePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyRequest) ProtoMessage() {}

func (x *CreatePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyRequest.ProtoReflect.Descriptor instead.
func (*CreatePropertyRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePropertyRequest) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *CreatePropertyRequest) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *CreatePropertyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePropertyRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreatePropertyRequest) GetIsSoftRequired() bool {
	if x != nil {
		return x.IsSoftRequired
	}
	return false
}

func (x *CreatePropertyRequest) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

func (x *CreatePropertyRequest) GetSelectOptions() []*CreatePropertyRequest_SelectOption {
	if x != nil {
		return x.SelectOptions
	}
	return nil
}

type CreatePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePropertyResponse) Reset() {
	*x = CreatePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyResponse) ProtoMessage() {}

func (x *CreatePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyResponse.ProtoReflect.Descriptor instead.
func (*CreatePropertyResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{1}
}

type GetPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetPropertyRequest) Reset() {
	*x = GetPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyRequest) ProtoMessage() {}

func (x *GetPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyRequest.ProtoReflect.Descriptor instead.
func (*GetPropertyRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{2}
}

func (x *GetPropertyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectType    SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.tasks_svc.v1.SubjectType" json:"subject_type,omitempty"`
	FieldType      FieldType   `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.services.tasks_svc.v1.FieldType" json:"field_type,omitempty"`
	Name           string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description    *string     `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsArchived     bool        `protobuf:"varint,6,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	IsSoftRequired bool        `protobuf:"varint,7,opt,name=is_soft_required,json=isSoftRequired,proto3" json:"is_soft_required,omitempty"`
	// ID of set this Property should belong to
	SetId         *string                             `protobuf:"bytes,8,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty"`
	SelectOptions []*GetPropertyResponse_SelectOption `protobuf:"bytes,9,rep,name=select_options,json=selectOptions,proto3" json:"select_options,omitempty"`
}

func (x *GetPropertyResponse) Reset() {
	*x = GetPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyResponse) ProtoMessage() {}

func (x *GetPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyResponse.ProtoReflect.Descriptor instead.
func (*GetPropertyResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{3}
}

func (x *GetPropertyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPropertyResponse) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *GetPropertyResponse) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *GetPropertyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPropertyResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetPropertyResponse) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetPropertyResponse) GetIsSoftRequired() bool {
	if x != nil {
		return x.IsSoftRequired
	}
	return false
}

func (x *GetPropertyResponse) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

func (x *GetPropertyResponse) GetSelectOptions() []*GetPropertyResponse_SelectOption {
	if x != nil {
		return x.SelectOptions
	}
	return nil
}

type GetPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId *string `protobuf:"bytes,1,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetPropertiesRequest) Reset() {
	*x = GetPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertiesRequest) ProtoMessage() {}

func (x *GetPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertiesRequest.ProtoReflect.Descriptor instead.
func (*GetPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{4}
}

func (x *GetPropertiesRequest) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

type GetPropertiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*GetPropertiesResponse_Property `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *GetPropertiesResponse) Reset() {
	*x = GetPropertiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertiesResponse) ProtoMessage() {}

func (x *GetPropertiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertiesResponse.ProtoReflect.Descriptor instead.
func (*GetPropertiesResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{5}
}

func (x *GetPropertiesResponse) GetProperties() []*GetPropertiesResponse_Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdatePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectType    *SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.tasks_svc.v1.SubjectType,oneof" json:"subject_type,omitempty"`
	FieldType      *FieldType   `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.services.tasks_svc.v1.FieldType,oneof" json:"field_type,omitempty"`
	Name           *string      `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`               // TODO: validation
	Description    *string      `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"` // TODO: validation
	IsArchived     *bool        `protobuf:"varint,6,opt,name=is_archived,json=isArchived,proto3,oneof" json:"is_archived,omitempty"`
	IsSoftRequired *bool        `protobuf:"varint,7,opt,name=is_soft_required,json=isSoftRequired,proto3,oneof" json:"is_soft_required,omitempty"`
	// ID of set this Property should belong to
	SetId                     *string                               `protobuf:"bytes,8,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty"`
	NewOrUpdatedSelectOptions []*UpdatePropertyRequest_SelectOption `protobuf:"bytes,9,rep,name=new_or_updated_select_options,json=newOrUpdatedSelectOptions,proto3" json:"new_or_updated_select_options,omitempty"`
	RemoveSelectOptions       []string                              `protobuf:"bytes,10,rep,name=remove_select_options,json=removeSelectOptions,proto3" json:"remove_select_options,omitempty" validate:"dive,uuid4"` // @gotags: validate:"dive,uuid4"
}

func (x *UpdatePropertyRequest) Reset() {
	*x = UpdatePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePropertyRequest) ProtoMessage() {}

func (x *UpdatePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePropertyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePropertyRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePropertyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePropertyRequest) GetSubjectType() SubjectType {
	if x != nil && x.SubjectType != nil {
		return *x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *UpdatePropertyRequest) GetFieldType() FieldType {
	if x != nil && x.FieldType != nil {
		return *x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *UpdatePropertyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdatePropertyRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdatePropertyRequest) GetIsArchived() bool {
	if x != nil && x.IsArchived != nil {
		return *x.IsArchived
	}
	return false
}

func (x *UpdatePropertyRequest) GetIsSoftRequired() bool {
	if x != nil && x.IsSoftRequired != nil {
		return *x.IsSoftRequired
	}
	return false
}

func (x *UpdatePropertyRequest) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

func (x *UpdatePropertyRequest) GetNewOrUpdatedSelectOptions() []*UpdatePropertyRequest_SelectOption {
	if x != nil {
		return x.NewOrUpdatedSelectOptions
	}
	return nil
}

func (x *UpdatePropertyRequest) GetRemoveSelectOptions() []string {
	if x != nil {
		return x.RemoveSelectOptions
	}
	return nil
}

type UpdatePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePropertyResponse) Reset() {
	*x = UpdatePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePropertyResponse) ProtoMessage() {}

func (x *UpdatePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePropertyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePropertyResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{7}
}

type AttachPropertyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId   string      `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty" validate:"uuid4"`                                    // @gotags: validate:"uuid4"
	SubjectType SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.tasks_svc.v1.SubjectType" json:"subject_type,omitempty"` // TODO: validation (not 0)
	PropertyId  string      `protobuf:"bytes,3,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty" validate:"uuid4"`                                 // @gotags: validate:"uuid4"
	// Types that are assignable to Value:
	//
	//	*AttachPropertyValueRequest_TextValue
	//	*AttachPropertyValueRequest_NumberValue
	//	*AttachPropertyValueRequest_BoolValue
	//	*AttachPropertyValueRequest_DateValue
	//	*AttachPropertyValueRequest_DateTimeValue
	//	*AttachPropertyValueRequest_SelectValue
	Value isAttachPropertyValueRequest_Value `protobuf_oneof:"value"`
}

func (x *AttachPropertyValueRequest) Reset() {
	*x = AttachPropertyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachPropertyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachPropertyValueRequest) ProtoMessage() {}

func (x *AttachPropertyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachPropertyValueRequest.ProtoReflect.Descriptor instead.
func (*AttachPropertyValueRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{8}
}

func (x *AttachPropertyValueRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *AttachPropertyValueRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (m *AttachPropertyValueRequest) GetValue() isAttachPropertyValueRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AttachPropertyValueRequest) GetTextValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetNumberValue() float32 {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *AttachPropertyValueRequest) GetBoolValue() bool {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *AttachPropertyValueRequest) GetDateValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_DateValue); ok {
		return x.DateValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetDateTimeValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_DateTimeValue); ok {
		return x.DateTimeValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetSelectValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_SelectValue); ok {
		return x.SelectValue
	}
	return ""
}

type isAttachPropertyValueRequest_Value interface {
	isAttachPropertyValueRequest_Value()
}

type AttachPropertyValueRequest_TextValue struct {
	TextValue string `protobuf:"bytes,4,opt,name=text_value,json=textValue,proto3,oneof"` // FIELD_TYPE_TEXT
}

type AttachPropertyValueRequest_NumberValue struct {
	NumberValue float32 `protobuf:"fixed32,5,opt,name=number_value,json=numberValue,proto3,oneof"` // FIELD_TYPE_NUMBER
}

type AttachPropertyValueRequest_BoolValue struct {
	BoolValue bool `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3,oneof"` // FIELD_TYPE_CHECKBOX
}

type AttachPropertyValueRequest_DateValue struct {
	DateValue string `protobuf:"bytes,7,opt,name=date_value,json=dateValue,proto3,oneof"` // FIELD_TYPE_DATE TODO: is there a proro date type?
}

type AttachPropertyValueRequest_DateTimeValue struct {
	DateTimeValue string `protobuf:"bytes,8,opt,name=date_time_value,json=dateTimeValue,proto3,oneof"` // FIELD_TYPE_DATE_TIME
}

type AttachPropertyValueRequest_SelectValue struct {
	SelectValue string `protobuf:"bytes,9,opt,name=select_value,json=selectValue,proto3,oneof"` // FIELD_TYPE_SELECT, id of option
}

func (*AttachPropertyValueRequest_TextValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_NumberValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_BoolValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_DateValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_DateTimeValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_SelectValue) isAttachPropertyValueRequest_Value() {}

type AttachPropertyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttachPropertyValueResponse) Reset() {
	*x = AttachPropertyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachPropertyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachPropertyValueResponse) ProtoMessage() {}

func (x *AttachPropertyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachPropertyValueResponse.ProtoReflect.Descriptor instead.
func (*AttachPropertyValueResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{9}
}

type GetAttachedPropertyValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string  `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	View      *string `protobuf:"bytes,2,opt,name=view,proto3,oneof" json:"view,omitempty"`                                       // TODO: TBD: other filters / search params, e.g. include_is_archived
}

func (x *GetAttachedPropertyValuesRequest) Reset() {
	*x = GetAttachedPropertyValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesRequest) ProtoMessage() {}

func (x *GetAttachedPropertyValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesRequest.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{10}
}

func (x *GetAttachedPropertyValuesRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetAttachedPropertyValuesRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type GetAttachedPropertyValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*GetAttachedPropertyValuesResponse_Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GetAttachedPropertyValuesResponse) Reset() {
	*x = GetAttachedPropertyValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{11}
}

func (x *GetAttachedPropertyValuesResponse) GetValues() []*GetAttachedPropertyValuesResponse_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type CreatePropertyRequest_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                     // TODO: add validation (at least non-empty checks)
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"` // TODO: add validation, if needed
}

func (x *CreatePropertyRequest_SelectOption) Reset() {
	*x = CreatePropertyRequest_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyRequest_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyRequest_SelectOption) ProtoMessage() {}

func (x *CreatePropertyRequest_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyRequest_SelectOption.ProtoReflect.Descriptor instead.
func (*CreatePropertyRequest_SelectOption) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreatePropertyRequest_SelectOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePropertyRequest_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type GetPropertyResponse_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *GetPropertyResponse_SelectOption) Reset() {
	*x = GetPropertyResponse_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyResponse_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyResponse_SelectOption) ProtoMessage() {}

func (x *GetPropertyResponse_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyResponse_SelectOption.ProtoReflect.Descriptor instead.
func (*GetPropertyResponse_SelectOption) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetPropertyResponse_SelectOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPropertyResponse_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type GetPropertiesResponse_Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectType    SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=proto.services.tasks_svc.v1.SubjectType" json:"subject_type,omitempty"`
	FieldType      FieldType   `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.services.tasks_svc.v1.FieldType" json:"field_type,omitempty"`
	Name           string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description    *string     `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsArchived     bool        `protobuf:"varint,6,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	IsSoftRequired bool        `protobuf:"varint,7,opt,name=is_soft_required,json=isSoftRequired,proto3" json:"is_soft_required,omitempty"`
	// ID of set this Property should belong to
	SetId         *string                                        `protobuf:"bytes,8,opt,name=set_id,json=setId,proto3,oneof" json:"set_id,omitempty"`
	SelectOptions []*GetPropertiesResponse_Property_SelectOption `protobuf:"bytes,9,rep,name=select_options,json=selectOptions,proto3" json:"select_options,omitempty"`
}

func (x *GetPropertiesResponse_Property) Reset() {
	*x = GetPropertiesResponse_Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertiesResponse_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertiesResponse_Property) ProtoMessage() {}

func (x *GetPropertiesResponse_Property) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertiesResponse_Property.ProtoReflect.Descriptor instead.
func (*GetPropertiesResponse_Property) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetPropertiesResponse_Property) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPropertiesResponse_Property) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_UNSPECIFIED
}

func (x *GetPropertiesResponse_Property) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *GetPropertiesResponse_Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPropertiesResponse_Property) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetPropertiesResponse_Property) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetPropertiesResponse_Property) GetIsSoftRequired() bool {
	if x != nil {
		return x.IsSoftRequired
	}
	return false
}

func (x *GetPropertiesResponse_Property) GetSetId() string {
	if x != nil && x.SetId != nil {
		return *x.SetId
	}
	return ""
}

func (x *GetPropertiesResponse_Property) GetSelectOptions() []*GetPropertiesResponse_Property_SelectOption {
	if x != nil {
		return x.SelectOptions
	}
	return nil
}

type GetPropertiesResponse_Property_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *GetPropertiesResponse_Property_SelectOption) Reset() {
	*x = GetPropertiesResponse_Property_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertiesResponse_Property_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertiesResponse_Property_SelectOption) ProtoMessage() {}

func (x *GetPropertiesResponse_Property_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertiesResponse_Property_SelectOption.ProtoReflect.Descriptor instead.
func (*GetPropertiesResponse_Property_SelectOption) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *GetPropertiesResponse_Property_SelectOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPropertiesResponse_Property_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdatePropertyRequest_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UpdatePropertyRequest_SelectOption) Reset() {
	*x = UpdatePropertyRequest_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePropertyRequest_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePropertyRequest_SelectOption) ProtoMessage() {}

func (x *UpdatePropertyRequest_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePropertyRequest_SelectOption.ProtoReflect.Descriptor instead.
func (*UpdatePropertyRequest_SelectOption) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdatePropertyRequest_SelectOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePropertyRequest_SelectOption) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdatePropertyRequest_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type GetAttachedPropertyValuesResponse_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId     string                                       `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	FieldType      FieldType                                    `protobuf:"varint,2,opt,name=field_type,json=fieldType,proto3,enum=proto.services.tasks_svc.v1.FieldType" json:"field_type,omitempty"`
	Name           string                                       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description    *string                                      `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsArchived     bool                                         `protobuf:"varint,6,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	IsSoftRequired bool                                         `protobuf:"varint,7,opt,name=is_soft_required,json=isSoftRequired,proto3" json:"is_soft_required,omitempty"`
	Set            *GetAttachedPropertyValuesResponse_Value_Set `protobuf:"bytes,8,opt,name=set,proto3,oneof" json:"set,omitempty"`
}

func (x *GetAttachedPropertyValuesResponse_Value) Reset() {
	*x = GetAttachedPropertyValuesResponse_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse_Value) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse_Value) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse_Value.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse_Value) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetAttachedPropertyValuesResponse_Value) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *GetAttachedPropertyValuesResponse_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetAttachedPropertyValuesResponse_Value) GetIsSoftRequired() bool {
	if x != nil {
		return x.IsSoftRequired
	}
	return false
}

func (x *GetAttachedPropertyValuesResponse_Value) GetSet() *GetAttachedPropertyValuesResponse_Value_Set {
	if x != nil {
		return x.Set
	}
	return nil
}

type GetAttachedPropertyValuesResponse_Value_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) Reset() {
	*x = GetAttachedPropertyValuesResponse_Value_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse_Value_Set) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse_Value_Set) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse_Value_Set.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse_Value_Set) Descriptor() ([]byte, []int) {
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value_Set) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

var File_proto_services_tasks_svc_v1_properties_svc_proto protoreflect.FileDescriptor

var file_proto_services_tasks_svc_v1_properties_svc_proto_rawDesc = []byte{
	0x0a, 0x30, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x22,
	0x8a, 0x04, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73,
	0x6f, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x6f, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x66,
	0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x59, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb7, 0x04, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x69, 0x73, 0x53, 0x6f, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x0e, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x59, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0xae, 0x05, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xb7, 0x04, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x73, 0x6f, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x6f, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x6f, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x59, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x90, 0x06, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x50, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x4a, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05,
	0x52, 0x0e, 0x69, 0x73, 0x53, 0x6f, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x81, 0x01, 0x0a, 0x1d, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x6e, 0x65, 0x77, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x77, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73,
	0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x73,
	0x5f, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x89, 0x03, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x1d, 0x0a, 0x1b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x22, 0xd4, 0x04, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xd0, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x6f, 0x66, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x73, 0x53, 0x6f, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x5f, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x01, 0x52, 0x03, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x1a, 0x60, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x74, 0x2a, 0x45, 0x0a, 0x0b, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x55, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x55, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x2a, 0xb2, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x42, 0x4f, 0x58, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x05, 0x12,
	0x15, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x10, 0x06, 0x32, 0xa7, 0x06, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x9c, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0xde, 0x01, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x53, 0x76, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1c, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x2d, 0x73, 0x76, 0x63, 0xa2, 0x02, 0x03, 0x50, 0x53, 0x54, 0xaa, 0x02,
	0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x26, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53,
	0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x1d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x3a, 0x3a, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescOnce sync.Once
	file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescData = file_proto_services_tasks_svc_v1_properties_svc_proto_rawDesc
)

func file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescGZIP() []byte {
	file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescOnce.Do(func() {
		file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescData)
	})
	return file_proto_services_tasks_svc_v1_properties_svc_proto_rawDescData
}

var file_proto_services_tasks_svc_v1_properties_svc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_services_tasks_svc_v1_properties_svc_proto_goTypes = []interface{}{
	(SubjectType)(0),                                    // 0: proto.services.tasks_svc.v1.SubjectType
	(FieldType)(0),                                      // 1: proto.services.tasks_svc.v1.FieldType
	(*CreatePropertyRequest)(nil),                       // 2: proto.services.tasks_svc.v1.CreatePropertyRequest
	(*CreatePropertyResponse)(nil),                      // 3: proto.services.tasks_svc.v1.CreatePropertyResponse
	(*GetPropertyRequest)(nil),                          // 4: proto.services.tasks_svc.v1.GetPropertyRequest
	(*GetPropertyResponse)(nil),                         // 5: proto.services.tasks_svc.v1.GetPropertyResponse
	(*GetPropertiesRequest)(nil),                        // 6: proto.services.tasks_svc.v1.GetPropertiesRequest
	(*GetPropertiesResponse)(nil),                       // 7: proto.services.tasks_svc.v1.GetPropertiesResponse
	(*UpdatePropertyRequest)(nil),                       // 8: proto.services.tasks_svc.v1.UpdatePropertyRequest
	(*UpdatePropertyResponse)(nil),                      // 9: proto.services.tasks_svc.v1.UpdatePropertyResponse
	(*AttachPropertyValueRequest)(nil),                  // 10: proto.services.tasks_svc.v1.AttachPropertyValueRequest
	(*AttachPropertyValueResponse)(nil),                 // 11: proto.services.tasks_svc.v1.AttachPropertyValueResponse
	(*GetAttachedPropertyValuesRequest)(nil),            // 12: proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest
	(*GetAttachedPropertyValuesResponse)(nil),           // 13: proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse
	(*CreatePropertyRequest_SelectOption)(nil),          // 14: proto.services.tasks_svc.v1.CreatePropertyRequest.SelectOption
	(*GetPropertyResponse_SelectOption)(nil),            // 15: proto.services.tasks_svc.v1.GetPropertyResponse.SelectOption
	(*GetPropertiesResponse_Property)(nil),              // 16: proto.services.tasks_svc.v1.GetPropertiesResponse.Property
	(*GetPropertiesResponse_Property_SelectOption)(nil), // 17: proto.services.tasks_svc.v1.GetPropertiesResponse.Property.SelectOption
	(*UpdatePropertyRequest_SelectOption)(nil),          // 18: proto.services.tasks_svc.v1.UpdatePropertyRequest.SelectOption
	(*GetAttachedPropertyValuesResponse_Value)(nil),     // 19: proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.Value
	(*GetAttachedPropertyValuesResponse_Value_Set)(nil), // 20: proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.Value.Set
}
var file_proto_services_tasks_svc_v1_properties_svc_proto_depIdxs = []int32{
	0,  // 0: proto.services.tasks_svc.v1.CreatePropertyRequest.subject_type:type_name -> proto.services.tasks_svc.v1.SubjectType
	1,  // 1: proto.services.tasks_svc.v1.CreatePropertyRequest.field_type:type_name -> proto.services.tasks_svc.v1.FieldType
	14, // 2: proto.services.tasks_svc.v1.CreatePropertyRequest.select_options:type_name -> proto.services.tasks_svc.v1.CreatePropertyRequest.SelectOption
	0,  // 3: proto.services.tasks_svc.v1.GetPropertyResponse.subject_type:type_name -> proto.services.tasks_svc.v1.SubjectType
	1,  // 4: proto.services.tasks_svc.v1.GetPropertyResponse.field_type:type_name -> proto.services.tasks_svc.v1.FieldType
	15, // 5: proto.services.tasks_svc.v1.GetPropertyResponse.select_options:type_name -> proto.services.tasks_svc.v1.GetPropertyResponse.SelectOption
	16, // 6: proto.services.tasks_svc.v1.GetPropertiesResponse.properties:type_name -> proto.services.tasks_svc.v1.GetPropertiesResponse.Property
	0,  // 7: proto.services.tasks_svc.v1.UpdatePropertyRequest.subject_type:type_name -> proto.services.tasks_svc.v1.SubjectType
	1,  // 8: proto.services.tasks_svc.v1.UpdatePropertyRequest.field_type:type_name -> proto.services.tasks_svc.v1.FieldType
	18, // 9: proto.services.tasks_svc.v1.UpdatePropertyRequest.new_or_updated_select_options:type_name -> proto.services.tasks_svc.v1.UpdatePropertyRequest.SelectOption
	0,  // 10: proto.services.tasks_svc.v1.AttachPropertyValueRequest.subject_type:type_name -> proto.services.tasks_svc.v1.SubjectType
	19, // 11: proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.values:type_name -> proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.Value
	0,  // 12: proto.services.tasks_svc.v1.GetPropertiesResponse.Property.subject_type:type_name -> proto.services.tasks_svc.v1.SubjectType
	1,  // 13: proto.services.tasks_svc.v1.GetPropertiesResponse.Property.field_type:type_name -> proto.services.tasks_svc.v1.FieldType
	17, // 14: proto.services.tasks_svc.v1.GetPropertiesResponse.Property.select_options:type_name -> proto.services.tasks_svc.v1.GetPropertiesResponse.Property.SelectOption
	1,  // 15: proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.Value.field_type:type_name -> proto.services.tasks_svc.v1.FieldType
	20, // 16: proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.Value.set:type_name -> proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse.Value.Set
	2,  // 17: proto.services.tasks_svc.v1.PropertiesService.CreateProperty:input_type -> proto.services.tasks_svc.v1.CreatePropertyRequest
	4,  // 18: proto.services.tasks_svc.v1.PropertiesService.GetProperty:input_type -> proto.services.tasks_svc.v1.GetPropertyRequest
	6,  // 19: proto.services.tasks_svc.v1.PropertiesService.GetProperties:input_type -> proto.services.tasks_svc.v1.GetPropertiesRequest
	8,  // 20: proto.services.tasks_svc.v1.PropertiesService.UpdateProperty:input_type -> proto.services.tasks_svc.v1.UpdatePropertyRequest
	10, // 21: proto.services.tasks_svc.v1.PropertiesService.AttachPropertyValue:input_type -> proto.services.tasks_svc.v1.AttachPropertyValueRequest
	12, // 22: proto.services.tasks_svc.v1.PropertiesService.GetAttachedPropertyValues:input_type -> proto.services.tasks_svc.v1.GetAttachedPropertyValuesRequest
	3,  // 23: proto.services.tasks_svc.v1.PropertiesService.CreateProperty:output_type -> proto.services.tasks_svc.v1.CreatePropertyResponse
	5,  // 24: proto.services.tasks_svc.v1.PropertiesService.GetProperty:output_type -> proto.services.tasks_svc.v1.GetPropertyResponse
	7,  // 25: proto.services.tasks_svc.v1.PropertiesService.GetProperties:output_type -> proto.services.tasks_svc.v1.GetPropertiesResponse
	9,  // 26: proto.services.tasks_svc.v1.PropertiesService.UpdateProperty:output_type -> proto.services.tasks_svc.v1.UpdatePropertyResponse
	11, // 27: proto.services.tasks_svc.v1.PropertiesService.AttachPropertyValue:output_type -> proto.services.tasks_svc.v1.AttachPropertyValueResponse
	13, // 28: proto.services.tasks_svc.v1.PropertiesService.GetAttachedPropertyValues:output_type -> proto.services.tasks_svc.v1.GetAttachedPropertyValuesResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_services_tasks_svc_v1_properties_svc_proto_init() }
func file_proto_services_tasks_svc_v1_properties_svc_proto_init() {
	if File_proto_services_tasks_svc_v1_properties_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachPropertyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachPropertyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyRequest_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyResponse_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertiesResponse_Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertiesResponse_Property_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePropertyRequest_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse_Value_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AttachPropertyValueRequest_TextValue)(nil),
		(*AttachPropertyValueRequest_NumberValue)(nil),
		(*AttachPropertyValueRequest_BoolValue)(nil),
		(*AttachPropertyValueRequest_DateValue)(nil),
		(*AttachPropertyValueRequest_DateTimeValue)(nil),
		(*AttachPropertyValueRequest_SelectValue)(nil),
	}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_services_tasks_svc_v1_properties_svc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_services_tasks_svc_v1_properties_svc_proto_goTypes,
		DependencyIndexes: file_proto_services_tasks_svc_v1_properties_svc_proto_depIdxs,
		EnumInfos:         file_proto_services_tasks_svc_v1_properties_svc_proto_enumTypes,
		MessageInfos:      file_proto_services_tasks_svc_v1_properties_svc_proto_msgTypes,
	}.Build()
	File_proto_services_tasks_svc_v1_properties_svc_proto = out.File
	file_proto_services_tasks_svc_v1_properties_svc_proto_rawDesc = nil
	file_proto_services_tasks_svc_v1_properties_svc_proto_goTypes = nil
	file_proto_services_tasks_svc_v1_properties_svc_proto_depIdxs = nil
}
