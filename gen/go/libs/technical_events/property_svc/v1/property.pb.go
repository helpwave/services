// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: libs/technical_events/property_svc/v1/property.proto

package v1

import (
	_ "gen/libs/events/v1"
	v1 "gen/services/property_svc/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PropertyCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectType v1.SubjectType `protobuf:"varint,2,opt,name=subject_type,json=subjectType,proto3,enum=services.property_svc.v1.SubjectType" json:"subject_type,omitempty"`
	FieldType   v1.FieldType   `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=services.property_svc.v1.FieldType" json:"field_type,omitempty"`
	Name        string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PropertyCreatedEvent) Reset() {
	*x = PropertyCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyCreatedEvent) ProtoMessage() {}

func (x *PropertyCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyCreatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyCreatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{0}
}

func (x *PropertyCreatedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PropertyCreatedEvent) GetSubjectType() v1.SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return v1.SubjectType(0)
}

func (x *PropertyCreatedEvent) GetFieldType() v1.FieldType {
	if x != nil {
		return x.FieldType
	}
	return v1.FieldType(0)
}

func (x *PropertyCreatedEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PropertyDescriptionUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PropertyDescriptionUpdatedEvent) Reset() {
	*x = PropertyDescriptionUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyDescriptionUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyDescriptionUpdatedEvent) ProtoMessage() {}

func (x *PropertyDescriptionUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyDescriptionUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyDescriptionUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{1}
}

func (x *PropertyDescriptionUpdatedEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PropertySetIDUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId string `protobuf:"bytes,1,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
}

func (x *PropertySetIDUpdatedEvent) Reset() {
	*x = PropertySetIDUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertySetIDUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertySetIDUpdatedEvent) ProtoMessage() {}

func (x *PropertySetIDUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertySetIDUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertySetIDUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{2}
}

func (x *PropertySetIDUpdatedEvent) GetSetId() string {
	if x != nil {
		return x.SetId
	}
	return ""
}

type PropertySubjectTypeUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectType string `protobuf:"bytes,1,opt,name=subject_type,json=subjectType,proto3" json:"subject_type,omitempty"`
}

func (x *PropertySubjectTypeUpdatedEvent) Reset() {
	*x = PropertySubjectTypeUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertySubjectTypeUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertySubjectTypeUpdatedEvent) ProtoMessage() {}

func (x *PropertySubjectTypeUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertySubjectTypeUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertySubjectTypeUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{3}
}

func (x *PropertySubjectTypeUpdatedEvent) GetSubjectType() string {
	if x != nil {
		return x.SubjectType
	}
	return ""
}

type PropertyFieldTypeUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldType string `protobuf:"bytes,1,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
}

func (x *PropertyFieldTypeUpdatedEvent) Reset() {
	*x = PropertyFieldTypeUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeUpdatedEvent) ProtoMessage() {}

func (x *PropertyFieldTypeUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{4}
}

func (x *PropertyFieldTypeUpdatedEvent) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

type PropertyFieldTypeDataCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldTypeData *PropertyFieldTypeDataCreatedEvent_FieldTypeData `protobuf:"bytes,1,opt,name=field_type_data,json=fieldTypeData,proto3" json:"field_type_data,omitempty"`
}

func (x *PropertyFieldTypeDataCreatedEvent) Reset() {
	*x = PropertyFieldTypeDataCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataCreatedEvent) ProtoMessage() {}

func (x *PropertyFieldTypeDataCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataCreatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataCreatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{5}
}

func (x *PropertyFieldTypeDataCreatedEvent) GetFieldTypeData() *PropertyFieldTypeDataCreatedEvent_FieldTypeData {
	if x != nil {
		return x.FieldTypeData
	}
	return nil
}

type PropertyNameUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PropertyNameUpdatedEvent) Reset() {
	*x = PropertyNameUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyNameUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyNameUpdatedEvent) ProtoMessage() {}

func (x *PropertyNameUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyNameUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyNameUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{6}
}

func (x *PropertyNameUpdatedEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PropertyFieldTypeDataAllowFreetextUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewAllowFreetext bool `protobuf:"varint,1,opt,name=new_allow_freetext,json=newAllowFreetext,proto3" json:"new_allow_freetext,omitempty"`
}

func (x *PropertyFieldTypeDataAllowFreetextUpdatedEvent) Reset() {
	*x = PropertyFieldTypeDataAllowFreetextUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataAllowFreetextUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataAllowFreetextUpdatedEvent) ProtoMessage() {}

func (x *PropertyFieldTypeDataAllowFreetextUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataAllowFreetextUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataAllowFreetextUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{7}
}

func (x *PropertyFieldTypeDataAllowFreetextUpdatedEvent) GetNewAllowFreetext() bool {
	if x != nil {
		return x.NewAllowFreetext
	}
	return false
}

type PropertyFieldTypeDataSelectOptionsRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemovedSelectOptions []string `protobuf:"bytes,1,rep,name=removed_select_options,json=removedSelectOptions,proto3" json:"removed_select_options,omitempty"`
}

func (x *PropertyFieldTypeDataSelectOptionsRemovedEvent) Reset() {
	*x = PropertyFieldTypeDataSelectOptionsRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataSelectOptionsRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataSelectOptionsRemovedEvent) ProtoMessage() {}

func (x *PropertyFieldTypeDataSelectOptionsRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataSelectOptionsRemovedEvent.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataSelectOptionsRemovedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{8}
}

func (x *PropertyFieldTypeDataSelectOptionsRemovedEvent) GetRemovedSelectOptions() []string {
	if x != nil {
		return x.RemovedSelectOptions
	}
	return nil
}

type PropertyFieldTypeDataSelectOptionsUpsertedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpsertedSelectOptions []*PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption `protobuf:"bytes,1,rep,name=upserted_select_options,json=upsertedSelectOptions,proto3" json:"upserted_select_options,omitempty"`
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent) Reset() {
	*x = PropertyFieldTypeDataSelectOptionsUpsertedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataSelectOptionsUpsertedEvent) ProtoMessage() {}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataSelectOptionsUpsertedEvent.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataSelectOptionsUpsertedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{9}
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent) GetUpsertedSelectOptions() []*PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption {
	if x != nil {
		return x.UpsertedSelectOptions
	}
	return nil
}

type PropertyArchivedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PropertyArchivedEvent) Reset() {
	*x = PropertyArchivedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyArchivedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyArchivedEvent) ProtoMessage() {}

func (x *PropertyArchivedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyArchivedEvent.ProtoReflect.Descriptor instead.
func (*PropertyArchivedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{10}
}

type PropertyRetrievedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PropertyRetrievedEvent) Reset() {
	*x = PropertyRetrievedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyRetrievedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyRetrievedEvent) ProtoMessage() {}

func (x *PropertyRetrievedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyRetrievedEvent.ProtoReflect.Descriptor instead.
func (*PropertyRetrievedEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{11}
}

type TechnicalEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*TechnicalEvent_PropertyCreated
	//	*TechnicalEvent_PropertyDescriptionUpdated
	//	*TechnicalEvent_PropertySetIdUpdated
	//	*TechnicalEvent_PropertySubjectTypeUpdated
	//	*TechnicalEvent_PropertyFieldTypeUpdated
	//	*TechnicalEvent_PropertyFieldTypeDataCreated
	//	*TechnicalEvent_PropertyNameUpdated
	//	*TechnicalEvent_PropertyFieldTypeDataAllowFreetextUpdated
	//	*TechnicalEvent_PropertyFieldTypeDataSelectOptionsRemoved
	//	*TechnicalEvent_PropertyFieldTypeDataSelectOptionsUpserted
	//	*TechnicalEvent_PropertyArchived
	//	*TechnicalEvent_PropertyRetrieved
	Event isTechnicalEvent_Event `protobuf_oneof:"event"`
}

func (x *TechnicalEvent) Reset() {
	*x = TechnicalEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechnicalEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalEvent) ProtoMessage() {}

func (x *TechnicalEvent) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalEvent.ProtoReflect.Descriptor instead.
func (*TechnicalEvent) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{12}
}

func (m *TechnicalEvent) GetEvent() isTechnicalEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyCreated() *PropertyCreatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyCreated); ok {
		return x.PropertyCreated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyDescriptionUpdated() *PropertyDescriptionUpdatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyDescriptionUpdated); ok {
		return x.PropertyDescriptionUpdated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertySetIdUpdated() *PropertySetIDUpdatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertySetIdUpdated); ok {
		return x.PropertySetIdUpdated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertySubjectTypeUpdated() *PropertySubjectTypeUpdatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertySubjectTypeUpdated); ok {
		return x.PropertySubjectTypeUpdated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyFieldTypeUpdated() *PropertyFieldTypeUpdatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyFieldTypeUpdated); ok {
		return x.PropertyFieldTypeUpdated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyFieldTypeDataCreated() *PropertyFieldTypeDataCreatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyFieldTypeDataCreated); ok {
		return x.PropertyFieldTypeDataCreated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyNameUpdated() *PropertyNameUpdatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyNameUpdated); ok {
		return x.PropertyNameUpdated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyFieldTypeDataAllowFreetextUpdated() *PropertyFieldTypeDataAllowFreetextUpdatedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyFieldTypeDataAllowFreetextUpdated); ok {
		return x.PropertyFieldTypeDataAllowFreetextUpdated
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyFieldTypeDataSelectOptionsRemoved() *PropertyFieldTypeDataSelectOptionsRemovedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyFieldTypeDataSelectOptionsRemoved); ok {
		return x.PropertyFieldTypeDataSelectOptionsRemoved
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyFieldTypeDataSelectOptionsUpserted() *PropertyFieldTypeDataSelectOptionsUpsertedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyFieldTypeDataSelectOptionsUpserted); ok {
		return x.PropertyFieldTypeDataSelectOptionsUpserted
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyArchived() *PropertyArchivedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyArchived); ok {
		return x.PropertyArchived
	}
	return nil
}

func (x *TechnicalEvent) GetPropertyRetrieved() *PropertyRetrievedEvent {
	if x, ok := x.GetEvent().(*TechnicalEvent_PropertyRetrieved); ok {
		return x.PropertyRetrieved
	}
	return nil
}

type isTechnicalEvent_Event interface {
	isTechnicalEvent_Event()
}

type TechnicalEvent_PropertyCreated struct {
	PropertyCreated *PropertyCreatedEvent `protobuf:"bytes,1,opt,name=property_created,json=propertyCreated,proto3,oneof"`
}

type TechnicalEvent_PropertyDescriptionUpdated struct {
	PropertyDescriptionUpdated *PropertyDescriptionUpdatedEvent `protobuf:"bytes,2,opt,name=property_description_updated,json=propertyDescriptionUpdated,proto3,oneof"`
}

type TechnicalEvent_PropertySetIdUpdated struct {
	PropertySetIdUpdated *PropertySetIDUpdatedEvent `protobuf:"bytes,3,opt,name=property_set_id_updated,json=propertySetIdUpdated,proto3,oneof"`
}

type TechnicalEvent_PropertySubjectTypeUpdated struct {
	PropertySubjectTypeUpdated *PropertySubjectTypeUpdatedEvent `protobuf:"bytes,4,opt,name=property_subject_type_updated,json=propertySubjectTypeUpdated,proto3,oneof"`
}

type TechnicalEvent_PropertyFieldTypeUpdated struct {
	PropertyFieldTypeUpdated *PropertyFieldTypeUpdatedEvent `protobuf:"bytes,5,opt,name=property_field_type_updated,json=propertyFieldTypeUpdated,proto3,oneof"`
}

type TechnicalEvent_PropertyFieldTypeDataCreated struct {
	PropertyFieldTypeDataCreated *PropertyFieldTypeDataCreatedEvent `protobuf:"bytes,6,opt,name=property_field_type_data_created,json=propertyFieldTypeDataCreated,proto3,oneof"`
}

type TechnicalEvent_PropertyNameUpdated struct {
	PropertyNameUpdated *PropertyNameUpdatedEvent `protobuf:"bytes,7,opt,name=property_name_updated,json=propertyNameUpdated,proto3,oneof"`
}

type TechnicalEvent_PropertyFieldTypeDataAllowFreetextUpdated struct {
	PropertyFieldTypeDataAllowFreetextUpdated *PropertyFieldTypeDataAllowFreetextUpdatedEvent `protobuf:"bytes,8,opt,name=property_field_type_data_allow_freetext_updated,json=propertyFieldTypeDataAllowFreetextUpdated,proto3,oneof"`
}

type TechnicalEvent_PropertyFieldTypeDataSelectOptionsRemoved struct {
	PropertyFieldTypeDataSelectOptionsRemoved *PropertyFieldTypeDataSelectOptionsRemovedEvent `protobuf:"bytes,9,opt,name=property_field_type_data_select_options_removed,json=propertyFieldTypeDataSelectOptionsRemoved,proto3,oneof"`
}

type TechnicalEvent_PropertyFieldTypeDataSelectOptionsUpserted struct {
	PropertyFieldTypeDataSelectOptionsUpserted *PropertyFieldTypeDataSelectOptionsUpsertedEvent `protobuf:"bytes,10,opt,name=property_field_type_data_select_options_upserted,json=propertyFieldTypeDataSelectOptionsUpserted,proto3,oneof"`
}

type TechnicalEvent_PropertyArchived struct {
	PropertyArchived *PropertyArchivedEvent `protobuf:"bytes,11,opt,name=property_archived,json=propertyArchived,proto3,oneof"`
}

type TechnicalEvent_PropertyRetrieved struct {
	PropertyRetrieved *PropertyRetrievedEvent `protobuf:"bytes,12,opt,name=property_retrieved,json=propertyRetrieved,proto3,oneof"`
}

func (*TechnicalEvent_PropertyCreated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyDescriptionUpdated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertySetIdUpdated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertySubjectTypeUpdated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyFieldTypeUpdated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyFieldTypeDataCreated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyNameUpdated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyFieldTypeDataAllowFreetextUpdated) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyFieldTypeDataSelectOptionsRemoved) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyFieldTypeDataSelectOptionsUpserted) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyArchived) isTechnicalEvent_Event() {}

func (*TechnicalEvent_PropertyRetrieved) isTechnicalEvent_Event() {}

type PropertyFieldTypeDataCreatedEvent_SelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsCustom    bool    `protobuf:"varint,4,opt,name=is_custom,json=isCustom,proto3" json:"is_custom,omitempty"`
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) Reset() {
	*x = PropertyFieldTypeDataCreatedEvent_SelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataCreatedEvent_SelectOption) ProtoMessage() {}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataCreatedEvent_SelectOption.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataCreatedEvent_SelectOption) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectOption) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

type PropertyFieldTypeDataCreatedEvent_SelectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowFreetext bool                                              `protobuf:"varint,1,opt,name=allow_freetext,json=allowFreetext,proto3" json:"allow_freetext,omitempty"`
	SelectOptions []*PropertyFieldTypeDataCreatedEvent_SelectOption `protobuf:"bytes,2,rep,name=select_options,json=selectOptions,proto3" json:"select_options,omitempty"`
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectData) Reset() {
	*x = PropertyFieldTypeDataCreatedEvent_SelectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataCreatedEvent_SelectData) ProtoMessage() {}

func (x *PropertyFieldTypeDataCreatedEvent_SelectData) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataCreatedEvent_SelectData.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataCreatedEvent_SelectData) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{5, 1}
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectData) GetAllowFreetext() bool {
	if x != nil {
		return x.AllowFreetext
	}
	return false
}

func (x *PropertyFieldTypeDataCreatedEvent_SelectData) GetSelectOptions() []*PropertyFieldTypeDataCreatedEvent_SelectOption {
	if x != nil {
		return x.SelectOptions
	}
	return nil
}

type PropertyFieldTypeDataCreatedEvent_FieldTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectData *PropertyFieldTypeDataCreatedEvent_SelectData `protobuf:"bytes,1,opt,name=select_data,json=selectData,proto3,oneof" json:"select_data,omitempty"`
}

func (x *PropertyFieldTypeDataCreatedEvent_FieldTypeData) Reset() {
	*x = PropertyFieldTypeDataCreatedEvent_FieldTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataCreatedEvent_FieldTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataCreatedEvent_FieldTypeData) ProtoMessage() {}

func (x *PropertyFieldTypeDataCreatedEvent_FieldTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataCreatedEvent_FieldTypeData.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataCreatedEvent_FieldTypeData) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{5, 2}
}

func (x *PropertyFieldTypeDataCreatedEvent_FieldTypeData) GetSelectData() *PropertyFieldTypeDataCreatedEvent_SelectData {
	if x != nil {
		return x.SelectData
	}
	return nil
}

type PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsCustom    *bool   `protobuf:"varint,4,opt,name=is_custom,json=isCustom,proto3,oneof" json:"is_custom,omitempty"`
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) Reset() {
	*x = PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) ProtoMessage() {}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) ProtoReflect() protoreflect.Message {
	mi := &file_libs_technical_events_property_svc_v1_property_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption.ProtoReflect.Descriptor instead.
func (*PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) Descriptor() ([]byte, []int) {
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption) GetIsCustom() bool {
	if x != nil && x.IsCustom != nil {
		return *x.IsCustom
	}
	return false
}

var File_libs_technical_events_property_svc_v1_property_proto protoreflect.FileDescriptor

var file_libs_technical_events_property_svc_v1_property_proto_rawDesc = []byte{
	0x0a, 0x34, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x6c,
	0x69, 0x62, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73,
	0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x17, 0xda, 0x84,
	0x01, 0x13, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x76, 0x31, 0x22, 0x68, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x23, 0xda, 0x84, 0x01, 0x1f,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x76, 0x31, 0x22,
	0x52, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x49, 0x44,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x3a, 0x1e, 0xda, 0x84, 0x01, 0x1a, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x76, 0x31, 0x22, 0x6a, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x24, 0xda, 0x84, 0x01, 0x20, 0x50,
	0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x53, 0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x76, 0x31, 0x22,
	0x62, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x22, 0xda, 0x84, 0x01, 0x1e, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x76, 0x31, 0x22, 0xa6, 0x05, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x7e, 0x0a, 0x0f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x56, 0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x86, 0x01, 0x0a, 0x0c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0xb1, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x12, 0x7c, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x55, 0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9a, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x79, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e,
	0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x3a, 0x27, 0xda, 0x84, 0x01, 0x23, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x76, 0x31, 0x22, 0x4c, 0x0a, 0x18,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x1c, 0xda, 0x84,
	0x01, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x76, 0x31, 0x22, 0x96, 0x01, 0x0a, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x3a, 0x36, 0xda, 0x84, 0x01,
	0x32, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x46, 0x52, 0x45, 0x45, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x76, 0x31, 0x22, 0x9e, 0x01, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x36, 0xda, 0x84,
	0x01, 0x32, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43,
	0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x44, 0x5f, 0x76, 0x31, 0x22, 0xbe, 0x03, 0x0a, 0x2f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x17, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x69, 0x2e, 0x6c, 0x69, 0x62,
	0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xad, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x3a, 0x37, 0xda, 0x84,
	0x01, 0x33, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43,
	0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x55, 0x50, 0x53, 0x45, 0x52, 0x54,
	0x45, 0x44, 0x5f, 0x76, 0x31, 0x22, 0x31, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x18,
	0xda, 0x84, 0x01, 0x14, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x41, 0x52, 0x43,
	0x48, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x76, 0x31, 0x22, 0x33, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x3a, 0x19, 0xda, 0x84, 0x01, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x56, 0x45, 0x44, 0x5f, 0x76, 0x31, 0x22, 0xc7, 0x0d,
	0x0a, 0x0e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x68, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6c, 0x69, 0x62,
	0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x8a, 0x01, 0x0a, 0x1c, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x79, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x49, 0x44, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x49, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x8b, 0x01, 0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6c, 0x69, 0x62,
	0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x85, 0x01, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x18,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x92, 0x01, 0x0a, 0x20, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x1c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x75, 0x0a,
	0x15, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6c,
	0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0xbb, 0x01, 0x0a, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55,
	0x2e, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x29, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0xbb, 0x01, 0x0a, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x6c,
	0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x29, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x12, 0xbe, 0x01, 0x0a, 0x30, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x6c, 0x69,
	0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x2a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x6b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6c,
	0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x6e,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6c, 0x69, 0x62,
	0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x94, 0x02, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e,
	0x6c, 0x69, 0x62, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x65, 0x6e, 0x2f, 0x6c, 0x69, 0x62, 0x73,
	0x2f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2d, 0x73, 0x76, 0x63, 0x2f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x4c, 0x54, 0x50, 0xaa, 0x02, 0x23, 0x4c, 0x69, 0x62, 0x73, 0x2e, 0x54,
	0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x23,
	0x4c, 0x69, 0x62, 0x73, 0x5c, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x5c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2f, 0x4c, 0x69, 0x62, 0x73, 0x5c, 0x54, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x26, 0x4c, 0x69, 0x62, 0x73, 0x3a, 0x3a, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_libs_technical_events_property_svc_v1_property_proto_rawDescOnce sync.Once
	file_libs_technical_events_property_svc_v1_property_proto_rawDescData = file_libs_technical_events_property_svc_v1_property_proto_rawDesc
)

func file_libs_technical_events_property_svc_v1_property_proto_rawDescGZIP() []byte {
	file_libs_technical_events_property_svc_v1_property_proto_rawDescOnce.Do(func() {
		file_libs_technical_events_property_svc_v1_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_libs_technical_events_property_svc_v1_property_proto_rawDescData)
	})
	return file_libs_technical_events_property_svc_v1_property_proto_rawDescData
}

var file_libs_technical_events_property_svc_v1_property_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_libs_technical_events_property_svc_v1_property_proto_goTypes = []interface{}{
	(*PropertyCreatedEvent)(nil),                                               // 0: libs.technical_events.property_svc.v1.PropertyCreatedEvent
	(*PropertyDescriptionUpdatedEvent)(nil),                                    // 1: libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent
	(*PropertySetIDUpdatedEvent)(nil),                                          // 2: libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent
	(*PropertySubjectTypeUpdatedEvent)(nil),                                    // 3: libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent
	(*PropertyFieldTypeUpdatedEvent)(nil),                                      // 4: libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent
	(*PropertyFieldTypeDataCreatedEvent)(nil),                                  // 5: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent
	(*PropertyNameUpdatedEvent)(nil),                                           // 6: libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent
	(*PropertyFieldTypeDataAllowFreetextUpdatedEvent)(nil),                     // 7: libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent
	(*PropertyFieldTypeDataSelectOptionsRemovedEvent)(nil),                     // 8: libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent
	(*PropertyFieldTypeDataSelectOptionsUpsertedEvent)(nil),                    // 9: libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent
	(*PropertyArchivedEvent)(nil),                                              // 10: libs.technical_events.property_svc.v1.PropertyArchivedEvent
	(*PropertyRetrievedEvent)(nil),                                             // 11: libs.technical_events.property_svc.v1.PropertyRetrievedEvent
	(*TechnicalEvent)(nil),                                                     // 12: libs.technical_events.property_svc.v1.TechnicalEvent
	(*PropertyFieldTypeDataCreatedEvent_SelectOption)(nil),                     // 13: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption
	(*PropertyFieldTypeDataCreatedEvent_SelectData)(nil),                       // 14: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData
	(*PropertyFieldTypeDataCreatedEvent_FieldTypeData)(nil),                    // 15: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData
	(*PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption)(nil), // 16: libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption
	(v1.SubjectType)(0),                                                        // 17: services.property_svc.v1.SubjectType
	(v1.FieldType)(0),                                                          // 18: services.property_svc.v1.FieldType
}
var file_libs_technical_events_property_svc_v1_property_proto_depIdxs = []int32{
	17, // 0: libs.technical_events.property_svc.v1.PropertyCreatedEvent.subject_type:type_name -> services.property_svc.v1.SubjectType
	18, // 1: libs.technical_events.property_svc.v1.PropertyCreatedEvent.field_type:type_name -> services.property_svc.v1.FieldType
	15, // 2: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.field_type_data:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData
	16, // 3: libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.upserted_select_options:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent.UpdateSelectOption
	0,  // 4: libs.technical_events.property_svc.v1.TechnicalEvent.property_created:type_name -> libs.technical_events.property_svc.v1.PropertyCreatedEvent
	1,  // 5: libs.technical_events.property_svc.v1.TechnicalEvent.property_description_updated:type_name -> libs.technical_events.property_svc.v1.PropertyDescriptionUpdatedEvent
	2,  // 6: libs.technical_events.property_svc.v1.TechnicalEvent.property_set_id_updated:type_name -> libs.technical_events.property_svc.v1.PropertySetIDUpdatedEvent
	3,  // 7: libs.technical_events.property_svc.v1.TechnicalEvent.property_subject_type_updated:type_name -> libs.technical_events.property_svc.v1.PropertySubjectTypeUpdatedEvent
	4,  // 8: libs.technical_events.property_svc.v1.TechnicalEvent.property_field_type_updated:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeUpdatedEvent
	5,  // 9: libs.technical_events.property_svc.v1.TechnicalEvent.property_field_type_data_created:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent
	6,  // 10: libs.technical_events.property_svc.v1.TechnicalEvent.property_name_updated:type_name -> libs.technical_events.property_svc.v1.PropertyNameUpdatedEvent
	7,  // 11: libs.technical_events.property_svc.v1.TechnicalEvent.property_field_type_data_allow_freetext_updated:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataAllowFreetextUpdatedEvent
	8,  // 12: libs.technical_events.property_svc.v1.TechnicalEvent.property_field_type_data_select_options_removed:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsRemovedEvent
	9,  // 13: libs.technical_events.property_svc.v1.TechnicalEvent.property_field_type_data_select_options_upserted:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataSelectOptionsUpsertedEvent
	10, // 14: libs.technical_events.property_svc.v1.TechnicalEvent.property_archived:type_name -> libs.technical_events.property_svc.v1.PropertyArchivedEvent
	11, // 15: libs.technical_events.property_svc.v1.TechnicalEvent.property_retrieved:type_name -> libs.technical_events.property_svc.v1.PropertyRetrievedEvent
	13, // 16: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData.select_options:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectOption
	14, // 17: libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.FieldTypeData.select_data:type_name -> libs.technical_events.property_svc.v1.PropertyFieldTypeDataCreatedEvent.SelectData
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_libs_technical_events_property_svc_v1_property_proto_init() }
func file_libs_technical_events_property_svc_v1_property_proto_init() {
	if File_libs_technical_events_property_svc_v1_property_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyDescriptionUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertySetIDUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertySubjectTypeUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyNameUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataAllowFreetextUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataSelectOptionsRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataSelectOptionsUpsertedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyArchivedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyRetrievedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechnicalEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataCreatedEvent_SelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataCreatedEvent_SelectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataCreatedEvent_FieldTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libs_technical_events_property_svc_v1_property_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyFieldTypeDataSelectOptionsUpsertedEvent_UpdateSelectOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_libs_technical_events_property_svc_v1_property_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*TechnicalEvent_PropertyCreated)(nil),
		(*TechnicalEvent_PropertyDescriptionUpdated)(nil),
		(*TechnicalEvent_PropertySetIdUpdated)(nil),
		(*TechnicalEvent_PropertySubjectTypeUpdated)(nil),
		(*TechnicalEvent_PropertyFieldTypeUpdated)(nil),
		(*TechnicalEvent_PropertyFieldTypeDataCreated)(nil),
		(*TechnicalEvent_PropertyNameUpdated)(nil),
		(*TechnicalEvent_PropertyFieldTypeDataAllowFreetextUpdated)(nil),
		(*TechnicalEvent_PropertyFieldTypeDataSelectOptionsRemoved)(nil),
		(*TechnicalEvent_PropertyFieldTypeDataSelectOptionsUpserted)(nil),
		(*TechnicalEvent_PropertyArchived)(nil),
		(*TechnicalEvent_PropertyRetrieved)(nil),
	}
	file_libs_technical_events_property_svc_v1_property_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_libs_technical_events_property_svc_v1_property_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_libs_technical_events_property_svc_v1_property_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_libs_technical_events_property_svc_v1_property_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_libs_technical_events_property_svc_v1_property_proto_goTypes,
		DependencyIndexes: file_libs_technical_events_property_svc_v1_property_proto_depIdxs,
		MessageInfos:      file_libs_technical_events_property_svc_v1_property_proto_msgTypes,
	}.Build()
	File_libs_technical_events_property_svc_v1_property_proto = out.File
	file_libs_technical_events_property_svc_v1_property_proto_rawDesc = nil
	file_libs_technical_events_property_svc_v1_property_proto_goTypes = nil
	file_libs_technical_events_property_svc_v1_property_proto_depIdxs = nil
}
