// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: services/tasks_svc/v1/ward_svc.proto

package v1

import (
	v1 "gen/libs/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *CreateWardRequest) Reset() {
	*x = CreateWardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWardRequest) ProtoMessage() {}

func (x *CreateWardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWardRequest.ProtoReflect.Descriptor instead.
func (*CreateWardRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateWardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Consistency string `protobuf:"bytes,2,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *CreateWardResponse) Reset() {
	*x = CreateWardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWardResponse) ProtoMessage() {}

func (x *CreateWardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWardResponse.ProtoReflect.Descriptor instead.
func (*CreateWardResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWardResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateWardResponse) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetWardRequest) Reset() {
	*x = GetWardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardRequest) ProtoMessage() {}

func (x *GetWardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardRequest.ProtoReflect.Descriptor instead.
func (*GetWardRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{2}
}

func (x *GetWardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetWardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Consistency string `protobuf:"bytes,3,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardResponse) Reset() {
	*x = GetWardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardResponse) ProtoMessage() {}

func (x *GetWardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardResponse.ProtoReflect.Descriptor instead.
func (*GetWardResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{3}
}

func (x *GetWardResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardResponse) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWardsRequest) Reset() {
	*x = GetWardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardsRequest) ProtoMessage() {}

func (x *GetWardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardsRequest.ProtoReflect.Descriptor instead.
func (*GetWardsRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{4}
}

type GetWardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wards []*GetWardsResponse_Ward `protobuf:"bytes,1,rep,name=wards,proto3" json:"wards,omitempty"`
}

func (x *GetWardsResponse) Reset() {
	*x = GetWardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardsResponse) ProtoMessage() {}

func (x *GetWardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardsResponse.ProtoReflect.Descriptor instead.
func (*GetWardsResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{5}
}

func (x *GetWardsResponse) GetWards() []*GetWardsResponse_Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

type GetRecentWardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecentWardsRequest) Reset() {
	*x = GetRecentWardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentWardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentWardsRequest) ProtoMessage() {}

func (x *GetRecentWardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentWardsRequest.ProtoReflect.Descriptor instead.
func (*GetRecentWardsRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{6}
}

type GetRecentWardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wards []*GetRecentWardsResponse_Ward `protobuf:"bytes,1,rep,name=wards,proto3" json:"wards,omitempty"`
}

func (x *GetRecentWardsResponse) Reset() {
	*x = GetRecentWardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentWardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentWardsResponse) ProtoMessage() {}

func (x *GetRecentWardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentWardsResponse.ProtoReflect.Descriptor instead.
func (*GetRecentWardsResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecentWardsResponse) GetWards() []*GetRecentWardsResponse_Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

type UpdateWardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Consistency *string `protobuf:"bytes,3,opt,name=consistency,proto3,oneof" json:"consistency,omitempty"` // no conflict detection, if not provided
}

func (x *UpdateWardRequest) Reset() {
	*x = UpdateWardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWardRequest) ProtoMessage() {}

func (x *UpdateWardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWardRequest.ProtoReflect.Descriptor instead.
func (*UpdateWardRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateWardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWardRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateWardRequest) GetConsistency() string {
	if x != nil && x.Consistency != nil {
		return *x.Consistency
	}
	return ""
}

type UpdateWardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conflict    *v1.Conflict `protobuf:"bytes,1,opt,name=conflict,proto3,oneof" json:"conflict,omitempty"`
	Consistency string       `protobuf:"bytes,2,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *UpdateWardResponse) Reset() {
	*x = UpdateWardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWardResponse) ProtoMessage() {}

func (x *UpdateWardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWardResponse.ProtoReflect.Descriptor instead.
func (*UpdateWardResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateWardResponse) GetConflict() *v1.Conflict {
	if x != nil {
		return x.Conflict
	}
	return nil
}

func (x *UpdateWardResponse) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type DeleteWardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *DeleteWardRequest) Reset() {
	*x = DeleteWardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWardRequest) ProtoMessage() {}

func (x *DeleteWardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWardRequest.ProtoReflect.Descriptor instead.
func (*DeleteWardRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteWardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteWardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWardResponse) Reset() {
	*x = DeleteWardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWardResponse) ProtoMessage() {}

func (x *DeleteWardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWardResponse.ProtoReflect.Descriptor instead.
func (*DeleteWardResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{11}
}

type GetWardDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetWardDetailsRequest) Reset() {
	*x = GetWardDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardDetailsRequest) ProtoMessage() {}

func (x *GetWardDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetWardDetailsRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{12}
}

func (x *GetWardDetailsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetWardDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rooms         []*GetWardDetailsResponse_Room         `protobuf:"bytes,3,rep,name=rooms,proto3" json:"rooms,omitempty"`
	TaskTemplates []*GetWardDetailsResponse_TaskTemplate `protobuf:"bytes,4,rep,name=task_templates,json=taskTemplates,proto3" json:"task_templates,omitempty"`
	Consistency   string                                 `protobuf:"bytes,5,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardDetailsResponse) Reset() {
	*x = GetWardDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardDetailsResponse) ProtoMessage() {}

func (x *GetWardDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetWardDetailsResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{13}
}

func (x *GetWardDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardDetailsResponse) GetRooms() []*GetWardDetailsResponse_Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetWardDetailsResponse) GetTaskTemplates() []*GetWardDetailsResponse_TaskTemplate {
	if x != nil {
		return x.TaskTemplates
	}
	return nil
}

func (x *GetWardDetailsResponse) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardOverviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWardOverviewsRequest) Reset() {
	*x = GetWardOverviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardOverviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardOverviewsRequest) ProtoMessage() {}

func (x *GetWardOverviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardOverviewsRequest.ProtoReflect.Descriptor instead.
func (*GetWardOverviewsRequest) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{14}
}

type GetWardOverviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wards []*GetWardOverviewsResponse_Ward `protobuf:"bytes,1,rep,name=wards,proto3" json:"wards,omitempty"`
}

func (x *GetWardOverviewsResponse) Reset() {
	*x = GetWardOverviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardOverviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardOverviewsResponse) ProtoMessage() {}

func (x *GetWardOverviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardOverviewsResponse.ProtoReflect.Descriptor instead.
func (*GetWardOverviewsResponse) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{15}
}

func (x *GetWardOverviewsResponse) GetWards() []*GetWardOverviewsResponse_Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

type GetWardsResponse_Ward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Consistency string `protobuf:"bytes,3,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardsResponse_Ward) Reset() {
	*x = GetWardsResponse_Ward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardsResponse_Ward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardsResponse_Ward) ProtoMessage() {}

func (x *GetWardsResponse_Ward) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardsResponse_Ward.ProtoReflect.Descriptor instead.
func (*GetWardsResponse_Ward) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetWardsResponse_Ward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardsResponse_Ward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardsResponse_Ward) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetRecentWardsResponse_Ward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BedCount        uint32 `protobuf:"varint,3,opt,name=bed_count,json=bedCount,proto3" json:"bed_count,omitempty"`
	TasksTodo       uint32 `protobuf:"varint,4,opt,name=tasks_todo,json=tasksTodo,proto3" json:"tasks_todo,omitempty"`
	TasksInProgress uint32 `protobuf:"varint,5,opt,name=tasks_in_progress,json=tasksInProgress,proto3" json:"tasks_in_progress,omitempty"`
	TasksDone       uint32 `protobuf:"varint,6,opt,name=tasks_done,json=tasksDone,proto3" json:"tasks_done,omitempty"`
	Consistency     string `protobuf:"bytes,7,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetRecentWardsResponse_Ward) Reset() {
	*x = GetRecentWardsResponse_Ward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentWardsResponse_Ward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentWardsResponse_Ward) ProtoMessage() {}

func (x *GetRecentWardsResponse_Ward) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentWardsResponse_Ward.ProtoReflect.Descriptor instead.
func (*GetRecentWardsResponse_Ward) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetRecentWardsResponse_Ward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRecentWardsResponse_Ward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRecentWardsResponse_Ward) GetBedCount() uint32 {
	if x != nil {
		return x.BedCount
	}
	return 0
}

func (x *GetRecentWardsResponse_Ward) GetTasksTodo() uint32 {
	if x != nil {
		return x.TasksTodo
	}
	return 0
}

func (x *GetRecentWardsResponse_Ward) GetTasksInProgress() uint32 {
	if x != nil {
		return x.TasksInProgress
	}
	return 0
}

func (x *GetRecentWardsResponse_Ward) GetTasksDone() uint32 {
	if x != nil {
		return x.TasksDone
	}
	return 0
}

func (x *GetRecentWardsResponse_Ward) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardDetailsResponse_Bed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Consistency string `protobuf:"bytes,3,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardDetailsResponse_Bed) Reset() {
	*x = GetWardDetailsResponse_Bed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardDetailsResponse_Bed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardDetailsResponse_Bed) ProtoMessage() {}

func (x *GetWardDetailsResponse_Bed) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardDetailsResponse_Bed.ProtoReflect.Descriptor instead.
func (*GetWardDetailsResponse_Bed) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetWardDetailsResponse_Bed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardDetailsResponse_Bed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardDetailsResponse_Bed) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardDetailsResponse_Subtask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWardDetailsResponse_Subtask) Reset() {
	*x = GetWardDetailsResponse_Subtask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardDetailsResponse_Subtask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardDetailsResponse_Subtask) ProtoMessage() {}

func (x *GetWardDetailsResponse_Subtask) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardDetailsResponse_Subtask.ProtoReflect.Descriptor instead.
func (*GetWardDetailsResponse_Subtask) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{13, 1}
}

func (x *GetWardDetailsResponse_Subtask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardDetailsResponse_Subtask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWardDetailsResponse_Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Beds        []*GetWardDetailsResponse_Bed `protobuf:"bytes,3,rep,name=beds,proto3" json:"beds,omitempty"`
	Consistency string                        `protobuf:"bytes,4,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardDetailsResponse_Room) Reset() {
	*x = GetWardDetailsResponse_Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardDetailsResponse_Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardDetailsResponse_Room) ProtoMessage() {}

func (x *GetWardDetailsResponse_Room) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardDetailsResponse_Room.ProtoReflect.Descriptor instead.
func (*GetWardDetailsResponse_Room) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{13, 2}
}

func (x *GetWardDetailsResponse_Room) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardDetailsResponse_Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardDetailsResponse_Room) GetBeds() []*GetWardDetailsResponse_Bed {
	if x != nil {
		return x.Beds
	}
	return nil
}

func (x *GetWardDetailsResponse_Room) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardDetailsResponse_TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Subtasks    []*GetWardDetailsResponse_Subtask `protobuf:"bytes,3,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
	Consistency string                            `protobuf:"bytes,4,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardDetailsResponse_TaskTemplate) Reset() {
	*x = GetWardDetailsResponse_TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardDetailsResponse_TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardDetailsResponse_TaskTemplate) ProtoMessage() {}

func (x *GetWardDetailsResponse_TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardDetailsResponse_TaskTemplate.ProtoReflect.Descriptor instead.
func (*GetWardDetailsResponse_TaskTemplate) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{13, 3}
}

func (x *GetWardDetailsResponse_TaskTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardDetailsResponse_TaskTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardDetailsResponse_TaskTemplate) GetSubtasks() []*GetWardDetailsResponse_Subtask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

func (x *GetWardDetailsResponse_TaskTemplate) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

type GetWardOverviewsResponse_Ward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BedCount        uint32 `protobuf:"varint,3,opt,name=bed_count,json=bedCount,proto3" json:"bed_count,omitempty"`
	TasksTodo       uint32 `protobuf:"varint,4,opt,name=tasks_todo,json=tasksTodo,proto3" json:"tasks_todo,omitempty"`
	TasksInProgress uint32 `protobuf:"varint,5,opt,name=tasks_in_progress,json=tasksInProgress,proto3" json:"tasks_in_progress,omitempty"`
	TasksDone       uint32 `protobuf:"varint,6,opt,name=tasks_done,json=tasksDone,proto3" json:"tasks_done,omitempty"`
	Consistency     string `protobuf:"bytes,7,opt,name=consistency,proto3" json:"consistency,omitempty"`
}

func (x *GetWardOverviewsResponse_Ward) Reset() {
	*x = GetWardOverviewsResponse_Ward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWardOverviewsResponse_Ward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWardOverviewsResponse_Ward) ProtoMessage() {}

func (x *GetWardOverviewsResponse_Ward) ProtoReflect() protoreflect.Message {
	mi := &file_services_tasks_svc_v1_ward_svc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWardOverviewsResponse_Ward.ProtoReflect.Descriptor instead.
func (*GetWardOverviewsResponse_Ward) Descriptor() ([]byte, []int) {
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetWardOverviewsResponse_Ward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWardOverviewsResponse_Ward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWardOverviewsResponse_Ward) GetBedCount() uint32 {
	if x != nil {
		return x.BedCount
	}
	return 0
}

func (x *GetWardOverviewsResponse_Ward) GetTasksTodo() uint32 {
	if x != nil {
		return x.TasksTodo
	}
	return 0
}

func (x *GetWardOverviewsResponse_Ward) GetTasksInProgress() uint32 {
	if x != nil {
		return x.TasksInProgress
	}
	return 0
}

func (x *GetWardOverviewsResponse_Ward) GetTasksDone() uint32 {
	if x != nil {
		return x.TasksDone
	}
	return 0
}

func (x *GetWardOverviewsResponse_Ward) GetConsistency() string {
	if x != nil {
		return x.Consistency
	}
	return ""
}

var File_services_tasks_svc_v1_ward_svc_proto protoreflect.FileDescriptor

var file_services_tasks_svc_v1_ward_svc_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x6c,
	0x69, 0x62, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x20, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x57, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52, 0x05, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x1a, 0x4c, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x57,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x1a, 0xd3, 0x01, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x62, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x64, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x6f, 0x64, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x44, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x7c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x7e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x05, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x12, 0x61, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x4b, 0x0a, 0x03, 0x42, 0x65, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x1a, 0x2d, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x1a, 0x93, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x04, 0x62, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x65, 0x64,
	0x52, 0x04, 0x62, 0x65, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0xa7, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbc, 0x02,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52,
	0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0xd3, 0x01, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x64, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x6f, 0x64, 0x6f, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x32, 0xd0, 0x06, 0x0a,
	0x0b, 0x57, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64,
	0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x72, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x2e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0xb6, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x57,
	0x61, 0x72, 0x64, 0x53, 0x76, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x19, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x2d, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x54, 0x58, 0xaa, 0x02,
	0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53,
	0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x76, 0x63,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_tasks_svc_v1_ward_svc_proto_rawDescOnce sync.Once
	file_services_tasks_svc_v1_ward_svc_proto_rawDescData = file_services_tasks_svc_v1_ward_svc_proto_rawDesc
)

func file_services_tasks_svc_v1_ward_svc_proto_rawDescGZIP() []byte {
	file_services_tasks_svc_v1_ward_svc_proto_rawDescOnce.Do(func() {
		file_services_tasks_svc_v1_ward_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_tasks_svc_v1_ward_svc_proto_rawDescData)
	})
	return file_services_tasks_svc_v1_ward_svc_proto_rawDescData
}

var file_services_tasks_svc_v1_ward_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_services_tasks_svc_v1_ward_svc_proto_goTypes = []interface{}{
	(*CreateWardRequest)(nil),                   // 0: services.tasks_svc.v1.CreateWardRequest
	(*CreateWardResponse)(nil),                  // 1: services.tasks_svc.v1.CreateWardResponse
	(*GetWardRequest)(nil),                      // 2: services.tasks_svc.v1.GetWardRequest
	(*GetWardResponse)(nil),                     // 3: services.tasks_svc.v1.GetWardResponse
	(*GetWardsRequest)(nil),                     // 4: services.tasks_svc.v1.GetWardsRequest
	(*GetWardsResponse)(nil),                    // 5: services.tasks_svc.v1.GetWardsResponse
	(*GetRecentWardsRequest)(nil),               // 6: services.tasks_svc.v1.GetRecentWardsRequest
	(*GetRecentWardsResponse)(nil),              // 7: services.tasks_svc.v1.GetRecentWardsResponse
	(*UpdateWardRequest)(nil),                   // 8: services.tasks_svc.v1.UpdateWardRequest
	(*UpdateWardResponse)(nil),                  // 9: services.tasks_svc.v1.UpdateWardResponse
	(*DeleteWardRequest)(nil),                   // 10: services.tasks_svc.v1.DeleteWardRequest
	(*DeleteWardResponse)(nil),                  // 11: services.tasks_svc.v1.DeleteWardResponse
	(*GetWardDetailsRequest)(nil),               // 12: services.tasks_svc.v1.GetWardDetailsRequest
	(*GetWardDetailsResponse)(nil),              // 13: services.tasks_svc.v1.GetWardDetailsResponse
	(*GetWardOverviewsRequest)(nil),             // 14: services.tasks_svc.v1.GetWardOverviewsRequest
	(*GetWardOverviewsResponse)(nil),            // 15: services.tasks_svc.v1.GetWardOverviewsResponse
	(*GetWardsResponse_Ward)(nil),               // 16: services.tasks_svc.v1.GetWardsResponse.Ward
	(*GetRecentWardsResponse_Ward)(nil),         // 17: services.tasks_svc.v1.GetRecentWardsResponse.Ward
	(*GetWardDetailsResponse_Bed)(nil),          // 18: services.tasks_svc.v1.GetWardDetailsResponse.Bed
	(*GetWardDetailsResponse_Subtask)(nil),      // 19: services.tasks_svc.v1.GetWardDetailsResponse.Subtask
	(*GetWardDetailsResponse_Room)(nil),         // 20: services.tasks_svc.v1.GetWardDetailsResponse.Room
	(*GetWardDetailsResponse_TaskTemplate)(nil), // 21: services.tasks_svc.v1.GetWardDetailsResponse.TaskTemplate
	(*GetWardOverviewsResponse_Ward)(nil),       // 22: services.tasks_svc.v1.GetWardOverviewsResponse.Ward
	(*v1.Conflict)(nil),                         // 23: libs.common.v1.Conflict
}
var file_services_tasks_svc_v1_ward_svc_proto_depIdxs = []int32{
	16, // 0: services.tasks_svc.v1.GetWardsResponse.wards:type_name -> services.tasks_svc.v1.GetWardsResponse.Ward
	17, // 1: services.tasks_svc.v1.GetRecentWardsResponse.wards:type_name -> services.tasks_svc.v1.GetRecentWardsResponse.Ward
	23, // 2: services.tasks_svc.v1.UpdateWardResponse.conflict:type_name -> libs.common.v1.Conflict
	20, // 3: services.tasks_svc.v1.GetWardDetailsResponse.rooms:type_name -> services.tasks_svc.v1.GetWardDetailsResponse.Room
	21, // 4: services.tasks_svc.v1.GetWardDetailsResponse.task_templates:type_name -> services.tasks_svc.v1.GetWardDetailsResponse.TaskTemplate
	22, // 5: services.tasks_svc.v1.GetWardOverviewsResponse.wards:type_name -> services.tasks_svc.v1.GetWardOverviewsResponse.Ward
	18, // 6: services.tasks_svc.v1.GetWardDetailsResponse.Room.beds:type_name -> services.tasks_svc.v1.GetWardDetailsResponse.Bed
	19, // 7: services.tasks_svc.v1.GetWardDetailsResponse.TaskTemplate.subtasks:type_name -> services.tasks_svc.v1.GetWardDetailsResponse.Subtask
	0,  // 8: services.tasks_svc.v1.WardService.CreateWard:input_type -> services.tasks_svc.v1.CreateWardRequest
	2,  // 9: services.tasks_svc.v1.WardService.GetWard:input_type -> services.tasks_svc.v1.GetWardRequest
	4,  // 10: services.tasks_svc.v1.WardService.GetWards:input_type -> services.tasks_svc.v1.GetWardsRequest
	6,  // 11: services.tasks_svc.v1.WardService.GetRecentWards:input_type -> services.tasks_svc.v1.GetRecentWardsRequest
	8,  // 12: services.tasks_svc.v1.WardService.UpdateWard:input_type -> services.tasks_svc.v1.UpdateWardRequest
	10, // 13: services.tasks_svc.v1.WardService.DeleteWard:input_type -> services.tasks_svc.v1.DeleteWardRequest
	12, // 14: services.tasks_svc.v1.WardService.GetWardDetails:input_type -> services.tasks_svc.v1.GetWardDetailsRequest
	14, // 15: services.tasks_svc.v1.WardService.GetWardOverviews:input_type -> services.tasks_svc.v1.GetWardOverviewsRequest
	1,  // 16: services.tasks_svc.v1.WardService.CreateWard:output_type -> services.tasks_svc.v1.CreateWardResponse
	3,  // 17: services.tasks_svc.v1.WardService.GetWard:output_type -> services.tasks_svc.v1.GetWardResponse
	5,  // 18: services.tasks_svc.v1.WardService.GetWards:output_type -> services.tasks_svc.v1.GetWardsResponse
	7,  // 19: services.tasks_svc.v1.WardService.GetRecentWards:output_type -> services.tasks_svc.v1.GetRecentWardsResponse
	9,  // 20: services.tasks_svc.v1.WardService.UpdateWard:output_type -> services.tasks_svc.v1.UpdateWardResponse
	11, // 21: services.tasks_svc.v1.WardService.DeleteWard:output_type -> services.tasks_svc.v1.DeleteWardResponse
	13, // 22: services.tasks_svc.v1.WardService.GetWardDetails:output_type -> services.tasks_svc.v1.GetWardDetailsResponse
	15, // 23: services.tasks_svc.v1.WardService.GetWardOverviews:output_type -> services.tasks_svc.v1.GetWardOverviewsResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_services_tasks_svc_v1_ward_svc_proto_init() }
func file_services_tasks_svc_v1_ward_svc_proto_init() {
	if File_services_tasks_svc_v1_ward_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentWardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentWardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardOverviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardOverviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardsResponse_Ward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentWardsResponse_Ward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardDetailsResponse_Bed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardDetailsResponse_Subtask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardDetailsResponse_Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardDetailsResponse_TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_tasks_svc_v1_ward_svc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWardOverviewsResponse_Ward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_tasks_svc_v1_ward_svc_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_services_tasks_svc_v1_ward_svc_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_tasks_svc_v1_ward_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_tasks_svc_v1_ward_svc_proto_goTypes,
		DependencyIndexes: file_services_tasks_svc_v1_ward_svc_proto_depIdxs,
		MessageInfos:      file_services_tasks_svc_v1_ward_svc_proto_msgTypes,
	}.Build()
	File_services_tasks_svc_v1_ward_svc_proto = out.File
	file_services_tasks_svc_v1_ward_svc_proto_rawDesc = nil
	file_services_tasks_svc_v1_ward_svc_proto_goTypes = nil
	file_services_tasks_svc_v1_ward_svc_proto_depIdxs = nil
}
