// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: services/task_svc/v1/task_svc.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_TODO        TaskStatus = 1
	TaskStatus_TASK_STATUS_IN_PROGRESS TaskStatus = 2
	TaskStatus_TASK_STATUS_DONE        TaskStatus = 3
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_TODO",
		2: "TASK_STATUS_IN_PROGRESS",
		3: "TASK_STATUS_DONE",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_TODO":        1,
		"TASK_STATUS_IN_PROGRESS": 2,
		"TASK_STATUS_DONE":        3,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_services_task_svc_v1_task_svc_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_services_task_svc_v1_task_svc_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{0}
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required"` // @gotags: validate:"required"
	Description   *string                `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	PatientId     string                 `protobuf:"bytes,3,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	Public        bool                   `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	DueAt         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=due_at,json=dueAt,proto3" json:"due_at,omitempty"`
	InitialStatus *TaskStatus            `protobuf:"varint,6,opt,name=initial_status,json=initialStatus,proto3,enum=services.task_svc.v1.TaskStatus,oneof" json:"initial_status,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *CreateTaskRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *CreateTaskRequest) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *CreateTaskRequest) GetInitialStatus() TaskStatus {
	if x != nil && x.InitialStatus != nil {
		return *x.InitialStatus
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status         TaskStatus                 `protobuf:"varint,4,opt,name=status,proto3,enum=services.task_svc.v1.TaskStatus" json:"status,omitempty"`
	AssignedUserId string                     `protobuf:"bytes,5,opt,name=assigned_user_id,json=assignedUserId,proto3" json:"assigned_user_id,omitempty"`
	Patient        *GetTaskResponse_Patient   `protobuf:"bytes,6,opt,name=patient,proto3" json:"patient,omitempty"`
	Public         bool                       `protobuf:"varint,7,opt,name=public,proto3" json:"public,omitempty"`
	DueAt          *timestamppb.Timestamp     `protobuf:"bytes,8,opt,name=due_at,json=dueAt,proto3" json:"due_at,omitempty"`
	CreatedBy      string                     `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Subtasks       []*GetTaskResponse_SubTask `protobuf:"bytes,10,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
	OrganizationId string                     `protobuf:"bytes,11,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTaskResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTaskResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTaskResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *GetTaskResponse) GetAssignedUserId() string {
	if x != nil {
		return x.AssignedUserId
	}
	return ""
}

func (x *GetTaskResponse) GetPatient() *GetTaskResponse_Patient {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *GetTaskResponse) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *GetTaskResponse) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *GetTaskResponse) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetTaskResponse) GetSubtasks() []*GetTaskResponse_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

func (x *GetTaskResponse) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetTasksByPatientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetTasksByPatientRequest) Reset() {
	*x = GetTasksByPatientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientRequest) ProtoMessage() {}

func (x *GetTasksByPatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientRequest.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{4}
}

func (x *GetTasksByPatientRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type GetTasksByPatientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*GetTasksByPatientResponse_Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetTasksByPatientResponse) Reset() {
	*x = GetTasksByPatientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientResponse) ProtoMessage() {}

func (x *GetTasksByPatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientResponse.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{5}
}

func (x *GetTasksByPatientResponse) GetTasks() []*GetTasksByPatientResponse_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetTasksByPatientSortedByStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *GetTasksByPatientSortedByStatusRequest) Reset() {
	*x = GetTasksByPatientSortedByStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientSortedByStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientSortedByStatusRequest) ProtoMessage() {}

func (x *GetTasksByPatientSortedByStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientSortedByStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientSortedByStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{6}
}

func (x *GetTasksByPatientSortedByStatusRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type GetTasksByPatientSortedByStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Todo       []*GetTasksByPatientSortedByStatusResponse_Task `protobuf:"bytes,1,rep,name=todo,proto3" json:"todo,omitempty"`
	InProgress []*GetTasksByPatientSortedByStatusResponse_Task `protobuf:"bytes,2,rep,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`
	Done       []*GetTasksByPatientSortedByStatusResponse_Task `protobuf:"bytes,3,rep,name=done,proto3" json:"done,omitempty"`
}

func (x *GetTasksByPatientSortedByStatusResponse) Reset() {
	*x = GetTasksByPatientSortedByStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientSortedByStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientSortedByStatusResponse) ProtoMessage() {}

func (x *GetTasksByPatientSortedByStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientSortedByStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientSortedByStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{7}
}

func (x *GetTasksByPatientSortedByStatusResponse) GetTodo() []*GetTasksByPatientSortedByStatusResponse_Task {
	if x != nil {
		return x.Todo
	}
	return nil
}

func (x *GetTasksByPatientSortedByStatusResponse) GetInProgress() []*GetTasksByPatientSortedByStatusResponse_Task {
	if x != nil {
		return x.InProgress
	}
	return nil
}

func (x *GetTasksByPatientSortedByStatusResponse) GetDone() []*GetTasksByPatientSortedByStatusResponse_Task {
	if x != nil {
		return x.Done
	}
	return nil
}

type GetAssignedTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAssignedTasksRequest) Reset() {
	*x = GetAssignedTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTasksRequest) ProtoMessage() {}

func (x *GetAssignedTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTasksRequest.ProtoReflect.Descriptor instead.
func (*GetAssignedTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{8}
}

type GetAssignedTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*GetAssignedTasksResponse_Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetAssignedTasksResponse) Reset() {
	*x = GetAssignedTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTasksResponse) ProtoMessage() {}

func (x *GetAssignedTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTasksResponse.ProtoReflect.Descriptor instead.
func (*GetAssignedTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{9}
}

func (x *GetAssignedTasksResponse) GetTasks() []*GetAssignedTasksResponse_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	Name        *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	DueAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=due_at,json=dueAt,proto3,oneof" json:"due_at,omitempty"`
	Public      *bool                  `protobuf:"varint,5,opt,name=public,proto3,oneof" json:"public,omitempty"`
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTaskRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateTaskRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateTaskRequest) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *UpdateTaskRequest) GetPublic() bool {
	if x != nil && x.Public != nil {
		return *x.Public
	}
	return false
}

type UpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{11}
}

type AddSubTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	Done   *bool  `protobuf:"varint,3,opt,name=done,proto3,oneof" json:"done,omitempty"`                             // default: false
}

func (x *AddSubTaskRequest) Reset() {
	*x = AddSubTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubTaskRequest) ProtoMessage() {}

func (x *AddSubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubTaskRequest.ProtoReflect.Descriptor instead.
func (*AddSubTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{12}
}

func (x *AddSubTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddSubTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *AddSubTaskRequest) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return false
}

type AddSubTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *AddSubTaskResponse) Reset() {
	*x = AddSubTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubTaskResponse) ProtoMessage() {}

func (x *AddSubTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubTaskResponse.ProtoReflect.Descriptor instead.
func (*AddSubTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{13}
}

func (x *AddSubTaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveSubTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *RemoveSubTaskRequest) Reset() {
	*x = RemoveSubTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubTaskRequest) ProtoMessage() {}

func (x *RemoveSubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubTaskRequest.ProtoReflect.Descriptor instead.
func (*RemoveSubTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveSubTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveSubTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveSubTaskResponse) Reset() {
	*x = RemoveSubTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubTaskResponse) ProtoMessage() {}

func (x *RemoveSubTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubTaskResponse.ProtoReflect.Descriptor instead.
func (*RemoveSubTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{15}
}

type UpdateSubTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *UpdateSubTaskRequest) Reset() {
	*x = UpdateSubTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubTaskRequest) ProtoMessage() {}

func (x *UpdateSubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateSubTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSubTaskRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateSubTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubTaskResponse) Reset() {
	*x = UpdateSubTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubTaskResponse) ProtoMessage() {}

func (x *UpdateSubTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{17}
}

type SubTaskToToDoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *SubTaskToToDoRequest) Reset() {
	*x = SubTaskToToDoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTaskToToDoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTaskToToDoRequest) ProtoMessage() {}

func (x *SubTaskToToDoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTaskToToDoRequest.ProtoReflect.Descriptor instead.
func (*SubTaskToToDoRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{18}
}

func (x *SubTaskToToDoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SubTaskToToDoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubTaskToToDoResponse) Reset() {
	*x = SubTaskToToDoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTaskToToDoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTaskToToDoResponse) ProtoMessage() {}

func (x *SubTaskToToDoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTaskToToDoResponse.ProtoReflect.Descriptor instead.
func (*SubTaskToToDoResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{19}
}

type SubTaskToDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *SubTaskToDoneRequest) Reset() {
	*x = SubTaskToDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTaskToDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTaskToDoneRequest) ProtoMessage() {}

func (x *SubTaskToDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTaskToDoneRequest.ProtoReflect.Descriptor instead.
func (*SubTaskToDoneRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{20}
}

func (x *SubTaskToDoneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SubTaskToDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubTaskToDoneResponse) Reset() {
	*x = SubTaskToDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTaskToDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTaskToDoneResponse) ProtoMessage() {}

func (x *SubTaskToDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTaskToDoneResponse.ProtoReflect.Descriptor instead.
func (*SubTaskToDoneResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{21}
}

type TaskToToDoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *TaskToToDoRequest) Reset() {
	*x = TaskToToDoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToToDoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToToDoRequest) ProtoMessage() {}

func (x *TaskToToDoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToToDoRequest.ProtoReflect.Descriptor instead.
func (*TaskToToDoRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{22}
}

func (x *TaskToToDoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskToToDoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskToToDoResponse) Reset() {
	*x = TaskToToDoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToToDoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToToDoResponse) ProtoMessage() {}

func (x *TaskToToDoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToToDoResponse.ProtoReflect.Descriptor instead.
func (*TaskToToDoResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{23}
}

type TaskToInProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *TaskToInProgressRequest) Reset() {
	*x = TaskToInProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToInProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToInProgressRequest) ProtoMessage() {}

func (x *TaskToInProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToInProgressRequest.ProtoReflect.Descriptor instead.
func (*TaskToInProgressRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{24}
}

func (x *TaskToInProgressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskToInProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskToInProgressResponse) Reset() {
	*x = TaskToInProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToInProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToInProgressResponse) ProtoMessage() {}

func (x *TaskToInProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToInProgressResponse.ProtoReflect.Descriptor instead.
func (*TaskToInProgressResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{25}
}

type TaskToDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *TaskToDoneRequest) Reset() {
	*x = TaskToDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToDoneRequest) ProtoMessage() {}

func (x *TaskToDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToDoneRequest.ProtoReflect.Descriptor instead.
func (*TaskToDoneRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{26}
}

func (x *TaskToDoneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskToDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskToDoneResponse) Reset() {
	*x = TaskToDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToDoneResponse) ProtoMessage() {}

func (x *TaskToDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToDoneResponse.ProtoReflect.Descriptor instead.
func (*TaskToDoneResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{27}
}

type AssignTaskToUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"`                       // @gotags: validate:"uuid4"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *AssignTaskToUserRequest) Reset() {
	*x = AssignTaskToUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignTaskToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTaskToUserRequest) ProtoMessage() {}

func (x *AssignTaskToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTaskToUserRequest.ProtoReflect.Descriptor instead.
func (*AssignTaskToUserRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{28}
}

func (x *AssignTaskToUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssignTaskToUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AssignTaskToUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignTaskToUserResponse) Reset() {
	*x = AssignTaskToUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignTaskToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTaskToUserResponse) ProtoMessage() {}

func (x *AssignTaskToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTaskToUserResponse.ProtoReflect.Descriptor instead.
func (*AssignTaskToUserResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{29}
}

type UnassignTaskFromUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *UnassignTaskFromUserRequest) Reset() {
	*x = UnassignTaskFromUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignTaskFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignTaskFromUserRequest) ProtoMessage() {}

func (x *UnassignTaskFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignTaskFromUserRequest.ProtoReflect.Descriptor instead.
func (*UnassignTaskFromUserRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{30}
}

func (x *UnassignTaskFromUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnassignTaskFromUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnassignTaskFromUserResponse) Reset() {
	*x = UnassignTaskFromUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignTaskFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignTaskFromUserResponse) ProtoMessage() {}

func (x *UnassignTaskFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignTaskFromUserResponse.ProtoReflect.Descriptor instead.
func (*UnassignTaskFromUserResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{31}
}

type PublishTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *PublishTaskRequest) Reset() {
	*x = PublishTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTaskRequest) ProtoMessage() {}

func (x *PublishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTaskRequest.ProtoReflect.Descriptor instead.
func (*PublishTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{32}
}

func (x *PublishTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PublishTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishTaskResponse) Reset() {
	*x = PublishTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTaskResponse) ProtoMessage() {}

func (x *PublishTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTaskResponse.ProtoReflect.Descriptor instead.
func (*PublishTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{33}
}

type UnpublishTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *UnpublishTaskRequest) Reset() {
	*x = UnpublishTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishTaskRequest) ProtoMessage() {}

func (x *UnpublishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishTaskRequest.ProtoReflect.Descriptor instead.
func (*UnpublishTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{34}
}

func (x *UnpublishTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnpublishTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpublishTaskResponse) Reset() {
	*x = UnpublishTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishTaskResponse) ProtoMessage() {}

func (x *UnpublishTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishTaskResponse.ProtoReflect.Descriptor instead.
func (*UnpublishTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{35}
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTaskResponse) Reset() {
	*x = DeleteTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskResponse) ProtoMessage() {}

func (x *DeleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{37}
}

type GetTaskResponse_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Done      bool   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	CreatedBy string `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *GetTaskResponse_SubTask) Reset() {
	*x = GetTaskResponse_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse_SubTask) ProtoMessage() {}

func (x *GetTaskResponse_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse_SubTask.ProtoReflect.Descriptor instead.
func (*GetTaskResponse_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetTaskResponse_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTaskResponse_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTaskResponse_SubTask) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *GetTaskResponse_SubTask) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type GetTaskResponse_Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTaskResponse_Patient) Reset() {
	*x = GetTaskResponse_Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse_Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse_Patient) ProtoMessage() {}

func (x *GetTaskResponse_Patient) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse_Patient.ProtoReflect.Descriptor instead.
func (*GetTaskResponse_Patient) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetTaskResponse_Patient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTaskResponse_Patient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTasksByPatientResponse_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status         TaskStatus                                `protobuf:"varint,4,opt,name=status,proto3,enum=services.task_svc.v1.TaskStatus" json:"status,omitempty"`
	AssignedUserId *string                                   `protobuf:"bytes,5,opt,name=assigned_user_id,json=assignedUserId,proto3,oneof" json:"assigned_user_id,omitempty"`
	PatientId      string                                    `protobuf:"bytes,6,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Public         bool                                      `protobuf:"varint,7,opt,name=public,proto3" json:"public,omitempty"`
	DueAt          *timestamppb.Timestamp                    `protobuf:"bytes,8,opt,name=due_at,json=dueAt,proto3" json:"due_at,omitempty"`
	CreatedBy      string                                    `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Subtasks       []*GetTasksByPatientResponse_Task_SubTask `protobuf:"bytes,10,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetTasksByPatientResponse_Task) Reset() {
	*x = GetTasksByPatientResponse_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientResponse_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientResponse_Task) ProtoMessage() {}

func (x *GetTasksByPatientResponse_Task) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientResponse_Task.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientResponse_Task) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetTasksByPatientResponse_Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *GetTasksByPatientResponse_Task) GetAssignedUserId() string {
	if x != nil && x.AssignedUserId != nil {
		return *x.AssignedUserId
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *GetTasksByPatientResponse_Task) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *GetTasksByPatientResponse_Task) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task) GetSubtasks() []*GetTasksByPatientResponse_Task_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type GetTasksByPatientResponse_Task_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Done      bool   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	CreatedBy string `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *GetTasksByPatientResponse_Task_SubTask) Reset() {
	*x = GetTasksByPatientResponse_Task_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientResponse_Task_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientResponse_Task_SubTask) ProtoMessage() {}

func (x *GetTasksByPatientResponse_Task_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientResponse_Task_SubTask.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientResponse_Task_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *GetTasksByPatientResponse_Task_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTasksByPatientResponse_Task_SubTask) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *GetTasksByPatientResponse_Task_SubTask) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type GetTasksByPatientSortedByStatusResponse_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                                                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                                                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssignedUserId *string                                                 `protobuf:"bytes,5,opt,name=assigned_user_id,json=assignedUserId,proto3,oneof" json:"assigned_user_id,omitempty"`
	PatientId      string                                                  `protobuf:"bytes,6,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Public         bool                                                    `protobuf:"varint,7,opt,name=public,proto3" json:"public,omitempty"`
	DueAt          *timestamppb.Timestamp                                  `protobuf:"bytes,8,opt,name=due_at,json=dueAt,proto3" json:"due_at,omitempty"`
	CreatedBy      string                                                  `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Subtasks       []*GetTasksByPatientSortedByStatusResponse_Task_SubTask `protobuf:"bytes,10,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) Reset() {
	*x = GetTasksByPatientSortedByStatusResponse_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientSortedByStatusResponse_Task) ProtoMessage() {}

func (x *GetTasksByPatientSortedByStatusResponse_Task) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientSortedByStatusResponse_Task.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientSortedByStatusResponse_Task) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetAssignedUserId() string {
	if x != nil && x.AssignedUserId != nil {
		return *x.AssignedUserId
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task) GetSubtasks() []*GetTasksByPatientSortedByStatusResponse_Task_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type GetTasksByPatientSortedByStatusResponse_Task_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Done      bool   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	CreatedBy string `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) Reset() {
	*x = GetTasksByPatientSortedByStatusResponse_Task_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByPatientSortedByStatusResponse_Task_SubTask) ProtoMessage() {}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByPatientSortedByStatusResponse_Task_SubTask.ProtoReflect.Descriptor instead.
func (*GetTasksByPatientSortedByStatusResponse_Task_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *GetTasksByPatientSortedByStatusResponse_Task_SubTask) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type GetAssignedTasksResponse_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                                   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status         TaskStatus                               `protobuf:"varint,4,opt,name=status,proto3,enum=services.task_svc.v1.TaskStatus" json:"status,omitempty"`
	AssignedUserId string                                   `protobuf:"bytes,5,opt,name=assigned_user_id,json=assignedUserId,proto3" json:"assigned_user_id,omitempty"`
	Patient        *GetAssignedTasksResponse_Task_Patient   `protobuf:"bytes,6,opt,name=patient,proto3" json:"patient,omitempty"`
	Public         bool                                     `protobuf:"varint,7,opt,name=public,proto3" json:"public,omitempty"`
	DueAt          *timestamppb.Timestamp                   `protobuf:"bytes,8,opt,name=due_at,json=dueAt,proto3" json:"due_at,omitempty"`
	CreatedBy      string                                   `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Subtasks       []*GetAssignedTasksResponse_Task_SubTask `protobuf:"bytes,10,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetAssignedTasksResponse_Task) Reset() {
	*x = GetAssignedTasksResponse_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTasksResponse_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTasksResponse_Task) ProtoMessage() {}

func (x *GetAssignedTasksResponse_Task) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTasksResponse_Task.ProtoReflect.Descriptor instead.
func (*GetAssignedTasksResponse_Task) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetAssignedTasksResponse_Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *GetAssignedTasksResponse_Task) GetAssignedUserId() string {
	if x != nil {
		return x.AssignedUserId
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task) GetPatient() *GetAssignedTasksResponse_Task_Patient {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *GetAssignedTasksResponse_Task) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *GetAssignedTasksResponse_Task) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *GetAssignedTasksResponse_Task) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task) GetSubtasks() []*GetAssignedTasksResponse_Task_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type GetAssignedTasksResponse_Task_Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetAssignedTasksResponse_Task_Patient) Reset() {
	*x = GetAssignedTasksResponse_Task_Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTasksResponse_Task_Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTasksResponse_Task_Patient) ProtoMessage() {}

func (x *GetAssignedTasksResponse_Task_Patient) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTasksResponse_Task_Patient.ProtoReflect.Descriptor instead.
func (*GetAssignedTasksResponse_Task_Patient) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (x *GetAssignedTasksResponse_Task_Patient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task_Patient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAssignedTasksResponse_Task_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Done      bool   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	CreatedBy string `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *GetAssignedTasksResponse_Task_SubTask) Reset() {
	*x = GetAssignedTasksResponse_Task_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTasksResponse_Task_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTasksResponse_Task_SubTask) ProtoMessage() {}

func (x *GetAssignedTasksResponse_Task_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_svc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTasksResponse_Task_SubTask.ProtoReflect.Descriptor instead.
func (*GetAssignedTasksResponse_Task_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_svc_proto_rawDescGZIP(), []int{9, 0, 1}
}

func (x *GetAssignedTasksResponse_Task_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAssignedTasksResponse_Task_SubTask) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *GetAssignedTasksResponse_Task_SubTask) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

var File_services_task_svc_v1_task_svc_proto protoreflect.FileDescriptor

var file_services_task_svc_v1_task_svc_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x02, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xf3, 0x04, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x31, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x64, 0x75, 0x65,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x49, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x60, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x1a, 0x2d, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xf9, 0x04, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x8f, 0x04, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x75,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x58, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x60, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x47, 0x0a,
	0x26, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa4, 0x06, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x04, 0x74, 0x6f, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x42, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x6f, 0x64, 0x6f, 0x12, 0x63, 0x0a, 0x0b, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42,
	0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x0a, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x56, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x1a, 0xe3, 0x03, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x06,
	0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x66,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x60, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc3, 0x05, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x1a, 0xdb, 0x04, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x57, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x2d, 0x0a,
	0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x60, 0x0a, 0x07,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xe7,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x02, 0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x14,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x54, 0x6f, 0x44, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x6f, 0x54, 0x6f, 0x44, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a,
	0x14, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x54, 0x6f, 0x44, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x54, 0x6f, 0x44,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x6f, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x49, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x17, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x55,
	0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x6e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x15, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x55, 0x6e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x17, 0x0a, 0x15, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x72, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x4f,
	0x44, 0x4f, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x32, 0xb6, 0x10, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x75,
	0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x54,
	0x6f, 0x44, 0x6f, 0x12, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x6f, 0x54, 0x6f, 0x44, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f,
	0x54, 0x6f, 0x44, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x0d, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65, 0x12,
	0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f,
	0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x6f, 0x54, 0x6f, 0x44, 0x6f, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x54, 0x6f, 0x44, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x54,
	0x6f, 0x44, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a,
	0x10, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x49, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65,
	0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x14, 0x55, 0x6e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x0d, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0xb0, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x76, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x18, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x2d, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x54, 0x58, 0xaa, 0x02, 0x13,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x76, 0x63,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x76, 0x63, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_task_svc_v1_task_svc_proto_rawDescOnce sync.Once
	file_services_task_svc_v1_task_svc_proto_rawDescData = file_services_task_svc_v1_task_svc_proto_rawDesc
)

func file_services_task_svc_v1_task_svc_proto_rawDescGZIP() []byte {
	file_services_task_svc_v1_task_svc_proto_rawDescOnce.Do(func() {
		file_services_task_svc_v1_task_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_task_svc_v1_task_svc_proto_rawDescData)
	})
	return file_services_task_svc_v1_task_svc_proto_rawDescData
}

var file_services_task_svc_v1_task_svc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_services_task_svc_v1_task_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_services_task_svc_v1_task_svc_proto_goTypes = []interface{}{
	(TaskStatus)(0),                                              // 0: services.task_svc.v1.TaskStatus
	(*CreateTaskRequest)(nil),                                    // 1: services.task_svc.v1.CreateTaskRequest
	(*CreateTaskResponse)(nil),                                   // 2: services.task_svc.v1.CreateTaskResponse
	(*GetTaskRequest)(nil),                                       // 3: services.task_svc.v1.GetTaskRequest
	(*GetTaskResponse)(nil),                                      // 4: services.task_svc.v1.GetTaskResponse
	(*GetTasksByPatientRequest)(nil),                             // 5: services.task_svc.v1.GetTasksByPatientRequest
	(*GetTasksByPatientResponse)(nil),                            // 6: services.task_svc.v1.GetTasksByPatientResponse
	(*GetTasksByPatientSortedByStatusRequest)(nil),               // 7: services.task_svc.v1.GetTasksByPatientSortedByStatusRequest
	(*GetTasksByPatientSortedByStatusResponse)(nil),              // 8: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse
	(*GetAssignedTasksRequest)(nil),                              // 9: services.task_svc.v1.GetAssignedTasksRequest
	(*GetAssignedTasksResponse)(nil),                             // 10: services.task_svc.v1.GetAssignedTasksResponse
	(*UpdateTaskRequest)(nil),                                    // 11: services.task_svc.v1.UpdateTaskRequest
	(*UpdateTaskResponse)(nil),                                   // 12: services.task_svc.v1.UpdateTaskResponse
	(*AddSubTaskRequest)(nil),                                    // 13: services.task_svc.v1.AddSubTaskRequest
	(*AddSubTaskResponse)(nil),                                   // 14: services.task_svc.v1.AddSubTaskResponse
	(*RemoveSubTaskRequest)(nil),                                 // 15: services.task_svc.v1.RemoveSubTaskRequest
	(*RemoveSubTaskResponse)(nil),                                // 16: services.task_svc.v1.RemoveSubTaskResponse
	(*UpdateSubTaskRequest)(nil),                                 // 17: services.task_svc.v1.UpdateSubTaskRequest
	(*UpdateSubTaskResponse)(nil),                                // 18: services.task_svc.v1.UpdateSubTaskResponse
	(*SubTaskToToDoRequest)(nil),                                 // 19: services.task_svc.v1.SubTaskToToDoRequest
	(*SubTaskToToDoResponse)(nil),                                // 20: services.task_svc.v1.SubTaskToToDoResponse
	(*SubTaskToDoneRequest)(nil),                                 // 21: services.task_svc.v1.SubTaskToDoneRequest
	(*SubTaskToDoneResponse)(nil),                                // 22: services.task_svc.v1.SubTaskToDoneResponse
	(*TaskToToDoRequest)(nil),                                    // 23: services.task_svc.v1.TaskToToDoRequest
	(*TaskToToDoResponse)(nil),                                   // 24: services.task_svc.v1.TaskToToDoResponse
	(*TaskToInProgressRequest)(nil),                              // 25: services.task_svc.v1.TaskToInProgressRequest
	(*TaskToInProgressResponse)(nil),                             // 26: services.task_svc.v1.TaskToInProgressResponse
	(*TaskToDoneRequest)(nil),                                    // 27: services.task_svc.v1.TaskToDoneRequest
	(*TaskToDoneResponse)(nil),                                   // 28: services.task_svc.v1.TaskToDoneResponse
	(*AssignTaskToUserRequest)(nil),                              // 29: services.task_svc.v1.AssignTaskToUserRequest
	(*AssignTaskToUserResponse)(nil),                             // 30: services.task_svc.v1.AssignTaskToUserResponse
	(*UnassignTaskFromUserRequest)(nil),                          // 31: services.task_svc.v1.UnassignTaskFromUserRequest
	(*UnassignTaskFromUserResponse)(nil),                         // 32: services.task_svc.v1.UnassignTaskFromUserResponse
	(*PublishTaskRequest)(nil),                                   // 33: services.task_svc.v1.PublishTaskRequest
	(*PublishTaskResponse)(nil),                                  // 34: services.task_svc.v1.PublishTaskResponse
	(*UnpublishTaskRequest)(nil),                                 // 35: services.task_svc.v1.UnpublishTaskRequest
	(*UnpublishTaskResponse)(nil),                                // 36: services.task_svc.v1.UnpublishTaskResponse
	(*DeleteTaskRequest)(nil),                                    // 37: services.task_svc.v1.DeleteTaskRequest
	(*DeleteTaskResponse)(nil),                                   // 38: services.task_svc.v1.DeleteTaskResponse
	(*GetTaskResponse_SubTask)(nil),                              // 39: services.task_svc.v1.GetTaskResponse.SubTask
	(*GetTaskResponse_Patient)(nil),                              // 40: services.task_svc.v1.GetTaskResponse.Patient
	(*GetTasksByPatientResponse_Task)(nil),                       // 41: services.task_svc.v1.GetTasksByPatientResponse.Task
	(*GetTasksByPatientResponse_Task_SubTask)(nil),               // 42: services.task_svc.v1.GetTasksByPatientResponse.Task.SubTask
	(*GetTasksByPatientSortedByStatusResponse_Task)(nil),         // 43: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task
	(*GetTasksByPatientSortedByStatusResponse_Task_SubTask)(nil), // 44: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task.SubTask
	(*GetAssignedTasksResponse_Task)(nil),                        // 45: services.task_svc.v1.GetAssignedTasksResponse.Task
	(*GetAssignedTasksResponse_Task_Patient)(nil),                // 46: services.task_svc.v1.GetAssignedTasksResponse.Task.Patient
	(*GetAssignedTasksResponse_Task_SubTask)(nil),                // 47: services.task_svc.v1.GetAssignedTasksResponse.Task.SubTask
	(*timestamppb.Timestamp)(nil),                                // 48: google.protobuf.Timestamp
}
var file_services_task_svc_v1_task_svc_proto_depIdxs = []int32{
	48, // 0: services.task_svc.v1.CreateTaskRequest.due_at:type_name -> google.protobuf.Timestamp
	0,  // 1: services.task_svc.v1.CreateTaskRequest.initial_status:type_name -> services.task_svc.v1.TaskStatus
	0,  // 2: services.task_svc.v1.GetTaskResponse.status:type_name -> services.task_svc.v1.TaskStatus
	40, // 3: services.task_svc.v1.GetTaskResponse.patient:type_name -> services.task_svc.v1.GetTaskResponse.Patient
	48, // 4: services.task_svc.v1.GetTaskResponse.due_at:type_name -> google.protobuf.Timestamp
	39, // 5: services.task_svc.v1.GetTaskResponse.subtasks:type_name -> services.task_svc.v1.GetTaskResponse.SubTask
	41, // 6: services.task_svc.v1.GetTasksByPatientResponse.tasks:type_name -> services.task_svc.v1.GetTasksByPatientResponse.Task
	43, // 7: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.todo:type_name -> services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task
	43, // 8: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.in_progress:type_name -> services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task
	43, // 9: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.done:type_name -> services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task
	45, // 10: services.task_svc.v1.GetAssignedTasksResponse.tasks:type_name -> services.task_svc.v1.GetAssignedTasksResponse.Task
	48, // 11: services.task_svc.v1.UpdateTaskRequest.due_at:type_name -> google.protobuf.Timestamp
	0,  // 12: services.task_svc.v1.GetTasksByPatientResponse.Task.status:type_name -> services.task_svc.v1.TaskStatus
	48, // 13: services.task_svc.v1.GetTasksByPatientResponse.Task.due_at:type_name -> google.protobuf.Timestamp
	42, // 14: services.task_svc.v1.GetTasksByPatientResponse.Task.subtasks:type_name -> services.task_svc.v1.GetTasksByPatientResponse.Task.SubTask
	48, // 15: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task.due_at:type_name -> google.protobuf.Timestamp
	44, // 16: services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task.subtasks:type_name -> services.task_svc.v1.GetTasksByPatientSortedByStatusResponse.Task.SubTask
	0,  // 17: services.task_svc.v1.GetAssignedTasksResponse.Task.status:type_name -> services.task_svc.v1.TaskStatus
	46, // 18: services.task_svc.v1.GetAssignedTasksResponse.Task.patient:type_name -> services.task_svc.v1.GetAssignedTasksResponse.Task.Patient
	48, // 19: services.task_svc.v1.GetAssignedTasksResponse.Task.due_at:type_name -> google.protobuf.Timestamp
	47, // 20: services.task_svc.v1.GetAssignedTasksResponse.Task.subtasks:type_name -> services.task_svc.v1.GetAssignedTasksResponse.Task.SubTask
	1,  // 21: services.task_svc.v1.TaskService.CreateTask:input_type -> services.task_svc.v1.CreateTaskRequest
	3,  // 22: services.task_svc.v1.TaskService.GetTask:input_type -> services.task_svc.v1.GetTaskRequest
	5,  // 23: services.task_svc.v1.TaskService.GetTasksByPatient:input_type -> services.task_svc.v1.GetTasksByPatientRequest
	7,  // 24: services.task_svc.v1.TaskService.GetTasksByPatientSortedByStatus:input_type -> services.task_svc.v1.GetTasksByPatientSortedByStatusRequest
	9,  // 25: services.task_svc.v1.TaskService.GetAssignedTasks:input_type -> services.task_svc.v1.GetAssignedTasksRequest
	11, // 26: services.task_svc.v1.TaskService.UpdateTask:input_type -> services.task_svc.v1.UpdateTaskRequest
	13, // 27: services.task_svc.v1.TaskService.AddSubTask:input_type -> services.task_svc.v1.AddSubTaskRequest
	15, // 28: services.task_svc.v1.TaskService.RemoveSubTask:input_type -> services.task_svc.v1.RemoveSubTaskRequest
	17, // 29: services.task_svc.v1.TaskService.UpdateSubTask:input_type -> services.task_svc.v1.UpdateSubTaskRequest
	19, // 30: services.task_svc.v1.TaskService.SubTaskToToDo:input_type -> services.task_svc.v1.SubTaskToToDoRequest
	21, // 31: services.task_svc.v1.TaskService.SubTaskToDone:input_type -> services.task_svc.v1.SubTaskToDoneRequest
	23, // 32: services.task_svc.v1.TaskService.TaskToToDo:input_type -> services.task_svc.v1.TaskToToDoRequest
	25, // 33: services.task_svc.v1.TaskService.TaskToInProgress:input_type -> services.task_svc.v1.TaskToInProgressRequest
	27, // 34: services.task_svc.v1.TaskService.TaskToDone:input_type -> services.task_svc.v1.TaskToDoneRequest
	29, // 35: services.task_svc.v1.TaskService.AssignTaskToUser:input_type -> services.task_svc.v1.AssignTaskToUserRequest
	31, // 36: services.task_svc.v1.TaskService.UnassignTaskFromUser:input_type -> services.task_svc.v1.UnassignTaskFromUserRequest
	33, // 37: services.task_svc.v1.TaskService.PublishTask:input_type -> services.task_svc.v1.PublishTaskRequest
	35, // 38: services.task_svc.v1.TaskService.UnpublishTask:input_type -> services.task_svc.v1.UnpublishTaskRequest
	37, // 39: services.task_svc.v1.TaskService.DeleteTask:input_type -> services.task_svc.v1.DeleteTaskRequest
	2,  // 40: services.task_svc.v1.TaskService.CreateTask:output_type -> services.task_svc.v1.CreateTaskResponse
	4,  // 41: services.task_svc.v1.TaskService.GetTask:output_type -> services.task_svc.v1.GetTaskResponse
	6,  // 42: services.task_svc.v1.TaskService.GetTasksByPatient:output_type -> services.task_svc.v1.GetTasksByPatientResponse
	8,  // 43: services.task_svc.v1.TaskService.GetTasksByPatientSortedByStatus:output_type -> services.task_svc.v1.GetTasksByPatientSortedByStatusResponse
	10, // 44: services.task_svc.v1.TaskService.GetAssignedTasks:output_type -> services.task_svc.v1.GetAssignedTasksResponse
	12, // 45: services.task_svc.v1.TaskService.UpdateTask:output_type -> services.task_svc.v1.UpdateTaskResponse
	14, // 46: services.task_svc.v1.TaskService.AddSubTask:output_type -> services.task_svc.v1.AddSubTaskResponse
	16, // 47: services.task_svc.v1.TaskService.RemoveSubTask:output_type -> services.task_svc.v1.RemoveSubTaskResponse
	18, // 48: services.task_svc.v1.TaskService.UpdateSubTask:output_type -> services.task_svc.v1.UpdateSubTaskResponse
	20, // 49: services.task_svc.v1.TaskService.SubTaskToToDo:output_type -> services.task_svc.v1.SubTaskToToDoResponse
	22, // 50: services.task_svc.v1.TaskService.SubTaskToDone:output_type -> services.task_svc.v1.SubTaskToDoneResponse
	24, // 51: services.task_svc.v1.TaskService.TaskToToDo:output_type -> services.task_svc.v1.TaskToToDoResponse
	26, // 52: services.task_svc.v1.TaskService.TaskToInProgress:output_type -> services.task_svc.v1.TaskToInProgressResponse
	28, // 53: services.task_svc.v1.TaskService.TaskToDone:output_type -> services.task_svc.v1.TaskToDoneResponse
	30, // 54: services.task_svc.v1.TaskService.AssignTaskToUser:output_type -> services.task_svc.v1.AssignTaskToUserResponse
	32, // 55: services.task_svc.v1.TaskService.UnassignTaskFromUser:output_type -> services.task_svc.v1.UnassignTaskFromUserResponse
	34, // 56: services.task_svc.v1.TaskService.PublishTask:output_type -> services.task_svc.v1.PublishTaskResponse
	36, // 57: services.task_svc.v1.TaskService.UnpublishTask:output_type -> services.task_svc.v1.UnpublishTaskResponse
	38, // 58: services.task_svc.v1.TaskService.DeleteTask:output_type -> services.task_svc.v1.DeleteTaskResponse
	40, // [40:59] is the sub-list for method output_type
	21, // [21:40] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_services_task_svc_v1_task_svc_proto_init() }
func file_services_task_svc_v1_task_svc_proto_init() {
	if File_services_task_svc_v1_task_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_task_svc_v1_task_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientSortedByStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientSortedByStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTaskToToDoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTaskToToDoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTaskToDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTaskToDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToToDoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToToDoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToInProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToInProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignTaskToUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignTaskToUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignTaskFromUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignTaskFromUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskResponse_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskResponse_Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientResponse_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientResponse_Task_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientSortedByStatusResponse_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByPatientSortedByStatusResponse_Task_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTasksResponse_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTasksResponse_Task_Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_svc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTasksResponse_Task_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_task_svc_v1_task_svc_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_svc_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_svc_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_svc_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_svc_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_svc_proto_msgTypes[42].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_task_svc_v1_task_svc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_task_svc_v1_task_svc_proto_goTypes,
		DependencyIndexes: file_services_task_svc_v1_task_svc_proto_depIdxs,
		EnumInfos:         file_services_task_svc_v1_task_svc_proto_enumTypes,
		MessageInfos:      file_services_task_svc_v1_task_svc_proto_msgTypes,
	}.Build()
	File_services_task_svc_v1_task_svc_proto = out.File
	file_services_task_svc_v1_task_svc_proto_rawDesc = nil
	file_services_task_svc_v1_task_svc_proto_goTypes = nil
	file_services_task_svc_v1_task_svc_proto_depIdxs = nil
}
