// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: services/task_svc/v1/task_template_svc.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required"` // @gotags: validate:"required"
	Description *string                              `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	WardId      *string                              `protobuf:"bytes,4,opt,name=ward_id,json=wardId,proto3,oneof" json:"ward_id,omitempty"`
	Subtasks    []*CreateTaskTemplateRequest_SubTask `protobuf:"bytes,5,rep,name=subtasks,proto3" json:"subtasks,omitempty"` // When passed, every subtask is a seperate entity
}

func (x *CreateTaskTemplateRequest) Reset() {
	*x = CreateTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateRequest) ProtoMessage() {}

func (x *CreateTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTaskTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetWardId() string {
	if x != nil && x.WardId != nil {
		return *x.WardId
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetSubtasks() []*CreateTaskTemplateRequest_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type CreateTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTaskTemplateResponse) Reset() {
	*x = CreateTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateResponse) ProtoMessage() {}

func (x *CreateTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskTemplateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllTaskTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTaskTemplatesRequest) Reset() {
	*x = GetAllTaskTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesRequest) ProtoMessage() {}

func (x *GetAllTaskTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{2}
}

type GetAllTaskTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*GetAllTaskTemplatesResponse_TaskTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
}

func (x *GetAllTaskTemplatesResponse) Reset() {
	*x = GetAllTaskTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesResponse) ProtoMessage() {}

func (x *GetAllTaskTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllTaskTemplatesResponse) GetTemplates() []*GetAllTaskTemplatesResponse_TaskTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type DeleteTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *DeleteTaskTemplateRequest) Reset() {
	*x = DeleteTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskTemplateRequest) ProtoMessage() {}

func (x *DeleteTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTaskTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTaskTemplateResponse) Reset() {
	*x = DeleteTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskTemplateResponse) ProtoMessage() {}

func (x *DeleteTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{5}
}

type DeleteTaskTemplateSubTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
}

func (x *DeleteTaskTemplateSubTaskRequest) Reset() {
	*x = DeleteTaskTemplateSubTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskTemplateSubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskTemplateSubTaskRequest) ProtoMessage() {}

func (x *DeleteTaskTemplateSubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskTemplateSubTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskTemplateSubTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteTaskTemplateSubTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTaskTemplateSubTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTaskTemplateSubTaskResponse) Reset() {
	*x = DeleteTaskTemplateSubTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskTemplateSubTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskTemplateSubTaskResponse) ProtoMessage() {}

func (x *DeleteTaskTemplateSubTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskTemplateSubTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskTemplateSubTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{7}
}

type UpdateTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"required"` // @gotags: validate:"required"
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UpdateTaskTemplateRequest) Reset() {
	*x = UpdateTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskTemplateRequest) ProtoMessage() {}

func (x *UpdateTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTaskTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdateTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTaskTemplateResponse) Reset() {
	*x = UpdateTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskTemplateResponse) ProtoMessage() {}

func (x *UpdateTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{9}
}

type UpdateTaskTemplateSubTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubtaskId string  `protobuf:"bytes,1,opt,name=subtask_id,json=subtaskId,proto3" json:"subtask_id,omitempty" validate:"required"` // @gotags: validate:"required"
	Name      *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *UpdateTaskTemplateSubTaskRequest) Reset() {
	*x = UpdateTaskTemplateSubTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskTemplateSubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskTemplateSubTaskRequest) ProtoMessage() {}

func (x *UpdateTaskTemplateSubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskTemplateSubTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskTemplateSubTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTaskTemplateSubTaskRequest) GetSubtaskId() string {
	if x != nil {
		return x.SubtaskId
	}
	return ""
}

func (x *UpdateTaskTemplateSubTaskRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateTaskTemplateSubTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTaskTemplateSubTaskResponse) Reset() {
	*x = UpdateTaskTemplateSubTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskTemplateSubTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskTemplateSubTaskResponse) ProtoMessage() {}

func (x *UpdateTaskTemplateSubTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskTemplateSubTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskTemplateSubTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{11}
}

type CreateTaskTemplateSubTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskTemplateId string `protobuf:"bytes,1,opt,name=task_template_id,json=taskTemplateId,proto3" json:"task_template_id,omitempty" validate:"required"` // @gotags: validate:"required"
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validate:"required"`                                             // @gotags: validate:"required"
}

func (x *CreateTaskTemplateSubTaskRequest) Reset() {
	*x = CreateTaskTemplateSubTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateSubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateSubTaskRequest) ProtoMessage() {}

func (x *CreateTaskTemplateSubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateSubTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateSubTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTaskTemplateSubTaskRequest) GetTaskTemplateId() string {
	if x != nil {
		return x.TaskTemplateId
	}
	return ""
}

func (x *CreateTaskTemplateSubTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateTaskTemplateSubTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTaskTemplateSubTaskResponse) Reset() {
	*x = CreateTaskTemplateSubTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateSubTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateSubTaskResponse) ProtoMessage() {}

func (x *CreateTaskTemplateSubTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateSubTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateSubTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTaskTemplateSubTaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllTaskTemplatesByCreatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedBy   string `protobuf:"bytes,1,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	PrivateOnly *bool  `protobuf:"varint,2,opt,name=private_only,json=privateOnly,proto3,oneof" json:"private_only,omitempty"`
}

func (x *GetAllTaskTemplatesByCreatorRequest) Reset() {
	*x = GetAllTaskTemplatesByCreatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByCreatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByCreatorRequest) ProtoMessage() {}

func (x *GetAllTaskTemplatesByCreatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByCreatorRequest.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByCreatorRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{14}
}

func (x *GetAllTaskTemplatesByCreatorRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetAllTaskTemplatesByCreatorRequest) GetPrivateOnly() bool {
	if x != nil && x.PrivateOnly != nil {
		return *x.PrivateOnly
	}
	return false
}

type GetAllTaskTemplatesByCreatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*GetAllTaskTemplatesByCreatorResponse_TaskTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
}

func (x *GetAllTaskTemplatesByCreatorResponse) Reset() {
	*x = GetAllTaskTemplatesByCreatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByCreatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByCreatorResponse) ProtoMessage() {}

func (x *GetAllTaskTemplatesByCreatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByCreatorResponse.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByCreatorResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{15}
}

func (x *GetAllTaskTemplatesByCreatorResponse) GetTemplates() []*GetAllTaskTemplatesByCreatorResponse_TaskTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type GetAllTaskTemplatesByWardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WardId string `protobuf:"bytes,1,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
}

func (x *GetAllTaskTemplatesByWardRequest) Reset() {
	*x = GetAllTaskTemplatesByWardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByWardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByWardRequest) ProtoMessage() {}

func (x *GetAllTaskTemplatesByWardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByWardRequest.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByWardRequest) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{16}
}

func (x *GetAllTaskTemplatesByWardRequest) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

type GetAllTaskTemplatesByWardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*GetAllTaskTemplatesByWardResponse_TaskTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
}

func (x *GetAllTaskTemplatesByWardResponse) Reset() {
	*x = GetAllTaskTemplatesByWardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByWardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByWardResponse) ProtoMessage() {}

func (x *GetAllTaskTemplatesByWardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByWardResponse.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByWardResponse) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllTaskTemplatesByWardResponse) GetTemplates() []*GetAllTaskTemplatesByWardResponse_TaskTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type CreateTaskTemplateRequest_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTaskTemplateRequest_SubTask) Reset() {
	*x = CreateTaskTemplateRequest_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateRequest_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateRequest_SubTask) ProtoMessage() {}

func (x *CreateTaskTemplateRequest_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateRequest_SubTask.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateRequest_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreateTaskTemplateRequest_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllTaskTemplatesResponse_TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                                              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPublic    bool                                                `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	CreatedBy   string                                              `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Subtasks    []*GetAllTaskTemplatesResponse_TaskTemplate_SubTask `protobuf:"bytes,7,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) Reset() {
	*x = GetAllTaskTemplatesResponse_TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesResponse_TaskTemplate) ProtoMessage() {}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesResponse_TaskTemplate.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesResponse_TaskTemplate) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate) GetSubtasks() []*GetAllTaskTemplatesResponse_TaskTemplate_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type GetAllTaskTemplatesResponse_TaskTemplate_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskTemplateId string `protobuf:"bytes,2,opt,name=task_template_id,json=taskTemplateId,proto3" json:"task_template_id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate_SubTask) Reset() {
	*x = GetAllTaskTemplatesResponse_TaskTemplate_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesResponse_TaskTemplate_SubTask) ProtoMessage() {}

func (x *GetAllTaskTemplatesResponse_TaskTemplate_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesResponse_TaskTemplate_SubTask.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesResponse_TaskTemplate_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate_SubTask) GetTaskTemplateId() string {
	if x != nil {
		return x.TaskTemplateId
	}
	return ""
}

func (x *GetAllTaskTemplatesResponse_TaskTemplate_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllTaskTemplatesByCreatorResponse_TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                                                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                                                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                                       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPublic    bool                                                         `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Subtasks    []*GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask `protobuf:"bytes,7,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) Reset() {
	*x = GetAllTaskTemplatesByCreatorResponse_TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByCreatorResponse_TaskTemplate) ProtoMessage() {}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByCreatorResponse_TaskTemplate.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByCreatorResponse_TaskTemplate) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate) GetSubtasks() []*GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskTemplateId string `protobuf:"bytes,2,opt,name=task_template_id,json=taskTemplateId,proto3" json:"task_template_id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) Reset() {
	*x = GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) ProtoMessage() {}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{15, 0, 0}
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) GetTaskTemplateId() string {
	if x != nil {
		return x.TaskTemplateId
	}
	return ""
}

func (x *GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllTaskTemplatesByWardResponse_TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                                                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                                                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPublic    bool                                                      `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	CreatedBy   string                                                    `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Subtasks    []*GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask `protobuf:"bytes,7,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) Reset() {
	*x = GetAllTaskTemplatesByWardResponse_TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByWardResponse_TaskTemplate) ProtoMessage() {}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByWardResponse_TaskTemplate.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByWardResponse_TaskTemplate) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{17, 0}
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate) GetSubtasks() []*GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

type GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskTemplateId string `protobuf:"bytes,2,opt,name=task_template_id,json=taskTemplateId,proto3" json:"task_template_id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) Reset() {
	*x = GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) ProtoMessage() {}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) ProtoReflect() protoreflect.Message {
	mi := &file_services_task_svc_v1_task_template_svc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask.ProtoReflect.Descriptor instead.
func (*GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) Descriptor() ([]byte, []int) {
	return file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP(), []int{17, 0, 0}
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) GetTaskTemplateId() string {
	if x != nil {
		return x.TaskTemplateId
	}
	return ""
}

func (x *GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_services_task_svc_v1_task_template_svc_proto protoreflect.FileDescriptor

var file_services_task_svc_v1_task_template_svc_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x22, 0x84, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x1a, 0x1d, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcb, 0x03, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x1a, 0xcd, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x62, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x57, 0x0a, 0x07,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63,
	0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x21, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x7d, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0xc7,
	0x03, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x1a, 0xb7,
	0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x6b, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a,
	0x57, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xdd, 0x03, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x57,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x57, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x1a,
	0xd3, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x68, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x57, 0x0a, 0x07,
	0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xe2, 0x09, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x30, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8e, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x36, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x79, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x36, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e,
	0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x36, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x97, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x39, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x42, 0x79, 0x57, 0x61, 0x72, 0x64, 0x12, 0x36, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x42, 0x79, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x57, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xb8, 0x01, 0x0a, 0x18, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x76, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x18, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x2d, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x54, 0x58, 0xaa,
	0x02, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x76, 0x63, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x76,
	0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_task_svc_v1_task_template_svc_proto_rawDescOnce sync.Once
	file_services_task_svc_v1_task_template_svc_proto_rawDescData = file_services_task_svc_v1_task_template_svc_proto_rawDesc
)

func file_services_task_svc_v1_task_template_svc_proto_rawDescGZIP() []byte {
	file_services_task_svc_v1_task_template_svc_proto_rawDescOnce.Do(func() {
		file_services_task_svc_v1_task_template_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_task_svc_v1_task_template_svc_proto_rawDescData)
	})
	return file_services_task_svc_v1_task_template_svc_proto_rawDescData
}

var file_services_task_svc_v1_task_template_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_services_task_svc_v1_task_template_svc_proto_goTypes = []interface{}{
	(*CreateTaskTemplateRequest)(nil),                                 // 0: services.task_svc.v1.CreateTaskTemplateRequest
	(*CreateTaskTemplateResponse)(nil),                                // 1: services.task_svc.v1.CreateTaskTemplateResponse
	(*GetAllTaskTemplatesRequest)(nil),                                // 2: services.task_svc.v1.GetAllTaskTemplatesRequest
	(*GetAllTaskTemplatesResponse)(nil),                               // 3: services.task_svc.v1.GetAllTaskTemplatesResponse
	(*DeleteTaskTemplateRequest)(nil),                                 // 4: services.task_svc.v1.DeleteTaskTemplateRequest
	(*DeleteTaskTemplateResponse)(nil),                                // 5: services.task_svc.v1.DeleteTaskTemplateResponse
	(*DeleteTaskTemplateSubTaskRequest)(nil),                          // 6: services.task_svc.v1.DeleteTaskTemplateSubTaskRequest
	(*DeleteTaskTemplateSubTaskResponse)(nil),                         // 7: services.task_svc.v1.DeleteTaskTemplateSubTaskResponse
	(*UpdateTaskTemplateRequest)(nil),                                 // 8: services.task_svc.v1.UpdateTaskTemplateRequest
	(*UpdateTaskTemplateResponse)(nil),                                // 9: services.task_svc.v1.UpdateTaskTemplateResponse
	(*UpdateTaskTemplateSubTaskRequest)(nil),                          // 10: services.task_svc.v1.UpdateTaskTemplateSubTaskRequest
	(*UpdateTaskTemplateSubTaskResponse)(nil),                         // 11: services.task_svc.v1.UpdateTaskTemplateSubTaskResponse
	(*CreateTaskTemplateSubTaskRequest)(nil),                          // 12: services.task_svc.v1.CreateTaskTemplateSubTaskRequest
	(*CreateTaskTemplateSubTaskResponse)(nil),                         // 13: services.task_svc.v1.CreateTaskTemplateSubTaskResponse
	(*GetAllTaskTemplatesByCreatorRequest)(nil),                       // 14: services.task_svc.v1.GetAllTaskTemplatesByCreatorRequest
	(*GetAllTaskTemplatesByCreatorResponse)(nil),                      // 15: services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse
	(*GetAllTaskTemplatesByWardRequest)(nil),                          // 16: services.task_svc.v1.GetAllTaskTemplatesByWardRequest
	(*GetAllTaskTemplatesByWardResponse)(nil),                         // 17: services.task_svc.v1.GetAllTaskTemplatesByWardResponse
	(*CreateTaskTemplateRequest_SubTask)(nil),                         // 18: services.task_svc.v1.CreateTaskTemplateRequest.SubTask
	(*GetAllTaskTemplatesResponse_TaskTemplate)(nil),                  // 19: services.task_svc.v1.GetAllTaskTemplatesResponse.TaskTemplate
	(*GetAllTaskTemplatesResponse_TaskTemplate_SubTask)(nil),          // 20: services.task_svc.v1.GetAllTaskTemplatesResponse.TaskTemplate.SubTask
	(*GetAllTaskTemplatesByCreatorResponse_TaskTemplate)(nil),         // 21: services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse.TaskTemplate
	(*GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask)(nil), // 22: services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse.TaskTemplate.SubTask
	(*GetAllTaskTemplatesByWardResponse_TaskTemplate)(nil),            // 23: services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate
	(*GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask)(nil),    // 24: services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask
}
var file_services_task_svc_v1_task_template_svc_proto_depIdxs = []int32{
	18, // 0: services.task_svc.v1.CreateTaskTemplateRequest.subtasks:type_name -> services.task_svc.v1.CreateTaskTemplateRequest.SubTask
	19, // 1: services.task_svc.v1.GetAllTaskTemplatesResponse.templates:type_name -> services.task_svc.v1.GetAllTaskTemplatesResponse.TaskTemplate
	21, // 2: services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse.templates:type_name -> services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse.TaskTemplate
	23, // 3: services.task_svc.v1.GetAllTaskTemplatesByWardResponse.templates:type_name -> services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate
	20, // 4: services.task_svc.v1.GetAllTaskTemplatesResponse.TaskTemplate.subtasks:type_name -> services.task_svc.v1.GetAllTaskTemplatesResponse.TaskTemplate.SubTask
	22, // 5: services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse.TaskTemplate.subtasks:type_name -> services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse.TaskTemplate.SubTask
	24, // 6: services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.subtasks:type_name -> services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask
	0,  // 7: services.task_svc.v1.TaskTemplateService.CreateTaskTemplate:input_type -> services.task_svc.v1.CreateTaskTemplateRequest
	2,  // 8: services.task_svc.v1.TaskTemplateService.GetAllTaskTemplates:input_type -> services.task_svc.v1.GetAllTaskTemplatesRequest
	4,  // 9: services.task_svc.v1.TaskTemplateService.DeleteTaskTemplate:input_type -> services.task_svc.v1.DeleteTaskTemplateRequest
	6,  // 10: services.task_svc.v1.TaskTemplateService.DeleteTaskTemplateSubTask:input_type -> services.task_svc.v1.DeleteTaskTemplateSubTaskRequest
	8,  // 11: services.task_svc.v1.TaskTemplateService.UpdateTaskTemplate:input_type -> services.task_svc.v1.UpdateTaskTemplateRequest
	10, // 12: services.task_svc.v1.TaskTemplateService.UpdateTaskTemplateSubTask:input_type -> services.task_svc.v1.UpdateTaskTemplateSubTaskRequest
	12, // 13: services.task_svc.v1.TaskTemplateService.CreateTaskTemplateSubTask:input_type -> services.task_svc.v1.CreateTaskTemplateSubTaskRequest
	14, // 14: services.task_svc.v1.TaskTemplateService.GetAllTaskTemplatesByCreator:input_type -> services.task_svc.v1.GetAllTaskTemplatesByCreatorRequest
	16, // 15: services.task_svc.v1.TaskTemplateService.GetAllTaskTemplatesByWard:input_type -> services.task_svc.v1.GetAllTaskTemplatesByWardRequest
	1,  // 16: services.task_svc.v1.TaskTemplateService.CreateTaskTemplate:output_type -> services.task_svc.v1.CreateTaskTemplateResponse
	3,  // 17: services.task_svc.v1.TaskTemplateService.GetAllTaskTemplates:output_type -> services.task_svc.v1.GetAllTaskTemplatesResponse
	5,  // 18: services.task_svc.v1.TaskTemplateService.DeleteTaskTemplate:output_type -> services.task_svc.v1.DeleteTaskTemplateResponse
	7,  // 19: services.task_svc.v1.TaskTemplateService.DeleteTaskTemplateSubTask:output_type -> services.task_svc.v1.DeleteTaskTemplateSubTaskResponse
	9,  // 20: services.task_svc.v1.TaskTemplateService.UpdateTaskTemplate:output_type -> services.task_svc.v1.UpdateTaskTemplateResponse
	11, // 21: services.task_svc.v1.TaskTemplateService.UpdateTaskTemplateSubTask:output_type -> services.task_svc.v1.UpdateTaskTemplateSubTaskResponse
	13, // 22: services.task_svc.v1.TaskTemplateService.CreateTaskTemplateSubTask:output_type -> services.task_svc.v1.CreateTaskTemplateSubTaskResponse
	15, // 23: services.task_svc.v1.TaskTemplateService.GetAllTaskTemplatesByCreator:output_type -> services.task_svc.v1.GetAllTaskTemplatesByCreatorResponse
	17, // 24: services.task_svc.v1.TaskTemplateService.GetAllTaskTemplatesByWard:output_type -> services.task_svc.v1.GetAllTaskTemplatesByWardResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_services_task_svc_v1_task_template_svc_proto_init() }
func file_services_task_svc_v1_task_template_svc_proto_init() {
	if File_services_task_svc_v1_task_template_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskTemplateSubTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskTemplateSubTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskTemplateSubTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskTemplateSubTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateSubTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateSubTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByCreatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByCreatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByWardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByWardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateRequest_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesResponse_TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesResponse_TaskTemplate_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByCreatorResponse_TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByCreatorResponse_TaskTemplate_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByWardResponse_TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_task_svc_v1_task_template_svc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTaskTemplatesByWardResponse_TaskTemplate_SubTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_task_svc_v1_task_template_svc_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_template_svc_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_template_svc_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_services_task_svc_v1_task_template_svc_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_task_svc_v1_task_template_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_task_svc_v1_task_template_svc_proto_goTypes,
		DependencyIndexes: file_services_task_svc_v1_task_template_svc_proto_depIdxs,
		MessageInfos:      file_services_task_svc_v1_task_template_svc_proto_msgTypes,
	}.Build()
	File_services_task_svc_v1_task_template_svc_proto = out.File
	file_services_task_svc_v1_task_template_svc_proto_rawDesc = nil
	file_services_task_svc_v1_task_template_svc_proto_goTypes = nil
	file_services_task_svc_v1_task_template_svc_proto_depIdxs = nil
}
