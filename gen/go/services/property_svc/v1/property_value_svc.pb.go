// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: services/property_svc/v1/property_value_svc.proto

package property_svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AttachPropertyValueRequest
type AttachPropertyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId  string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty" validate:"uuid4"`    // @gotags: validate:"uuid4"
	PropertyId string `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty" validate:"uuid4"` // @gotags: validate:"uuid4"
	// Types that are assignable to Value:
	//
	//	*AttachPropertyValueRequest_TextValue
	//	*AttachPropertyValueRequest_NumberValue
	//	*AttachPropertyValueRequest_BoolValue
	//	*AttachPropertyValueRequest_DateValue
	//	*AttachPropertyValueRequest_DateTimeValue
	//	*AttachPropertyValueRequest_SelectValue
	Value isAttachPropertyValueRequest_Value `protobuf_oneof:"value"`
}

func (x *AttachPropertyValueRequest) Reset() {
	*x = AttachPropertyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachPropertyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachPropertyValueRequest) ProtoMessage() {}

func (x *AttachPropertyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachPropertyValueRequest.ProtoReflect.Descriptor instead.
func (*AttachPropertyValueRequest) Descriptor() ([]byte, []int) {
	return file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP(), []int{0}
}

func (x *AttachPropertyValueRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (m *AttachPropertyValueRequest) GetValue() isAttachPropertyValueRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AttachPropertyValueRequest) GetTextValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *AttachPropertyValueRequest) GetNumberValue() float64 {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *AttachPropertyValueRequest) GetBoolValue() bool {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *AttachPropertyValueRequest) GetDateValue() *Date {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_DateValue); ok {
		return x.DateValue
	}
	return nil
}

func (x *AttachPropertyValueRequest) GetDateTimeValue() *timestamppb.Timestamp {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_DateTimeValue); ok {
		return x.DateTimeValue
	}
	return nil
}

func (x *AttachPropertyValueRequest) GetSelectValue() string {
	if x, ok := x.GetValue().(*AttachPropertyValueRequest_SelectValue); ok {
		return x.SelectValue
	}
	return ""
}

type isAttachPropertyValueRequest_Value interface {
	isAttachPropertyValueRequest_Value()
}

type AttachPropertyValueRequest_TextValue struct {
	TextValue string `protobuf:"bytes,3,opt,name=text_value,json=textValue,proto3,oneof" validate:"required"` // @gotags: validate:"required" // FIELD_TYPE_TEXT
}

type AttachPropertyValueRequest_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,4,opt,name=number_value,json=numberValue,proto3,oneof"` // FIELD_TYPE_NUMBER
}

type AttachPropertyValueRequest_BoolValue struct {
	BoolValue bool `protobuf:"varint,5,opt,name=bool_value,json=boolValue,proto3,oneof"` // FIELD_TYPE_CHECKBOX
}

type AttachPropertyValueRequest_DateValue struct {
	DateValue *Date `protobuf:"bytes,6,opt,name=date_value,json=dateValue,proto3,oneof"` // FIELD_TYPE_DATE
}

type AttachPropertyValueRequest_DateTimeValue struct {
	DateTimeValue *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date_time_value,json=dateTimeValue,proto3,oneof"` // FIELD_TYPE_DATE_TIME
}

type AttachPropertyValueRequest_SelectValue struct {
	SelectValue string `protobuf:"bytes,8,opt,name=select_value,json=selectValue,proto3,oneof"` // FIELD_TYPE_SELECT, id of option
}

func (*AttachPropertyValueRequest_TextValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_NumberValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_BoolValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_DateValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_DateTimeValue) isAttachPropertyValueRequest_Value() {}

func (*AttachPropertyValueRequest_SelectValue) isAttachPropertyValueRequest_Value() {}

type AttachPropertyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyValueId string `protobuf:"bytes,1,opt,name=property_value_id,json=propertyValueId,proto3" json:"property_value_id,omitempty"`
}

func (x *AttachPropertyValueResponse) Reset() {
	*x = AttachPropertyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachPropertyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachPropertyValueResponse) ProtoMessage() {}

func (x *AttachPropertyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachPropertyValueResponse.ProtoReflect.Descriptor instead.
func (*AttachPropertyValueResponse) Descriptor() ([]byte, []int) {
	return file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP(), []int{1}
}

func (x *AttachPropertyValueResponse) GetPropertyValueId() string {
	if x != nil {
		return x.PropertyValueId
	}
	return ""
}

type TaskPropertyMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WardId *string `protobuf:"bytes,1,opt,name=ward_id,json=wardId,proto3,oneof" json:"ward_id,omitempty" validate:"omitempty,omitnil,uuid4"` // @gotags: validate:"omitempty,omitnil,uuid4"
	TaskId *string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty" validate:"omitempty,omitnil,uuid4"` // @gotags: validate:"omitempty,omitnil,uuid4"
}

func (x *TaskPropertyMatcher) Reset() {
	*x = TaskPropertyMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPropertyMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPropertyMatcher) ProtoMessage() {}

func (x *TaskPropertyMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPropertyMatcher.ProtoReflect.Descriptor instead.
func (*TaskPropertyMatcher) Descriptor() ([]byte, []int) {
	return file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP(), []int{2}
}

func (x *TaskPropertyMatcher) GetWardId() string {
	if x != nil && x.WardId != nil {
		return *x.WardId
	}
	return ""
}

func (x *TaskPropertyMatcher) GetTaskId() string {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return ""
}

type GetAttachedPropertyValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Matcher:
	//
	//	*GetAttachedPropertyValuesRequest_TaskMatcher
	Matcher isGetAttachedPropertyValuesRequest_Matcher `protobuf_oneof:"matcher"`
}

func (x *GetAttachedPropertyValuesRequest) Reset() {
	*x = GetAttachedPropertyValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesRequest) ProtoMessage() {}

func (x *GetAttachedPropertyValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesRequest.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesRequest) Descriptor() ([]byte, []int) {
	return file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP(), []int{3}
}

func (m *GetAttachedPropertyValuesRequest) GetMatcher() isGetAttachedPropertyValuesRequest_Matcher {
	if m != nil {
		return m.Matcher
	}
	return nil
}

func (x *GetAttachedPropertyValuesRequest) GetTaskMatcher() *TaskPropertyMatcher {
	if x, ok := x.GetMatcher().(*GetAttachedPropertyValuesRequest_TaskMatcher); ok {
		return x.TaskMatcher
	}
	return nil
}

type isGetAttachedPropertyValuesRequest_Matcher interface {
	isGetAttachedPropertyValuesRequest_Matcher()
}

type GetAttachedPropertyValuesRequest_TaskMatcher struct {
	TaskMatcher *TaskPropertyMatcher `protobuf:"bytes,1,opt,name=task_matcher,json=taskMatcher,proto3,oneof"`
}

func (*GetAttachedPropertyValuesRequest_TaskMatcher) isGetAttachedPropertyValuesRequest_Matcher() {}

type GetAttachedPropertyValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*GetAttachedPropertyValuesResponse_Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // TODO: TBD: Property Information for Values
}

func (x *GetAttachedPropertyValuesResponse) Reset() {
	*x = GetAttachedPropertyValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse) Descriptor() ([]byte, []int) {
	return file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP(), []int{4}
}

func (x *GetAttachedPropertyValuesResponse) GetValues() []*GetAttachedPropertyValuesResponse_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetAttachedPropertyValuesResponse_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId  string    `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	FieldType   FieldType `protobuf:"varint,2,opt,name=field_type,json=fieldType,proto3,enum=services.property_svc.v1.FieldType" json:"field_type,omitempty"`
	Name        string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description *string   `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsArchived  bool      `protobuf:"varint,5,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	// Types that are assignable to Value:
	//
	//	*GetAttachedPropertyValuesResponse_Value_TextValue
	//	*GetAttachedPropertyValuesResponse_Value_NumberValue
	//	*GetAttachedPropertyValuesResponse_Value_BoolValue
	//	*GetAttachedPropertyValuesResponse_Value_DateValue
	//	*GetAttachedPropertyValuesResponse_Value_DateTimeValue
	//	*GetAttachedPropertyValuesResponse_Value_SelectValue
	Value isGetAttachedPropertyValuesResponse_Value_Value `protobuf_oneof:"value"`
}

func (x *GetAttachedPropertyValuesResponse_Value) Reset() {
	*x = GetAttachedPropertyValuesResponse_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedPropertyValuesResponse_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedPropertyValuesResponse_Value) ProtoMessage() {}

func (x *GetAttachedPropertyValuesResponse_Value) ProtoReflect() protoreflect.Message {
	mi := &file_services_property_svc_v1_property_value_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedPropertyValuesResponse_Value.ProtoReflect.Descriptor instead.
func (*GetAttachedPropertyValuesResponse_Value) Descriptor() ([]byte, []int) {
	return file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetAttachedPropertyValuesResponse_Value) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *GetAttachedPropertyValuesResponse_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (m *GetAttachedPropertyValuesResponse_Value) GetValue() isGetAttachedPropertyValuesResponse_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *GetAttachedPropertyValuesResponse_Value) GetTextValue() string {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *GetAttachedPropertyValuesResponse_Value) GetNumberValue() float64 {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *GetAttachedPropertyValuesResponse_Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDateValue() *Date {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_DateValue); ok {
		return x.DateValue
	}
	return nil
}

func (x *GetAttachedPropertyValuesResponse_Value) GetDateTimeValue() *timestamppb.Timestamp {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_DateTimeValue); ok {
		return x.DateTimeValue
	}
	return nil
}

func (x *GetAttachedPropertyValuesResponse_Value) GetSelectValue() string {
	if x, ok := x.GetValue().(*GetAttachedPropertyValuesResponse_Value_SelectValue); ok {
		return x.SelectValue
	}
	return ""
}

type isGetAttachedPropertyValuesResponse_Value_Value interface {
	isGetAttachedPropertyValuesResponse_Value_Value()
}

type GetAttachedPropertyValuesResponse_Value_TextValue struct {
	TextValue string `protobuf:"bytes,6,opt,name=text_value,json=textValue,proto3,oneof"` // FIELD_TYPE_TEXT
}

type GetAttachedPropertyValuesResponse_Value_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,7,opt,name=number_value,json=numberValue,proto3,oneof"` // FIELD_TYPE_NUMBER
}

type GetAttachedPropertyValuesResponse_Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,8,opt,name=bool_value,json=boolValue,proto3,oneof"` // FIELD_TYPE_CHECKBOX
}

type GetAttachedPropertyValuesResponse_Value_DateValue struct {
	DateValue *Date `protobuf:"bytes,9,opt,name=date_value,json=dateValue,proto3,oneof"` // FIELD_TYPE_DATE
}

type GetAttachedPropertyValuesResponse_Value_DateTimeValue struct {
	DateTimeValue *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=date_time_value,json=dateTimeValue,proto3,oneof"` // FIELD_TYPE_DATE_TIME
}

type GetAttachedPropertyValuesResponse_Value_SelectValue struct {
	SelectValue string `protobuf:"bytes,11,opt,name=select_value,json=selectValue,proto3,oneof"` // FIELD_TYPE_SELECT, id of option
}

func (*GetAttachedPropertyValuesResponse_Value_TextValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_NumberValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_BoolValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_DateValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_DateTimeValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

func (*GetAttachedPropertyValuesResponse_Value_SelectValue) isGetAttachedPropertyValuesResponse_Value_Value() {
}

var File_services_property_svc_v1_property_value_svc_proto protoreflect.FileDescriptor

var file_services_property_svc_v1_property_value_svc_proto_rawDesc = []byte{
	0x0a, 0x31, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x02, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f,
	0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x49, 0x0a, 0x1b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x13, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0c, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x22, 0xf5, 0x04, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xf4, 0x03, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0xb6, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x96, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x3a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xd4, 0x01, 0x0a, 0x1c, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x15, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x76, 0x63, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2d, 0x73, 0x76, 0x63, 0xa2, 0x02, 0x03, 0x53, 0x50, 0x58, 0xaa, 0x02, 0x17, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53,
	0x76, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x23, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_property_svc_v1_property_value_svc_proto_rawDescOnce sync.Once
	file_services_property_svc_v1_property_value_svc_proto_rawDescData = file_services_property_svc_v1_property_value_svc_proto_rawDesc
)

func file_services_property_svc_v1_property_value_svc_proto_rawDescGZIP() []byte {
	file_services_property_svc_v1_property_value_svc_proto_rawDescOnce.Do(func() {
		file_services_property_svc_v1_property_value_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_property_svc_v1_property_value_svc_proto_rawDescData)
	})
	return file_services_property_svc_v1_property_value_svc_proto_rawDescData
}

var file_services_property_svc_v1_property_value_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_services_property_svc_v1_property_value_svc_proto_goTypes = []interface{}{
	(*AttachPropertyValueRequest)(nil),              // 0: services.property_svc.v1.AttachPropertyValueRequest
	(*AttachPropertyValueResponse)(nil),             // 1: services.property_svc.v1.AttachPropertyValueResponse
	(*TaskPropertyMatcher)(nil),                     // 2: services.property_svc.v1.TaskPropertyMatcher
	(*GetAttachedPropertyValuesRequest)(nil),        // 3: services.property_svc.v1.GetAttachedPropertyValuesRequest
	(*GetAttachedPropertyValuesResponse)(nil),       // 4: services.property_svc.v1.GetAttachedPropertyValuesResponse
	(*GetAttachedPropertyValuesResponse_Value)(nil), // 5: services.property_svc.v1.GetAttachedPropertyValuesResponse.Value
	(*Date)(nil),                  // 6: services.property_svc.v1.Date
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(FieldType)(0),                // 8: services.property_svc.v1.FieldType
}
var file_services_property_svc_v1_property_value_svc_proto_depIdxs = []int32{
	6, // 0: services.property_svc.v1.AttachPropertyValueRequest.date_value:type_name -> services.property_svc.v1.Date
	7, // 1: services.property_svc.v1.AttachPropertyValueRequest.date_time_value:type_name -> google.protobuf.Timestamp
	2, // 2: services.property_svc.v1.GetAttachedPropertyValuesRequest.task_matcher:type_name -> services.property_svc.v1.TaskPropertyMatcher
	5, // 3: services.property_svc.v1.GetAttachedPropertyValuesResponse.values:type_name -> services.property_svc.v1.GetAttachedPropertyValuesResponse.Value
	8, // 4: services.property_svc.v1.GetAttachedPropertyValuesResponse.Value.field_type:type_name -> services.property_svc.v1.FieldType
	6, // 5: services.property_svc.v1.GetAttachedPropertyValuesResponse.Value.date_value:type_name -> services.property_svc.v1.Date
	7, // 6: services.property_svc.v1.GetAttachedPropertyValuesResponse.Value.date_time_value:type_name -> google.protobuf.Timestamp
	0, // 7: services.property_svc.v1.PropertyValueService.AttachPropertyValue:input_type -> services.property_svc.v1.AttachPropertyValueRequest
	3, // 8: services.property_svc.v1.PropertyValueService.GetAttachedPropertyValues:input_type -> services.property_svc.v1.GetAttachedPropertyValuesRequest
	1, // 9: services.property_svc.v1.PropertyValueService.AttachPropertyValue:output_type -> services.property_svc.v1.AttachPropertyValueResponse
	4, // 10: services.property_svc.v1.PropertyValueService.GetAttachedPropertyValues:output_type -> services.property_svc.v1.GetAttachedPropertyValuesResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_services_property_svc_v1_property_value_svc_proto_init() }
func file_services_property_svc_v1_property_value_svc_proto_init() {
	if File_services_property_svc_v1_property_value_svc_proto != nil {
		return
	}
	file_services_property_svc_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_property_svc_v1_property_value_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachPropertyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_property_svc_v1_property_value_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachPropertyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_property_svc_v1_property_value_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPropertyMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_property_svc_v1_property_value_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_property_svc_v1_property_value_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_property_svc_v1_property_value_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedPropertyValuesResponse_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_property_svc_v1_property_value_svc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AttachPropertyValueRequest_TextValue)(nil),
		(*AttachPropertyValueRequest_NumberValue)(nil),
		(*AttachPropertyValueRequest_BoolValue)(nil),
		(*AttachPropertyValueRequest_DateValue)(nil),
		(*AttachPropertyValueRequest_DateTimeValue)(nil),
		(*AttachPropertyValueRequest_SelectValue)(nil),
	}
	file_services_property_svc_v1_property_value_svc_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_services_property_svc_v1_property_value_svc_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetAttachedPropertyValuesRequest_TaskMatcher)(nil),
	}
	file_services_property_svc_v1_property_value_svc_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetAttachedPropertyValuesResponse_Value_TextValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_NumberValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_BoolValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_DateValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_DateTimeValue)(nil),
		(*GetAttachedPropertyValuesResponse_Value_SelectValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_property_svc_v1_property_value_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_property_svc_v1_property_value_svc_proto_goTypes,
		DependencyIndexes: file_services_property_svc_v1_property_value_svc_proto_depIdxs,
		MessageInfos:      file_services_property_svc_v1_property_value_svc_proto_msgTypes,
	}.Build()
	File_services_property_svc_v1_property_value_svc_proto = out.File
	file_services_property_svc_v1_property_value_svc_proto_rawDesc = nil
	file_services_property_svc_v1_property_value_svc_proto_goTypes = nil
	file_services_property_svc_v1_property_value_svc_proto_depIdxs = nil
}
