# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from services.property_svc.v1 import property_set_svc_pb2 as services_dot_property__svc_dot_v1_dot_property__set__svc__pb2


class PropertySetServiceStub(object):
    """
    PropertySetService


    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePropertySet = channel.unary_unary(
                '/services.property_svc.v1.PropertySetService/CreatePropertySet',
                request_serializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.CreatePropertySetRequest.SerializeToString,
                response_deserializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.CreatePropertySetResponse.FromString,
                _registered_method=True)
        self.GetPropertySet = channel.unary_unary(
                '/services.property_svc.v1.PropertySetService/GetPropertySet',
                request_serializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.GetPropertySetRequest.SerializeToString,
                response_deserializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.GetPropertySetResponse.FromString,
                _registered_method=True)


class PropertySetServiceServicer(object):
    """
    PropertySetService


    """

    def CreatePropertySet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPropertySet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PropertySetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePropertySet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePropertySet,
                    request_deserializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.CreatePropertySetRequest.FromString,
                    response_serializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.CreatePropertySetResponse.SerializeToString,
            ),
            'GetPropertySet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPropertySet,
                    request_deserializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.GetPropertySetRequest.FromString,
                    response_serializer=services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.GetPropertySetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'services.property_svc.v1.PropertySetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('services.property_svc.v1.PropertySetService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PropertySetService(object):
    """
    PropertySetService


    """

    @staticmethod
    def CreatePropertySet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.property_svc.v1.PropertySetService/CreatePropertySet',
            services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.CreatePropertySetRequest.SerializeToString,
            services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.CreatePropertySetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPropertySet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.property_svc.v1.PropertySetService/GetPropertySet',
            services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.GetPropertySetRequest.SerializeToString,
            services_dot_property__svc_dot_v1_dot_property__set__svc__pb2.GetPropertySetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
