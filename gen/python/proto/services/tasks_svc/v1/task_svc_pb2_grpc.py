# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.services.tasks_svc.v1 import task_svc_pb2 as proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2


class TaskServiceStub(object):
    """
    TaskService


    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTask = channel.unary_unary(
                '/proto.services.tasks_svc.v1.TaskService/CreateTask',
                request_serializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.CreateTaskRequest.SerializeToString,
                response_deserializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.CreateTaskResponse.FromString,
                )
        self.GetTask = channel.unary_unary(
                '/proto.services.tasks_svc.v1.TaskService/GetTask',
                request_serializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.GetTaskRequest.SerializeToString,
                response_deserializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.GetTaskResponse.FromString,
                )


class TaskServiceServicer(object):
    """
    TaskService


    """

    def CreateTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTask,
                    request_deserializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.CreateTaskRequest.FromString,
                    response_serializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.CreateTaskResponse.SerializeToString,
            ),
            'GetTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTask,
                    request_deserializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.GetTaskRequest.FromString,
                    response_serializer=proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.GetTaskResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.services.tasks_svc.v1.TaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaskService(object):
    """
    TaskService


    """

    @staticmethod
    def CreateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.services.tasks_svc.v1.TaskService/CreateTask',
            proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.CreateTaskRequest.SerializeToString,
            proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.CreateTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.services.tasks_svc.v1.TaskService/GetTask',
            proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.GetTaskRequest.SerializeToString,
            proto_dot_services_dot_tasks__svc_dot_v1_dot_task__svc__pb2.GetTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
